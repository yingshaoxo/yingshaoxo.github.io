{"version":3,"sources":["/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/_typography.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/_transitions.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/_helpers.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/_grids.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_expansion-panels.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_lists.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_media.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/_colors.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_accessibility.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_autocompletes.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_text-fields.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_avatars.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_badges.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_bottom-navigations.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/_globals.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_buttons.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_papers.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_cards.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_chips.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_collapsers.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_data-tables.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_select-fields.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_dialogs.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_dividers.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_drawers.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_file-inputs.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_inks.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_icons.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_layovers.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_menus.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_navigation-drawers.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_overlays.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_pickers.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_progress.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_selection-controls.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_sliders.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_subheaders.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_snackbars.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_tabs.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_toolbars.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/node_modules/react-md/src/scss/components/_tooltips.scss","/home/yingshaoxo/Codes/Javascript/ai-tools/src/index.scss"],"names":[],"mappings":"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","file":"main.3f147ff1.chunk.css","sourcesContent":["////\n/// @group typography\n////\n@import 'globals';\n\n\n/// Boolean if the typography should extend the base html tags as well.\n/// @type Boolean\n$md-typography-extended: true !default;\n\n/// Boolean if the text container class name should be created by default. This class name\n/// is really used to keep a max line-width for text.\n/// @type Boolean\n$md-typography-include-text-container: true !default;\n\n/// Boolean if common text positioning/transforms/styles class names should be included by default.\n/// @type Boolean\n$md-typography-include-utilities: true !default;\n\n/// The font name to use throughout the application. It is recommended\n/// to use Roboto or Noto, but it can be whatever.\n/// @type String\n$md-font-name: Roboto !default;\n\n/// The font family for the application. This only combines the `$md-font-name`\n/// with a fallback font of `sans-serif`.\n/// @type String\n$md-font-family: '#{$md-font-name}', sans-serif !default;\n\n/// The max length a line of text can be.\n/// @type Number\n$md-typography-max-line-length: 640px !default;\n\n/// The min width to apply to the `html` tag. This is set mostly if you are using\n/// components that rely on hiding the main window's toolbar to prevent scrolling.\n///\n/// Setting this value to `null` will not update the `html` with the min-width.\n///\n/// @type Number\n$md-html-min-width: 100% !default;\n\n\n\n/// The light text weight.\n/// @type Number\n$md-font-light: 300 !default;\n\n/// The regular text weight.\n/// @type Number\n$md-font-regular: 400 !default;\n\n/// The medium text weight.\n/// @type Number\n$md-font-medium: 500 !default;\n\n/// The semibold text weight.\n/// @type Number\n$md-font-semibold: 600 !default;\n\n/// The bold text weight.\n/// @type Number\n$md-font-bold: 700 !default;\n\n/// A list of all the text weights. This is mainly used so you can\n/// loop over the weights and include locally hosted fonts.\n/// @type List\n/// @access private\n$md-font-weights: ($md-font-light $md-font-regular $md-font-medium $md-font-semibold $md-font-bold);\n\n\n/// The `.md-display-4` font size.\n/// @type Number\n$md-display-4-font-size: 112px !default;\n\n/// The `.md-display-4` line height.\n/// @type Number\n$md-display-4-line-height: 128px !default;\n\n/// The `.md-display-3` font size.\n/// @type Number\n$md-display-3-font-size: 56px !default;\n\n/// The `.md-display-3` line height.\n/// @type Number\n$md-display-3-line-height: 84px !default;\n\n\n/// The `.md-display-2` font size.\n/// @type Number\n$md-display-2-font-size: 45px !default;\n\n/// The `.md-display-2` line height.\n/// @type Number\n$md-display-2-line-height: 48px !default;\n\n\n/// The `.md-display-1` font size.\n/// @type Number\n$md-display-1-font-size: 34px !default;\n\n/// The `.md-display-1` line height.\n/// @type Number\n$md-display-1-line-height: 40px !default;\n\n\n/// The `.md-headline` font size.\n/// @type Number\n$md-headline-font-size: 24px !default;\n\n/// The `.md-headline` line height.\n/// @type Number\n$md-headline-line-height: 32px !default;\n\n\n/// The `.md-title` font size.\n/// @type Number\n$md-title-font-size: 20px !default;\n\n/// The `.md-title` line height.\n/// @type Number\n$md-title-line-height: 28px !default;\n\n\n/// The \\`.md-subheading-1` and `.md-subheading-2` font size for\n/// mobile devices.\n/// @type Number\n$md-subheading-mobile-font-size: 16px !default;\n\n/// The \\`.md-subheading-1` and `.md-subheading-2` font size for\n/// desktop screens.\n/// @type Number\n$md-subheading-desktop-font-size: 15px !default;\n\n/// The `.md-subheading-2` line height.\n/// @type Number\n$md-subheading-2-line-height: 28px !default;\n\n/// The `.md-subheading-1` line height.\n/// @type Number\n$md-subheading-1-line-height: 24px !default;\n\n/// The base font size. This is really just the mobile font size\n/// without the `px` suffix.\n/// @access private\n$md-font-size-base: 14 !default;\n\n/// The `.md-body-1` and `.md-body-2` font size for mobile devices.\n/// @type Number\n$md-body-mobile-font-size: #{$md-font-size-base}px !default;\n\n/// The `.md-body-1` and `.md-body-2` font size for\n/// desktop screens.\n/// @type Number\n$md-body-desktop-font-size: 13px !default;\n\n/// The `.md-body-2` font size.\n/// @type Number\n$md-body-2-line-height: 24px !default;\n\n/// The `.md-body-1` font size.\n/// @type Number\n$md-body-1-line-height: 20px !default;\n\n/// The `.md-caption` font size.\n/// @type Number\n$md-caption-font-size: 12px !default;\n\n/// The font icon size.\n/// @type Number\n/// @group icons\n$md-font-icon-size: 24px !default;\n\n/// The dense font icon size\n/// @type Number\n/// @group icons\n$md-font-icon-dense-size: 20px !default;\n\n/// The line height to use on almost all elements.\n/// @type Number\n$md-line-height: 20 / $md-font-size-base !default;\n\n\n/// A placeholder for styling a class with the material design tracking of -10.\n%md-tracking--10 {\n  letter-spacing: -.1px;\n}\n\n/// A placeholder for styling a class with the material design tracking of -5.\n%md-tracking--5 {\n  letter-spacing: -.05px;\n}\n\n/// A placeholder for styling a class with the material design tracking of 0.\n%md-tracking-0 {\n  letter-spacing: 0;\n}\n\n/// A placeholder for styling a class with the material design tracking of 5.\n%md-tracking-5 {\n  letter-spacing: .5px;\n}\n\n/// A placeholder for styling a class with the material design tracking of 10.\n%md-tracking-10 {\n  letter-spacing: .1px;\n}\n\n/// A placeholder for styling a class with the material design tracking of 20.\n%md-tracking-20 {\n  letter-spacing: .2px;\n}\n\n%md-display-1,\n%md-display-2,\n%md-display-3,\n%md-display-4,\n%md-headline,\n%md-title,\n%md-subheading-1,\n%md-subheading-2,\n%md-body-1,\n%md-body-2,\n%md-caption {\n  margin: 0;\n}\n\n%md-display-1,\n%md-display-2,\n%md-display-3,\n%md-display-4,\n%md-headline,\n%md-title {\n  margin-bottom: #{$md-font-size-base}px;\n}\n\n%md-subheading-1,\n%md-subheading-2,\n%md-body-1,\n%md-body-2,\n%md-caption {\n  margin-bottom: 10px;\n}\n\n\n\n%md-display-3,\n%md-display-4,\n%md-title {\n  white-space: nowrap;\n}\n\n%md-display-1,\n%md-display-2,\n%md-display-3,\n%md-headline,\n%md-subheading-1,\n%md-subheading-2,\n%md-body-1,\n%md-caption {\n  font-weight: $md-font-regular;\n}\n\n%md-title,\n%md-body-2 {\n  font-weight: $md-font-medium;\n}\n\n/// A placeholder for the Display 4 typography.\n%md-display-4 {\n  @extend %md-tracking--10;\n\n  font-size: $md-display-4-font-size;\n  font-weight: $md-font-light;\n  line-height: $md-display-4-line-height;\n}\n\n/// A placeholder for the Display 3 typography.\n%md-display-3 {\n  @extend %md-tracking--5;\n\n  font-size: $md-display-3-font-size;\n  line-height: $md-display-3-line-height;\n}\n\n/// A placeholder for the Display 2 typography.\n%md-display-2 {\n  @extend %md-tracking-0;\n\n  font-size: $md-display-2-font-size;\n  line-height: $md-display-2-line-height;\n}\n\n/// A placeholder for the Display 1 typography.\n%md-display-1 {\n  @extend %md-tracking-0;\n\n  font-size: $md-display-1-font-size;\n  line-height: $md-display-1-line-height;\n}\n\n/// A placeholder for the headline typography.\n%md-headline {\n  @extend %md-tracking-0;\n\n  font-size: $md-headline-font-size;\n  line-height: $md-headline-line-height;\n}\n\n/// A placeholder for the title typography.\n%md-title {\n  @extend %md-tracking-5;\n\n  font-size: $md-title-font-size;\n  line-height: $md-title-line-height;\n}\n\n/// A placeholder for the subheading-2 typography.\n%md-subheading-2 {\n  @extend %md-tracking-10;\n\n  line-height: $md-subheading-2-line-height;\n}\n\n/// A placeholder for the subheading-1 typography.\n%md-subheading-1 {\n  @extend %md-tracking-10;\n\n  line-height: $md-subheading-1-line-height;\n}\n\n/// A placeholder for the body-1 typography\n%md-body-1 {\n  @extend %md-tracking-10;\n\n  line-height: $md-body-1-line-height;\n}\n\n/// A placeholder for the body-2 typography\n%md-body-2 {\n  @extend %md-tracking-10;\n\n  line-height: $md-body-2-line-height;\n}\n\n\n/// A placeholder for the caption typography.\n%md-caption {\n  @extend %md-tracking-20;\n\n  font-size: $md-caption-font-size;\n}\n\n/// A simple placeholder for aligning text left.\n%md-text-left {\n  text-align: left;\n}\n\n/// A simple placeholder for aligning text center.\n%md-text-center {\n  text-align: center;\n}\n\n/// A simple placeholder for aligning text right.\n%md-text-right {\n  text-align: right;\n}\n\n/// A simple placeholder for aligning text by `text-align: justify`.\n%md-text-justify {\n  text-align: justify;\n}\n\n/// A simple placeholder for capitalizing text.\n%md-text-capitalize {\n  text-transform: capitalize;\n}\n\n/// A simple placeholder for lowercasing text.\n%md-text-lowercalse {\n  text-transform: lowercase;\n}\n\n/// A simple placeholder for uppercasing text.\n%md-text-uppercase {\n  text-transform: uppercase;\n}\n\n/// A simple placeholder for allowing no white space wrap.\n%md-text-nowrap {\n  white-space: nowrap;\n}\n\n/// A simple placeholder for setting `user-select: none`.\n%md-text-no-select {\n  user-select: none;\n}\n\n/// A simple placeholder for setting the font weight to the material design's light weight.\n%md-font-light {\n  font-weight: $md-font-light;\n}\n\n/// A simple placeholder for setting the font weight to the material design's regular weight.\n%md-font-regular {\n  font-weight: $md-font-regular;\n}\n\n/// A simple placeholder for setting the font weight to the material design's medium weight.\n%md-font-medium {\n  font-weight: $md-font-medium;\n}\n\n/// A simple placeholder for setting the font weight to the material design's semibold weight.\n%md-font-semibold {\n  font-weight: $md-font-semibold;\n}\n\n/// A simple placeholder for setting the font weight to the material design's bold weight.\n%md-font-bold {\n  font-weight: $md-font-bold;\n}\n\n/// This includes the CSS for simple typography in react-md. It will\n/// update all items to use `box-sizing: border-box`, set the font\n/// family, set the line-height, text-rendering, and create the base\n/// class names for the typography. If the `$extend-html-tags` is true,\n/// the `h1` - `h6`, `p`, and `caption` tags will be updated with the\n/// corresponding CSS class name.\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the application\n///     is using the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries\n///     should be included.\n/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should\n///     be updated or not.\n/// @param {Boolean} include-text-container [$md-typography-include-text-container] - Boolean if the\n///     text container class name should be included.\n/// @param {Boolean} include-utilities [$md-typography-include-utilities] - Boolean if the\n///     text helper class names should be included.\n@mixin react-md-typography(\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $extend-html-tags: $md-typography-extended,\n  $include-text-container: $md-typography-include-text-container,\n  $include-utilities: $md-typography-include-utilities\n) {\n  $md-text-color: get-color('text', $light-theme);\n  $md-secondary-text-color: get-color('secondary', $light-theme);\n  $md-hint-text-color: get-color('hint', $light-theme);\n  $md-disabled-text-color: get-color('disabled', $light-theme);\n\n  @if $include-media {\n    @include react-md-typography-media($extend-html-tags);\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    // scss-lint:disable ColorVariable\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    transition-timing-function: $md-transition-standard;\n  }\n\n  html {\n    background: if($light-theme, $md-light-theme-background-color, $md-dark-theme-background-color);\n    font-size: #{$md-font-size-base}px;\n    min-width: $md-html-min-width;\n  }\n\n  body {\n    font-family: $md-font-family;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-weight: $md-font-regular;\n    line-height: $md-line-height;\n    text-rendering: optimizeLegibility;\n  }\n\n  %md-headline,\n  %md-title,\n  %md-subheading-2,\n  %md-subheading-1,\n  %md-body-2,\n  %md-body-1 {\n    color: $md-text-color;\n  }\n\n  %md-display-4,\n  %md-display-3,\n  %md-display-2,\n  %md-display-1,\n  %md-caption {\n    color: $md-secondary-text-color;\n  }\n\n  @if $extend-html-tags {\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    button,\n    input,\n    textarea,\n    html {\n      font-family: $md-font-family;\n    }\n\n    h1 {\n      @extend %md-display-1;\n    }\n\n    h2 {\n      @extend %md-headline;\n    }\n\n    h3 {\n      @extend %md-title;\n    }\n\n    h4 {\n      @extend %md-subheading-2;\n    }\n\n    h5 {\n      @extend %md-subheading-1;\n    }\n\n    h6 {\n      @extend %md-body-2;\n    }\n\n    p {\n      @extend %md-body-1;\n    }\n\n    caption {\n      @extend %md-caption;\n    }\n  }\n\n  .md-display-1 {\n    @extend %md-display-1;\n  }\n\n  .md-display-2 {\n    @extend %md-display-2;\n  }\n\n  .md-display-3 {\n    @extend %md-display-3;\n  }\n\n  .md-display-4 {\n    @extend %md-display-4;\n  }\n\n  .md-headline {\n    @extend %md-headline;\n  }\n\n  .md-title {\n    @extend %md-title;\n  }\n\n  .md-subheading-1 {\n    @extend %md-subheading-1;\n  }\n\n  .md-subheading-2 {\n    @extend %md-subheading-2;\n  }\n\n  .md-body-1 {\n    @extend %md-body-1;\n  }\n\n  .md-body-2 {\n    @extend %md-body-2;\n  }\n\n  .md-caption {\n    @extend %md-caption;\n  }\n\n  @if $include-utilities {\n    @include react-md-typography-utilities;\n  }\n\n  @if $include-text-container {\n    @include react-md-typography-text-container;\n  }\n}\n\n/// Creates a utility class name for containing long amounts of text. This is set up\n/// to center the text in the page and keep the line width to the `$md-typography-max-line-length`.\n@mixin react-md-typography-text-container {\n  .md-text-container {\n    @extend %md-block-centered;\n\n    max-width: $md-typography-max-line-length;\n    width: 100%;\n\n    &.md-text-container.md-cell {\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n\n/// Creates utility class names for common text positioning and transforms.\n@mixin react-md-typography-utilities {\n  .md-text-left {\n    @extend %md-text-left;\n  }\n\n  .md-text-center {\n    @extend %md-text-center;\n  }\n\n  .md-text-right {\n    @extend %md-text-right;\n  }\n\n  .md-text-justify {\n    @extend %md-text-justify;\n  }\n\n  .md-text-capitalize {\n    @extend %md-text-capitalize;\n  }\n\n  .md-text-lowercalse {\n    @extend %md-text-lowercalse;\n  }\n\n  .md-text-uppercase {\n    @extend %md-text-uppercase;\n  }\n\n  .md-text-nowrap {\n    @extend %md-text-nowrap;\n  }\n\n  .md-text-no-select {\n    @extend %md-text-no-select;\n  }\n\n  .md-font-light {\n    @extend %md-font-light;\n  }\n\n  .md-font-regular {\n    @extend %md-font-regular;\n  }\n\n  .md-font-medium {\n    @extend %md-font-medium;\n  }\n\n  .md-font-semibold {\n    @extend %md-font-semibold;\n  }\n\n  .md-font-bold {\n    @extend %md-font-bold;\n  }\n}\n\n/// Creates the CSS for typography on mobile devices. If the `$extend-html-tags` param is true,\n/// the `h6`, `h5`, `h4`, and `p` tags will also be modified. This should most likely be used within\n/// a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-typography-mobile;\n///   }\n///\n/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should\n///     be updated.\n/// @group typography, media-queries\n@mixin react-md-typography-mobile($extend-html-tags: $md-typography-extended) {\n  .md-subheading-2,\n  .md-subheading-1 {\n    font-size: $md-subheading-mobile-font-size;\n  }\n\n  .md-body-2,\n  .md-body-1 {\n    font-size: $md-body-mobile-font-size;\n  }\n\n  @if $extend-html-tags {\n    h5,\n    h4 {\n      font-size: $md-subheading-mobile-font-size;\n    }\n\n    h6,\n    p {\n      font-size: $md-body-mobile-font-size;\n    }\n  }\n}\n\n/// Creates the CSS for typography on desktop screens. If the `$extend-html-tags` param is true,\n/// the `h6`, `h5`, `h4`, and `p` tags will also be modified. This should most likely be used within\n/// a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-typography-desktop;\n///   }\n///\n/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should\n///     be updated.\n/// @group typography, media-queries\n@mixin react-md-typography-desktop($extend-html-tags: $md-typography-extended) {\n  .md-subheading-2,\n  .md-subheading-1 {\n    font-size: $md-subheading-desktop-font-size;\n  }\n\n  .md-body-2,\n  .md-body-1 {\n    font-size: $md-body-desktop-font-size;\n  }\n\n  @if $extend-html-tags {\n    h5,\n    h4 {\n      font-size: $md-subheading-desktop-font-size;\n    }\n\n    h6,\n    p {\n      font-size: $md-body-desktop-font-size;\n    }\n  }\n}\n\n/// Includes the mobile and desktop media queries for typography. If the `$extend-html-tags` param is true,\n/// the `h6`, `h5`, `h4`, and `p` tags will also be modified.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-typography-media;\n///\n/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should\n///     be updated.\n/// @group typography, media-queries\n@mixin react-md-typography-media($extend-html-tags: $md-typography-extended) {\n  @media #{$md-mobile-media} {\n    @include react-md-typography-mobile($extend-html-tags);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-typography-desktop($extend-html-tags);\n  }\n}\n\n/// Updates the theme of the typography ONLY if the `$light-theme` does not equal `$md-light-theme`.\n/// You will need to apply this `$html-class-name` to the `html` tag to get the effects. This is because\n/// the base `html` tag had the background color set which everything inherits.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-typography(dark-theme, false);\n///\n/// @example scss - Example Usage CSS Output\n///   .dark-theme {\n///     background: #303030;\n///   }\n///\n///   .dark-theme .md-headline,\n///   .dark-theme .md-title,\n///   .dark-theme .md-subheading-2,\n///   .dark-theme .md-subheading-1,\n///   .dark-theme .md-body-2,\n///   .dark-theme .md-body-1,\n///   .dark-theme h4,\n///   .dark-theme h3,\n///   .dark-theme h2,\n///   .dark-theme h1,\n///   .dark-theme p {\n///     color: #fff;\n///   }\n///\n///   .dark-theme .md-display-1,\n///   .dark-theme .md-caption,\n///   .dark-theme h1,\n///   .dark-theme caption {\n///     color: rgba(#fff, .7);\n///   }\n///\n/// @param {String} html-class-name - The class name to use for the html tag.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should be\n///     styled as well.\n/// @group typography, themes\n@mixin react-md-theme-typography($html-class-name, $light-theme: $md-light-theme, $extend-html-tags: $md-typography-extended) {\n  @if $light-theme != $md-light-theme {\n    .#{$html-class-name} {\n      background: get-color('background', $light-theme);\n\n      .md-headline,\n      .md-title,\n      .md-subheading-2,\n      .md-subheading-1,\n      .md-body-2,\n      .md-body-1 {\n        color: get-color('text', $light-theme);\n      }\n\n      .md-display-4,\n      .md-display-3,\n      .md-display-2,\n      .md-display-1,\n      .md-caption {\n        color: get-color('secondary', $light-theme);\n      }\n\n      @if $extend-html-tags {\n        h6,\n        h5,\n        h4,\n        h3,\n        h2,\n        h1,\n        p {\n          color: get-color('text', $light-theme);\n        }\n\n        h1,\n        caption {\n          color: get-color('secondary', $light-theme);\n        }\n\n      }\n\n    }\n  }\n}\n\n/// Converts a font weight into the google font suffix.\n///\n/// @param {Number} $font-weight - The font weight to convert\n/// @return {String} the font suffix\n@function get-font-suffix($font-weight) {\n  $font-weights: (\n    $md-font-light: '-Light',\n    $md-font-regular: '-Regular',\n    $md-font-medium: '-Medium',\n    $md-font-semibold: '-SemiBold',\n    $md-font-bold: '-Bold',\n  );\n\n  $suffix: map-get($font-weights, $font-weight);\n  @if not $suffix {\n    @warn \"The given font weight '#{$font-weight}' is not one of the four material design weights.\";\n  }\n\n  @return $suffix;\n}\n\n/// Creates a font face for a locally hosted google font\n///\n/// @example scss - Basic Usage Sass\n///   @include host-google-font(Roboto, 400);\n///   @include host-google-font(Roboto, 500, my-special-fonts);\n///\n/// @example scss - Basic Usage CSS Output\n///   @font-face {\n///     font-family: 'Roboto';\n///     font-style: normal;\n///     font-weight: 400;\n///     src: local('Roboto'),\n///          local('Roboto-Regular'),\n///          url(/fonts/roboto/Roboto-Regular.ttf) format('truetype');\n///   }\n///\n///   @font-face {\n///     font-family: 'Roboto';\n///     font-style: normal;\n///     font-weight: 500;\n///     src: local('Roboto'),\n///          local('Roboto-Medium'),\n///          url(my-sepcial-fonts/Roboto-Medium.ttf) format('truetype');\n///   }\n///\n/// @param {String} $font-name [Roboto] - The font name to create a font face for\n/// @param {Number} $font-weight [400] - The font weight of the google font\n/// @param {String} $fonts-url - The url to your fonts.\n/// @require get-font-suffix - The function to convert a font weight to a font suffix.\n@mixin host-google-font($font-name: Roboto, $font-weight: 400, $fonts-url: null) {\n  $full-font-name: str-replace($font-name, ' ') + get-font-suffix($font-weight);\n\n  $fonts-url: if($fonts-url == null, '/fonts/' + to-lower-case(str-replace($font-name, ' ', '-')), $fonts-url);\n  $fonts-url: if(char-at($fonts-url) != '/', $fonts-url + '/', $fonts-url);\n\n  @font-face {\n    font-family: quote($font-name);\n    font-style: normal;\n    font-weight: $font-weight;\n\n    src: local(#{quote($font-name)}), local(#{quote($full-font-name)}), url($fonts-url + $full-font-name + '.ttf') format('truetype');\n  }\n}\n\n/// Hosts the material icon font library locally by declaring the font face\n/// and the .material-icons CSS class.\n///\n/// @example scss - Basic Usage Sass\n///   @include host-material-icons('/fonts/material-icons');\n///\n/// @example scss - Basic Usage CSS Output\n///   @font-face {\n///     font-family: 'Material Icons';\n///     font-style: normal;\n///     font-weight: 400;\n///     src: url(/fonts/material-icons/MaterialIcons-Regular.eot');\n///     src: local('Material Icons'),\n///          local('MaterialIcons-Regular'),\n///          url(/fonts/material-icons/MaterialIcons-Regular.woff2') format('woff2'),\n///          url(/fonts/material-icons/MaterialIcons-Regular.woff') format('woff'),\n///          url(/fonts/material-icons/MaterialIcons-Regular.ttf') format('truetype');\n///   }\n///\n///   .material-icons {\n///     direction: ltr;\n///     display: inline-block;\n///     font-family: 'Material Icons';\n///     // Support for IE.\n///     font-feature-settings: 'liga';\n///     font-size: $md-font-icon-size;\n///     // Support for Firefox.\n///     -moz-osx-font-smoothing: grayscale;\n///     // Support for all WebKit browsers.\n///     -webkit-font-smoothing: antialiased;\n///     font-style: normal;\n///     font-weight: normal;\n///     height: 1em;\n///     letter-spacing: normal;\n///     line-height: 1;\n///     // Support for Safari and Chrome.\n///     text-rendering: optimizeLegibility;\n///     text-transform: none;\n///     white-space: nowrap;\n///     width: 1em;\n///     word-wrap: normal;\n/// \t}\n///\n/// @param {String} $font-url ['/fonts/material-icons'] - The path to the material icons fonts\n@mixin host-material-icons($font-url: '/fonts/material-icons') {\n  $icon-link: $font-url + '/MaterialIcons-Regular';\n  @font-face {\n    font-family: 'Material Icons';\n    font-style: normal;\n    font-weight: 400;\n    src: url($icon-link + '.eot');\n    // scss-lint:disable SpaceAfterComma\n    src: local('Material Icons'),\n         local('MaterialIcons-Regular'),\n         url($icon-link + '.woff2') format('woff2'),\n         url($icon-link + '.woff') format('woff'),\n         url($icon-link + '.ttf') format('truetype');\n    // scss-lint:enable SpaceAfterComma\n  }\n\n  .material-icons {\n    direction: ltr;\n    display: inline-block;\n    font-family: 'Material Icons';\n    // Support for IE.\n    font-feature-settings: 'liga';\n    font-size: $md-font-icon-size;\n    // Support for Firefox.\n    -moz-osx-font-smoothing: grayscale;\n    // Support for all WebKit browsers.\n    -webkit-font-smoothing: antialiased;\n    font-style: normal;\n    font-weight: normal;\n    letter-spacing: normal;\n    line-height: 1;\n    // Support for Safari and Chrome.\n    text-rendering: optimizeLegibility;\n    text-transform: none;\n    white-space: nowrap;\n    word-wrap: normal;\n\t}\n}\n\n/// Replace `$search` with `$replace` in `$string`\n/// @author Hugo Giraudel\n/// @param {String} $string - Initial string\n/// @param {String} $search - Substring to replace\n/// @param {String} $replace ('') - New value\n/// @return {String} - Updated string\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n","////\n/// @group transitions\n/// @link https://material.google.com/motion/duration-easing.html#duration-easing-common-durations\n////\n\n/// The transition function for objects that may return to the screen at any time.\n/// @type Number\n/// @group transitions\n$md-transition-sharp: cubic-bezier(.4, 0, .6, 1) !default;\n\n/// The transition function for growing and shrinking material, among other property changes. This\n/// is the most common and applied to every element by default.\n/// @type Number\n$md-transition-standard: cubic-bezier(.4, 0, .2, 1) !default;\n\n/// The transition function for objects that enter the screen at full velocity from off-screen\n/// and slowly decelerate to a resting point.\n/// @type Number\n$md-transition-acceleration: cubic-bezier(.4, 0, 1, 1) !default;\n\n/// The transition function for objects that leave the screen at full velocity.\n/// @type Number\n$md-transition-deceleration: cubic-bezier(0, 0, .2, 1) !default;\n\n\n\n/// A placeholder for getting the sharp transition. The transition function for objects\n/// that may return to the screen at any time.\n%md-transition--sharp {\n  transition-timing-function: $md-transition-sharp;\n}\n\n/// A placeholder for getting the standard (and default) transition. The transition function\n/// for growing and shrinking material, among other property changes.\n%md-transition--standard {\n  transition-timing-function: $md-transition-standard;\n}\n\n/// A placeholder for getting the acceleration transition. The transition function for objects\n/// that enter the screen at full velocity from off-screen and slowly decelerate to a resting point.\n%md-transition--acceleration {\n  transition-timing-function: $md-transition-acceleration;\n}\n\n/// A placeholder for getting the deceleration transition. The transition function for objects that\n/// leave the screen at full velocity.\n%md-transition--decceleration, // remove in next major release\n%md-transition--deceleration {\n  transition-timing-function: $md-transition-deceleration;\n}\n\n/// Includes some class names for adding the different transitions for\n/// material design.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-transitions;\n///\n/// @example markdown - ClassNames Created\n///   - `md-transition--acceleration`\n///   - `md-transition--deceleration`\n///   - `md-transition--sharp`\n///   - `md-transition--standard`\n///\n@mixin react-md-transitions {\n  .md-transition {\n    &--sharp {\n      @extend %md-transition--sharp;\n    }\n\n    &--standard {\n      @extend %md-transition--standard;\n    }\n\n    &--acceleration {\n      @extend %md-transition--acceleration;\n    }\n\n    &--decceleration, // remove in next major release\n    &--deceleration {\n      @extend %md-transition--deceleration;\n    }\n  }\n}\n","////\n/// @group helpers\n////\n\n/// A placeholder for displaying an element inline\n%md-inline-block {\n  display: inline-block;\n  vertical-align: bottom;\n}\n\n/// A simple placeholder for setting the width to 100%.\n%md-full-width {\n  width: 100%;\n}\n\n/// A simple placeholder for centering an item.\n%md-block-centered {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n/// Creates all the styles for the helpers\n@mixin react-md-helpers-everything {\n  @include react-md-helpers-blocks;\n}\n\n/// Creates the styles for different type of blocks.\n@mixin react-md-helpers-blocks {\n  .md-inline-block {\n    @extend %md-inline-block;\n  }\n\n  .md-full-width {\n    @extend %md-full-width;\n  }\n\n  .md-block-centered {\n    @extend %md-block-centered;\n  }\n}\n\n\n@function is-map($var) {\n  @return type-of($var) == 'map';\n}\n\n@function map-value-default($map, $key, $value: null) {\n  $map-value: map-get($map, $key);\n  @return if($map-value, $map-value, $value);\n}\n","////\n/// @group grids\n////\n\n/// The number of columns to use for mobile devices. This _should_\n/// probably not be changed.\n/// @type Number\n$md-grid-phone-columns: 4 !default;\n\n/// The margin to use for grids on mobile devices. This should be\n/// one of the values in `$md-grid-available-margins-and-gutters`.\n/// @type Number\n/// @see md-grid-available-margins-and-gutters\n$md-grid-phone-margin: 16px !default;\n\n/// The gutter to use for grids on mobile devices. This should be\n/// one of the values in `$md-grid-available-margins-and-gutters`.\n/// @type Number\n/// @see md-grid-available-margins-and-gutters\n$md-grid-phone-gutter: 16px !default;\n\n\n/// The breakpoint to use for modifying the grid for tablet devices.\n/// @type Number\n$md-grid-tablet-breakpoint: 600px !default;\n\n/// The number of columns to use for tablet devices. This _should_\n/// probably not be changed.\n/// @type Number\n$md-grid-tablet-columns: 8 !default;\n\n/// The margin to use for grids on tablet devices. This should be\n/// one of the values in `$md-grid-available-margins-and-gutters`.\n/// @type Number\n/// @see md-grid-available-margins-and-gutters\n$md-grid-tablet-margin: $md-grid-phone-gutter !default;\n\n/// The gutter to use for grids on tablet devices. This should be\n/// one of the values in `$md-grid-available-margins-and-gutters`.\n/// @type Number\n/// @see md-grid-available-margins-and-gutters\n$md-grid-tablet-gutter: $md-grid-phone-gutter !default;\n\n\n/// The breakpoint to use for modifying the grid for desktop / larger\n/// screens.\n/// @type Number\n$md-grid-desktop-breakpoint: 840px !default;\n\n/// The number of columns to use for grids on desktop / larger screens.\n/// @type Number\n$md-grid-desktop-columns: 12 !default;\n\n/// The margin to use for grids on desktop screens. This should be\n/// one of the values in `$md-grid-available-margins-and-gutters`.\n/// @type Number\n/// @see md-grid-available-margins-and-gutters\n$md-grid-desktop-margin: $md-grid-phone-margin !default;\n\n/// The gutter to use for grids on desktop screens. This should be\n/// one of the values in `$md-grid-available-margins-and-gutters`.\n/// @type Number\n/// @see md-grid-available-margins-and-gutters\n$md-grid-desktop-gutter: $md-grid-phone-gutter !default;\n\n/// The possible margins and gutters that can be used in a grid.\n/// @type List\n$md-grid-available-margins-and-gutters: (8px 16px 24px 40px) !default;\n\n/// The number of columns to include in the entire grid system.\n/// @type Number\n$md-grid-default-columns: $md-grid-phone-columns !default;\n\n/// The max number of columns to include in the entire grid system.\n/// @type Number\n$md-grid-max-columns: $md-grid-desktop-columns !default;\n\n/// A simple utility placeholder for positioning a cell to the right.\n%md-cell--right {\n  margin-left: auto;\n}\n\n/// Creates the styles for grids in material design. This basically\n/// creates a main flex container `.md-grid` that will style cells\n/// with appropriate margins and widths.\n///\n/// The following classes will be created:\n/// - `.md-grid` - The main flex container. You should use this along with the `.md-cell` to get\n/// the correct gutter and margins for a material design page.\n/// - `md-grid--stacked` - This will allow the grid to be column based instead of row based.\n/// - `.md-grid--no-spacing` - An optional class name to use with the `.md-grid`. When they are used\n/// together, all the margins and spacings will be removed from the grid.\n/// - `.md-cell` - The main container for a column or cell in the grid. If this is used alone, the default\n/// behavior is to display 1 cell per row on mobile devices, 2 cells per row on tablets, and 3 cells per row\n/// on desktop / larger screens. For more fine tuning, it can be used along with one of the following.\n/// - `.md-cell--right` - This simply applies `margin-left: auto` to a cell. This is basically the same as applying\n/// `float: right` in a row.\n/// - `.md-cell--top` - This aligns the cell to the top of a row.\n/// - `.md-cell--middle` - This aligns the cell to the middle of a row vertically.\n/// - `.md-cell--center` - This aligns the cell to the center of a row horizontally.\n/// - `.md-cell--bottom` - This aligns the cell to the bottom of a row.\n/// - `.md-cell--stretch` - This aligns the cell to stretch the entire height of a row. This is the default behavior.\n/// - `.md-cell--NUMBER` - This is will allow a cell to span this many columns on all media sizes. When the `NUMBER`\n/// is greater than the number of columns allowed for a media device, it will span the entire row. This basically means\n/// that if you are using the base configuration options and following the material design specs, mobile devices only\n/// allow 4 columns per row, tablets 8 per row, and desktops 12. So specifying `.md-cell .md-cell--6` would span an\n/// entire row on mobile devices, 3/4 of a row on tablets, and 1/2 of a row on desktops.\n/// - `.md-cell--NUMBER-offset` - This will offset the cell by the given number of columns. If the `number` is greater\n/// than the maximum amount of columns allowed for the device's screen size, an entire row will be blank.\n/// - `.md-cell--NUMBER-phone` - This will set the cell's size only for mobile devices.\n/// - `.md-cell--NUMBER-tablet` - This will set the cell's size only for tablet devices.\n/// - `.md-cell--NUMBER-desktop` - This will set the cell's size only for desktop / large screens.\n/// - `.md-cell--NUMBER-phone-offset` - This will offset the cell's position only for mobile devices.\n/// - `.md-cell--NUMBER-tablet-offset` - This will offset the cell's position for tablet devices.\n/// - `.md-cell--NUMBER-desktop-offset` - This will offset the cell's position for desktop / large screens.\n/// - `.md-cell--phone-hidden` - This will hide a cell only for mobile devices.\n/// - `.md-cell--tablet-hidden` - This will hide a cell only for tablet devices.\n/// - `.md-cell--desktop-hidden` - This will hide a cell only for desktop / large screens.\n/// - `.md-cell--order-NUMBER` - This is an optional class name you can apply if you want this item to appear in a different\n/// order on the grid.\n/// - `.md-cell--order-NUMBER-phone` - This will set the cell's order only for mobile devices.\n/// - `.md-cell--order-NUMBER-tablet` - This will set the cell's order only for tablet devices.\n/// - `.md-cell--order-NUMBER-desktop` - This will set the cell's order only for desktop / large screens.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-grid;\n///\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should be included as well.\n///     If this is false, you will manually need to call the media mixins to get any useful grid.\n@mixin react-md-grid($include-media: $md-media-included) {\n  .md-grid {\n    align-items: stretch;\n    display: flex;\n    flex-flow: row wrap;\n    margin: 0 auto;\n\n    &.md-grid--no-spacing {\n      padding: 0;\n\n      > .md-cell {\n        margin: 0;\n\n        // scss-lint:disable SelectorDepth, NestingDepth\n        &.md-cell--right {\n          @extend %md-cell--right;\n        }\n      }\n    }\n\n    &--stacked {\n      flex-direction: column;\n    }\n  }\n\n  .md-cell {\n    &--top {\n      align-self: flex-start;\n    }\n\n    &--middle {\n      align-self: center;\n    }\n\n    &--center {\n      margin-left: auto;\n      margin-right: auto;\n    }\n\n    &--bottom {\n      align-self: flex-end;\n    }\n\n    &--stretch {\n      align-self: stretch;\n    }\n\n    &--right {\n      @extend %md-cell--right;\n    }\n  }\n\n\n  @if $include-media {\n    @include react-md-grid-media;\n  }\n}\n\n/// A mixin to create a grid with specific max-sizes at the different media queries.\n///\n/// @example scss - Example SCSS Usage\n///   @include react-md-make-grid-container(1000, 'custom-grid', 240, 500, 800);\n///   @include react-md-make-grid-cotnainer(600, 'custom-grid-2', 240);\n///\n///   $sizes: (\n///     default: 1500px,\n///     mobile: 240px,\n///     tablet: 600px,\n///     desktop: 1100px\n///   );\n///   @include react-md-make-grid-container($sizes, 'custom-grid-3');\n///\n/// @param {Map|Number} max-width - This can either me a Map of `default`, `mobile`, `tablet`, and `desktop` to set\n///     specific sizes at different media types, or a number to apply across all devices.\n/// @param {String} name [null] - An optional name to apply to the grid. It is recommended to apply a name so that\n///     all grids do not gain these styles.\n/// @param {Number} mobile-max-width [null] - An optional max-width to only apply to mobile devices.\n/// @param {Number} tablet-max-width [null] - An optional max-width to only apply to tablet devices.\n/// @param {Number} desktop-max-width [null] - An optional max-width to only apply to desktop screens.\n@mixin react-md-make-grid-container($max-width, $name: null, $mobile-max-width: null, $tablet-max-width: null, $desktop-max-width: null) {\n  $class-name: \".md-grid#{if($name == null, '', '--#{$name}')}\";\n\n  $mobile-width: $mobile-max-width;\n  $tablet-width: $tablet-max-width;\n  $desktop-width: $desktop-max-width;\n\n  @if is-map($max-width) {\n    $mobile-width: map-value-default($max-width, 'mobile', $mobile-width);\n    $tablet-width: map-value-default($max-width, 'tablet', $tablet-width);\n    $desktop-width: map-value-default($max-width, 'desktop', $desktop-width);\n    $max-width: map-value-default($max-width, 'default');\n  }\n\n  #{$class-name} {\n    max-width: $max-width;\n\n\n    @media (max-width: $md-grid-tablet-breakpoint - 1) {\n      max-width: $mobile-width;\n    }\n\n    @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n      max-width: $tablet-width;\n    }\n\n    @media (min-width: $md-grid-desktop-breakpoint) {\n      max-width: $desktop-width;\n    }\n  }\n}\n\n/// Creates a grid for mobile devices. This should normally be used in a media query\n/// or the `react-md-grid-media` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @media (max-width: $md-grid-tablet-breakpoint - 1) {\n///     @include react-md-grid-mobile;\n///   }\n///\n/// @param {Number} columns [$md-grid-phone-columns] - The number of columns to use.\n/// @param {Number} margin [$md-grid-phone-margin] - The margin to use.\n/// @param {Number} gutter [$md-grid-phone-gutter] - The gutter to use.\n/// @group grids, media-queries\n@mixin react-md-grid-mobile($columns: $md-grid-phone-columns, $margin: $md-grid-phone-margin, $gutter: $md-grid-phone-gutter) {\n  @include react-md-make-grid('phone', $columns, $margin, $gutter);\n}\n\n\n/// Creates a grid for tablet devices. This should normally be used in a media query\n/// or the `react-md-grid-media` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n///     @include react-md-grid-tablet;\n///   }\n///\n/// @param {Number} columns [$md-grid-tablet-columns] - The number of columns to use.\n/// @param {Number} margin [$md-grid-tablet-margin] - The margin to use.\n/// @param {Number} gutter [$md-grid-tablet-gutter] - The gutter to use.\n/// @group grids, media-queries\n@mixin react-md-grid-tablet($columns: $md-grid-tablet-columns, $margin: $md-grid-tablet-margin, $gutter: $md-grid-tablet-gutter) {\n  @include react-md-make-grid('tablet', $columns, $margin, $gutter);\n}\n\n\n/// Creates a grid for desktops and larger screens. This should normally be used in a media query\n/// or the `react-md-grid-media` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @media (min-width: $md-grid-desktop-breakpoint) {\n///     @include react-md-grid-desktop;\n///   }\n///\n/// @param {Number} columns [$md-grid-desktop-columns] - The number of columns to use.\n/// @param {Number} margin [$md-grid-desktop-margin] - The margin to use.\n/// @param {Number} gutter [$md-grid-desktop-gutter] - The gutter to use.\n/// @group grids, media-queries\n@mixin react-md-grid-desktop($columns: $md-grid-desktop-columns, $margin: $md-grid-desktop-margin, $gutter: $md-grid-desktop-gutter) {\n  @include react-md-make-grid('desktop', $columns, $margin, $gutter);\n}\n\n/// This creates another custom grid with a suffix. This is really only useful if\n/// you will have different grid layouts in your application depending on the page.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-custom-grid('24-40', 24px, 40px);\n///\n/// @example scss - Example Usage CSS Output\n///   .md-grid--24-40 {\n///     ... styles ...\n///   }\n///\n/// @param {String} suffix - The suffix to apply to the end of `.md-grid--`.\n/// @param {Number} margin - The margin to use. This must be unitful number.\n/// @param {Number} gutter - The gutter to use. This must be unitful number.\n/// @param {Number} phone-columns [$md-grid-phone-columns] - The number of columns to use on mobile\n///     devices. If this value is less than or equal to 0, the phone media query will not be created.\n/// @param {Number} tablet-columns [$md-grid-tablet-columns] - The number of columns to use on mobile\n///     devices. If this value is less than or equal to 0, the tablet media query will not be created.\n/// @param {Number} desktop-columns [$md-grid-desktop-columns] - The number of columns to use on mobile\n///     devices. If this value is less than or equal to 0, the desktop media query will not be created.\n@mixin react-md-make-custom-grid(\n  $suffix,\n  $margin,\n  $gutter,\n  $phone-columns: $md-grid-phone-columns,\n  $tablet-columns: $md-grid-tablet-columns,\n  $desktop-columns: $md-grid-desktop-columns\n) {\n  @if $phone-columns > 0 {\n    @media (max-width: $md-grid-tablet-breakpoint - 1) {\n      @include react-md-make-grid('phone', $phone-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $tablet-columns > 0 {\n    @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n      @include react-md-make-grid('tablet', $tablet-columns, $margin, $gutter, $suffix);\n    }\n  }\n\n  @if $desktop-columns > 0 {\n    @media (min-width: $md-grid-desktop-breakpoint) {\n      @include react-md-make-grid('desktop', $desktop-columns, $margin, $gutter, $suffix);\n    }\n  }\n}\n\n/// Creates the grid with the given params.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-make-grid('phone', $md-grid-phone-columns, $md-grid-phone-margin, $md-grid-phone-gutter);\n///\n/// @param {String} media-type - The media type to create additional overrides for.\n/// @param {Number} columns - The number of columns for this media type to create.\n/// @param {Number} margin - The margin to use for this media type.\n/// @param {Number} gutter - The gutter to use for this media type.\n/// @param {String} suffix [null] - An optional suffix to apply to the `.md-grid`. This is really\n///     only used when using the `react-md-make-custom-grid` mixin.\n/// @see react-md-make-custom-grid\n@mixin react-md-make-grid($media-type, $columns, $margin, $gutter, $suffix: null) {\n  $index: index($md-grid-available-margins-and-gutters, $margin);\n  @if not $index {\n    @warn 'The given `margin` is not a valid margin for a material design grid.';\n    @warn 'A valid margin is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $index: index($md-grid-available-margins-and-gutters, $gutter);\n  @if not $index {\n    @warn 'The given `gutter` is not a valid gutter for a material design grid.';\n    @warn 'A valid gutter is one of the following: #{$md-grid-available-margins-and-gutters}';\n  }\n\n  $grid-padding: $margin - ($gutter / 2);\n  @if $suffix {\n    .md-grid--#{$suffix} {\n      @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n\n      padding: $grid-padding;\n    }\n  } @else {\n    .md-grid {\n      padding: $grid-padding;\n    }\n\n    @include react-md-make-cells($columns, $margin, $gutter, $media-type);\n  }\n}\n\n/// Creates the cells in a grid. This should normally only be used within the `react-md-make-grid` mixin.\n/// @param {Number} columns - The number of columns for the given media type.\n/// @param {Number} margin - The margin to use for the given media type.\n/// @param {Number} gutter - The gutter to use for the given media type.\n/// @param {String} media-type - The current media type.\n/// @see react-md-make-grid\n@mixin react-md-make-cells($columns, $margin, $gutter, $media-type) {\n  .md-cell {\n    @include react-md-cell-size($md-grid-default-columns, $columns, $gutter);\n\n    margin: $gutter / 2;\n  }\n\n  .md-cell--#{$media-type}-hidden {\n    // scss-lint:disable ImportantRule\n    display: none !important;\n  }\n\n  @for $i from 1 through $md-grid-max-columns {\n    .md-cell--order-#{$i},\n    .md-cell--order-#{$i}-#{$media-type}.md-cell--order-#{$i}-#{$media-type} {\n      order: $i;\n    }\n  }\n\n  @for $i from 1 through ($columns - 1) {\n    .md-cell--#{$i},\n    .md-cell--#{$i}-#{$media-type}.md-cell--#{$i}-#{$media-type} {\n      @include react-md-cell-size($i, $columns, $gutter);\n    }\n  }\n\n  @for $i from $columns through $md-grid-max-columns {\n    .md-cell--#{$i},\n    .md-cell--#{$i}-#{$media-type}.md-cell--#{$i}-#{$media-type} {\n      @include react-md-grid-full($gutter);\n    }\n  }\n\n  @for $i from 1 through ($columns - 1) {\n    .md-cell--#{$i}-offset,\n    .md-cell--#{$i}-#{$media-type}-offset.md-cell--#{$i}-#{$media-type}-offset {\n      @include react-md-cell-offset($i, $columns, $gutter);\n    }\n  }\n}\n\n/// Includes all the media queries and styles for grids.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-grid-media;\n/// @group grids, media-queries\n@mixin react-md-grid-media {\n  @media (max-width: $md-grid-tablet-breakpoint - 1) {\n    @include react-md-grid-mobile;\n  }\n\n  @media (min-width: $md-grid-tablet-breakpoint) and (max-width: $md-grid-desktop-breakpoint - 1) {\n    @include react-md-grid-tablet;\n  }\n\n  @media (min-width: $md-grid-desktop-breakpoint) {\n    @include react-md-grid-desktop;\n  }\n}\n\n@mixin react-md-cell-size($size, $columns, $gutter) {\n  width: calc(#{percentage($size / $columns)} - #{$gutter});\n\n  .md-grid.md-grid--no-spacing > & {\n    width: percentage($size / $columns);\n  }\n}\n\n@mixin react-md-grid-full($gutter) {\n  @include react-md-cell-size(1, 1, $gutter);\n}\n\n@mixin react-md-cell-offset($size, $columns, $gutter) {\n  margin-left: calc(#{percentage($size / $columns)} + #{$gutter / 2});\n\n  .md-grid--no-spacing > & {\n    margin-left: percentage($size / $columns);\n  }\n}\n","////\n/// @group expansion-panels\n////\n\n$md-expansion-panel-opened-margin: $md-default-padding !default;\n\n/// The font size for the unexpanded panel's labels.\n///\n/// @type String\n/// @group expansion-panels\n$md-expansion-panel-font-size: 15px !default;\n\n/// The font size for the expanded panel's secondary labels.\n///\n/// @type String\n/// @group expansion-panels\n$md-expansion-panel-secondary-font-size: 12px !default;\n\n/// The default left/right padding for an expansion panel.\n///\n/// @type String\n/// @group expansion-panels\n$md-expansion-panel-padding: 24px !default;\n\n/// The height of the panel's header when expanded.\n///\n/// @type String\n/// @group expansion-panels\n$md-expansion-panel-expanded-height: 64px !default;\n\n\n/// Includes the styles for expansion panels.\n///\n/// @example scss- Example Usage SCSS\n///   @include react-md-expansion-panels;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n@mixin react-md-expansion-panels($light-theme: $md-light-theme) {\n  .md-expansion-panel-list {\n    @extend %md-list-unstyled;\n  }\n\n  .md-expansion-panel {\n    background: get-color('card', $light-theme);\n    transition-duration: $md-transition-time;\n    transition-property: margin;\n\n    &--expanded {\n      &:not(:first-child) {\n        margin-top: $md-expansion-panel-opened-margin;\n      }\n\n      &:not(:last-child) {\n        margin-bottom: $md-expansion-panel-opened-margin;\n      }\n    }\n  }\n\n  .md-panel-column {\n    &:not(:last-child) {\n      padding-right: $md-default-padding;\n    }\n\n    &--overflown {\n      flex-shrink: 1;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      word-wrap: break-word;\n    }\n  }\n\n  .md-panel-column:not(:last-child) {\n    padding-right: $md-default-padding;\n  }\n\n  .md-panel-header {\n    align-items: center;\n    display: flex;\n    font-size: $md-expansion-panel-font-size;\n    height: $md-height;\n    justify-content: space-between;\n    padding-left: $md-expansion-panel-padding;\n    padding-right: $md-expansion-panel-padding;\n    transition-duration: $md-transition-time;\n    transition-property: background, height;\n\n    &--expanded {\n      height: $md-expansion-panel-expanded-height;\n    }\n\n    &--focused {\n      background: $md-grey-200;\n    }\n  }\n\n  .md-panel-content {\n    padding: 0 $md-expansion-panel-padding $md-default-padding;\n  }\n\n  .md-panel-secondary-label {\n    color: get-color('secondary', $light-theme);\n    font-size: $md-expansion-panel-secondary-font-size;\n  }\n}\n\n/// Updates the styles for expansion panels based on the `light-theme` param.\n/// If `light-theme` equals `md-light-theme`, no styles will be created.\n///\n/// @example scss- Example Usage SCSS\n///   @include react-md-expansion-panels;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @group expansion-panels, themes\n@mixin react-md-theme-expansion-panels($light-theme: $md-light-theme) {\n  @if $light-theme != $md-light-theme {\n    .md-expansion-panel {\n      background: get-color('card', $light-theme);\n    }\n\n    .md-panel-secondary-label {\n      color: get-color('secondary', $light-theme);\n    }\n  }\n}\n","////\n/// @group lists\n////\n\n/// Boolean if the styles for lists with icons should be included.\n/// @type Boolean\n$md-list-include-icon: true !default;\n\n/// Boolean if the styles for lists with avatars should be included.\n/// @type Boolean\n$md-list-include-avatar: true !default;\n\n/// Boolean if the styles for lists with two lines of text should be included.\n/// @type Boolean\n$md-list-include-two-lines: true !default;\n\n/// Boolean if the styles for lists with three lines of text should be included.\n/// @type Boolean\n$md-list-include-three-lines: true !default;\n\n/// Boolean if the styles for lists with controls should be included.\n/// @type Boolean\n$md-list-include-controls: true !default;\n\n/// Boolean if inline lists should be included. This will display a list horizontally\n/// instead of vertically.\n/// @type Boolean\n$md-list-include-inline: true !default;\n\n/// Boolean if the `.md-list-unstyled` should be included by default.\n/// @type Boolean\n$md-list-include-unstyled-class-name: true !default;\n\n/// The amount of padding to apply to the `List` component when displayed inline.\n/// @type Number\n$md-list-inline-padding: 0 !default;\n\n/// This is really the keyline to use for lists. When a list item is inset, this will\n/// be applied to the tile.\n/// @type Number\n$md-list-left-padding: 72px !default;\n\n/// The additional margin top and bottom to apply to a divider in a list.\n/// @type Number\n$md-list-divider-margin: 8px !default;\n\n/// The max depth for nested items in lists. This is used to generate\n/// some additional padding on nested lists.\n/// @type Number\n$md-list-nested-items-depth: 2 !default;\n\n/// A number for how much to increment the nested depth multiplier\n/// @type Number\n$md-list-nested-items-increment: .5 !default;\n\n/// The initial padding to start the nested items at.\n/// @type Number\n$md-list-nested-items-initial-padding: $md-list-left-padding !default;\n\n/// The top and bottom padding to apply to a list on mobile devices.\n///\n/// @see md-list-padding\n/// @type Number\n$md-list-mobile-padding: 8px !default;\n\n/// The font size to apply to the primary text in a list item on mobile devices.\n///\n/// @see md-list-primary-font-size\n/// @type Number\n$md-list-mobile-primary-font-size: 16px !default;\n\n/// The font size to apply to the secondary text in a list item on mobile devices.\n///\n/// @see md-list-secondary-font-size\n/// @type Number\n$md-list-mobile-secondary-font-size: 14px !default;\n\n/// The height for a single line list item on mobile devices.\n///\n/// @see md-list-height\n/// @type Number\n$md-list-mobile-height: 48px !default;\n\n/// The height for a list item that has an avatar on mobile devices.\n///\n/// @see md-list-avatar-height\n/// @type Number\n$md-list-mobile-avatar-height: 56px !default;\n\n/// The height for a list item that has two lines of text on mobile devices.\n///\n/// @see md-list-two-lines-height\n/// @type Number\n$md-list-mobile-two-lines-height: 72px !default;\n\n/// The height for a list item that has three lines of text on mobile devices.\n///\n/// @see md-list-three-lines-height\n/// @type Number\n$md-list-mobile-three-lines-height: 88px !default;\n\n/// The margin top for icons or avatars in a three line list item on mobile devices.\n///\n/// @see md-list-three-lines-addon-margin-top\n/// @type Number\n$md-list-mobile-three-lines-addon-margin-top: 14px !default;\n\n/// The top and bottom padding for a list on desktop screens.\n///\n/// @see md-list-padding\n/// @type Number\n$md-list-desktop-padding: 4px !default;\n\n/// The font size to apply to a list item's primary and secondary text on desktop screens.\n///\n/// @see md-list-primary-font-size\n/// @see md-list-secondary-font-size\n/// @type Number\n$md-list-desktop-font-size: 13px !default;\n\n/// The height for a single line list item on desktop screens.\n///\n/// @see md-list-height\n/// @type Number\n$md-list-desktop-height: 40px !default;\n\n/// The height for a list item that has an avatar on desktop screens.\n///\n/// @see md-list-avatar-height\n/// @type Number\n$md-list-desktop-avatar-height: 48px !default;\n\n/// The height for a list item that has two lines of text on desktop screens.\n///\n/// @see md-list-two-lines-height\n/// @type Number\n$md-list-desktop-two-lines-height: 60px !default;\n\n/// The height for a list item that has three lines of text on desktop screens.\n///\n/// @see md-list-three-lines-height\n/// @type Number\n$md-list-desktop-three-lines-height: 76px !default;\n\n/// The margin top to use for an icon or an avatar in a three list list item on desktop\n/// screens.\n///\n/// @see md-list-three-lines-addon-margin-top\n/// @type Number\n$md-list-desktop-three-lines-addon-margin-top: 12px !default;\n\n/// The amount of padding to apply to a list. This value will take precedence over the mobile\n/// and desktop variables so that this padding will be applied on all devices instead of switching\n/// based on media queries.\n///\n/// @see md-list-mobile-padding\n/// @see md-list-desktop-padding\n/// @type Number\n$md-list-padding: null !default;\n\n/// The font size to use for the primary text in a list item. This value will take precedence over\n/// the mobile and desktop variables so the font size is applied on all devices instead of switching\n/// based on media queries.\n///\n/// @see md-list-mobile-primary-font-size\n/// @see md-list-desktop-font-size\n/// @type Number\n$md-list-primary-font-size: null !default;\n\n/// The font size to use for the secondary text in a list item. This value will take precedence over\n/// the mobile and desktop variables so the font size is applied on all devices instead of switching\n/// based on media queries.\n///\n/// @see md-list-mobile-secondary-font-size\n/// @see md-list-desktop-font-size\n/// @type Number\n$md-list-secondary-font-size: null !default;\n\n/// The height to use for a list item. This value will take precedence over the mobile and desktop values\n/// so that the height is applied on all devices instead of based on media queries.\n///\n/// @see md-list-mobile-height\n/// @see md-list-desktop-height\n/// @type Number\n$md-list-height: null !default;\n\n/// The height to use for a list item that has an avatar. This value will take precedence over the mobile\n/// and desktop values so the height is applied on all devices instead of based on media queries.\n///\n/// @see md-list-mobile-avatar-height\n/// @see md-list-desktop-avatar-height\n/// @type Number\n$md-list-avatar-height: null !default;\n\n/// The height to use for a list item that has two lines of text. This value will take precedence over the\n/// mobile and desktop values so the height is applied on all devices instead of based on media queries.\n///\n/// @see md-list-mobile-two-lines-height\n/// @see md-list-desktop-two-lines-height\n/// @type Number\n$md-list-two-lines-height: null !default;\n\n/// The height to use for a list item that has three lines of text. This value will take precedence over the\n/// mobile and desktop values so the height is applied on all devices instead of based on media queries.\n///\n/// @see md-list-mobile-three-lines-height\n/// @see md-list-desktop-three-lines-height\n/// @type Number\n$md-list-three-lines-height: null !default;\n\n/// The margin top apply to icons or avatars that appear in a list with three lines of text. This value will\n/// take precedence over the mobile and desktop values so the margin is applied on all devices instead of based\n/// on media queries.\n///\n/// @see md-list-mobile-three-lines-addon-margin-top\n/// @see md-list-desktop-three-lines-addon-margin-top\n/// @type Number\n$md-list-three-lines-addon-margin-top: null !default;\n\n/// The line-height to apply any icons or avatars that are placed to the left or right of the text in a list item.\n/// This is really only applied if the line-height is altered in a parent element.\n///\n/// @type Number\n$md-list-addon-line-height: $md-line-height !default;\n\n/// A placeholder for removing the default margin, padding and list styles\n%md-list-unstyled {\n  list-style: none;\n  margin: 0;\n  padding-left: 0;\n}\n\n/// Includes the styles for lists.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-lists;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the lists should be styled\n///     for the light theme.\n/// @param {Number} nested-items-depth [$md-list-nested-items-depth] - The maximum depth for\n///     nested items.\n/// @param {Number} nested-items-increment [$md-list-nested-items-increment] - The amount the\n///     nested item's padding should be incremented by.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should\n///     be included.\n/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with\n///     icons should be included.\n/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists\n///     with avatars should be included.\n/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for\n///     lists with two lines of text should be included.\n/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for\n///     lists with three lines of text should be included.\n/// @param {Boolean} include-controls [$md-list-include-controls] - Boolean if the styles for lists\n///     with controls to be included.\n/// @param {Boolean} include-unstyled [$md-list-include-unstyled-class-name] - Boolean if the `.md-list-unstyled`\n///     class name should also be generated.\n/// @param {Boolean} include-inline [$md-list-include-inline] - Boolean if inline lists should also be created.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense styles\n///     for icons should be included.\n@mixin react-md-lists(\n  $light-theme: $md-light-theme,\n  $nested-items-depth: $md-list-nested-items-depth,\n  $nested-items-increment: $md-list-nested-items-increment,\n  $include-media: $md-media-included,\n  $include-icon: $md-list-include-icon,\n  $include-avatar: $md-list-include-avatar,\n  $include-two-lines: $md-list-include-two-lines,\n  $include-three-lines: $md-list-include-three-lines,\n  $include-controls: $md-list-include-controls,\n  $include-unstyled: $md-list-include-unstyled-class-name,\n  $include-inline: $md-list-include-inline,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  @if $include-unstyled {\n    .md-list-unstyled {\n      @extend %md-list-unstyled;\n    }\n  }\n\n  .md-list {\n    @extend %md-list-unstyled;\n\n    background: get-color('card', $light-theme);\n    user-select: none;\n\n    @if $md-list-padding != null {\n      padding-bottom: $md-list-padding;\n      padding-top: $md-list-padding;\n    }\n\n    .md-avatar,\n    .md-icon {\n      flex-shrink: 0;\n    }\n\n    .md-divider:not(.md-list-item--divider-vertical) {\n      margin-bottom: $md-list-divider-margin;\n      margin-top: $md-list-divider-margin;\n    }\n\n    .md-list:not(.md-list--menu) {\n      background: inherit;\n    }\n  }\n\n  .md-list-tile {\n    align-items: center;\n    display: flex;\n    padding-left: $md-default-padding;\n    padding-right: $md-default-padding;\n    text-decoration: none;\n    transition-duration: $md-transition-time;\n    transition-property: background;\n\n    @if $md-list-height != null {\n      height: $md-list-height;\n    }\n\n    &--active {\n      background: get-color('hover', $light-theme);\n    }\n  }\n\n  .md-list-item {\n    &--inset {\n      padding-left: $md-list-left-padding;\n    }\n\n    &--flex {\n      display: flex;\n    }\n\n    &--button-grow {\n      flex-grow: 1;\n    }\n\n    &--divider-vertical {\n      flex-shrink: 0;\n      height: calc(100% - 4px);\n      margin-left: 2px;\n      margin-right: 2px;\n      margin-top: 2px;\n      width: 2px;\n    }\n\n    &--children-inline {\n      align-self: center;\n      padding-right: 2px;\n    }\n  }\n\n  .md-tile-content {\n    flex-grow: 1;\n    overflow: hidden;\n\n    @if $include-icon {\n      &--left-icon {\n        padding-left: $md-list-left-padding - $md-font-icon-size - $md-default-padding;\n      }\n    }\n\n    @if $include-avatar {\n      &--left-avatar {\n        padding-left: $md-list-left-padding - $md-avatar-size - $md-default-padding;\n      }\n    }\n\n    @if $include-icon or $include-avatar {\n      &--right-padding {\n        padding-right: $md-default-padding;\n      }\n    }\n  }\n\n\n\n  @if $include-icon or $include-avatar {\n    .md-tile-addon {\n      line-height: $md-list-addon-line-height;\n\n      &--icon {\n        height: $md-font-icon-size;\n      }\n\n      &--avatar {\n        height: $md-avatar-size;\n      }\n    }\n\n    .md-text--theme-primary .md-icon {\n      color: inherit;\n    }\n  }\n\n  %tile-text {\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    @if $md-list-primary-font-size != null and $md-list-primary-font-size == $md-list-secondary-font-size {\n      font-size: $md-list-primary-font-size;\n    }\n  }\n\n  .md-tile-text--primary {\n    @extend %tile-text;\n\n    @if $md-list-primary-font-size != null and $md-list-primary-font-size != $md-list-secondary-font-size {\n      font-size: $md-list-primary-font-size;\n    }\n  }\n\n  @if $include-avatar and $md-list-avatar-height != null {\n    .md-list-tile--avatar {\n      height: $md-list-avatar-height;\n    }\n  }\n\n  @if $include-two-lines or $include-three-lines {\n    .md-tile-text--secondary {\n      @extend %tile-text;\n\n      @if $md-list-secondary-font-size != null and $md-list-primary-font-size != $md-list-secondary-font-size {\n        font-size: $md-list-secondary-font-size;\n      }\n    }\n  }\n\n  @if $include-two-lines and $md-list-two-lines-height != null {\n    .md-list-tile--two-lines {\n      height: $md-list-two-lines-height;\n    }\n  }\n\n  @if $include-three-lines {\n    .md-tile-text--three-lines {\n      // scss-lint:disable PropertySortOrder\n      white-space: pre-line;\n\n      // Magic with webkit-line clamp\n      display: -webkit-box;\n      -webkit-box-orient: vertical;\n      -webkit-line-clamp: 2;\n    }\n\n\n    @if $md-list-three-lines-height != null {\n      .md-list-tile--three-lines {\n        height: $md-list-three-lines-height;\n\n        .md-tile-text--secondary {\n          height: $md-line-height * $md-list-secondary-font-size * 2;\n        }\n\n        @if $include-icon or $include-avatar {\n          .md-tile-addon {\n            margin-top: $md-list-addon-margin-top;\n          }\n        }\n      }\n    }\n\n    @if $include-icon or $include-avatar {\n      .md-list-tile--three-lines .md-tile-addon {\n        align-self: flex-start;\n      }\n    }\n  }\n\n  @if $nested-items-depth != null and $nested-items-depth > 0 {\n    @include react-md-lists-nested($nested-items-depth, $nested-items-increment);\n  }\n\n  @if $include-controls {\n    .md-list-control {\n      flex-grow: 1;\n\n      .md-selection-control-label {\n        width: 100%;\n\n        > span {\n          width: 100%;\n        }\n      }\n    }\n\n    .md-tile-content--left-button {\n      padding-left: $md-list-left-padding - $md-font-icon-size * 2;\n    }\n\n    .md-list-control--right {\n      justify-content: flex-end;\n    }\n\n    .md-list-tile--control-left {\n      padding-left: 0;\n    }\n\n    .md-list-tile--control-right {\n      padding-right: 0;\n    }\n  }\n\n  @if $include-media {\n    @include react-md-lists-media($include-icon, $include-avatar, $include-two-lines, $include-three-lines, $include-dense-icons);\n  }\n\n  @if $include-inline {\n    // I'm really cheating here.. Since it is after media query, doesn't require more precedence to override\n    .md-list--inline {\n      display: flex;\n      padding: $md-list-inline-padding;\n    }\n  }\n}\n\n/// Updates the theme for lists ONLY if the `$light-theme` does not equal the `$md-light-theme`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-lists(!$md-light-theme);\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the lists should be themed by\n///     the light theme.\n/// @group lists, themes\n@mixin react-md-theme-lists($light-theme: $md-light-theme) {\n  @if $light-theme != $md-light-theme {\n    .md-list {\n      background: get-color('card', $light-theme);\n    }\n\n\n    .md-list-tile--active {\n      background: get-color('hover', $light-theme);\n    }\n  }\n}\n\n/// Includes the styles for lists on mobile devices. This should normally be used within a media\n/// query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-lists-mobile;\n///   }\n///\n/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with\n///     icons should be included.\n/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists\n///     with avatars should be included.\n/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for\n///     lists with two lines of text should be included.\n/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for\n///     lists with three lines of text should be included.\n/// @group lists, media-queries\n@mixin react-md-lists-mobile(\n  $include-icon: $md-list-include-icon,\n  $include-avatar: $md-list-include-avatar,\n  $include-two-lines: $md-list-include-two-lines,\n  $include-three-lines: $md-list-include-three-lines\n) {\n  @if $md-list-padding == null {\n    .md-list {\n      padding-bottom: $md-list-mobile-padding;\n      padding-top: $md-list-mobile-padding;\n    }\n  }\n\n  @if $md-list-height == null {\n    .md-list-tile {\n      height: $md-list-mobile-height;\n    }\n  }\n\n  @if $md-list-primary-font-size == null {\n    .md-tile-text--primary {\n      font-size: $md-list-mobile-primary-font-size;\n    }\n  }\n\n  @if $include-two-lines or $include-three-lines and $md-list-secondary-font-size == null {\n    .md-tile-text--secondary {\n      font-size: $md-list-mobile-secondary-font-size;\n    }\n  }\n\n  @if $include-avatar and $md-list-avatar-height == null {\n    .md-list-tile--avatar {\n      height: $md-list-mobile-avatar-height;\n    }\n  }\n\n  @if $include-two-lines and $md-list-two-lines-height == null {\n    .md-list-tile--two-lines {\n      height: $md-list-mobile-two-lines-height;\n    }\n  }\n\n  @if $include-three-lines and $md-list-three-lines-height == null {\n    .md-list-tile--three-lines {\n      height: $md-list-mobile-three-lines-height;\n\n      .md-tile-text--secondary {\n        height: $md-line-height * $md-list-mobile-secondary-font-size * 2;\n      }\n\n      @if $include-icon or $include-avatar {\n        .md-tile-addon {\n          margin-top: $md-list-mobile-three-lines-addon-margin-top;\n        }\n      }\n    }\n  }\n}\n\n/// Includes the styles for lists on desktop screens. This should normally be used within a media\n/// query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-lists-mobile;\n///   }\n///\n/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with\n///     icons should be included.\n/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists\n///     with avatars should be included.\n/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for\n///     lists with two lines of text should be included.\n/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for\n///     lists with three lines of text should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense styles\n///     for icons should be included.\n/// @group lists, media-queries\n@mixin react-md-lists-desktop(\n  $include-icon: $md-list-include-icon,\n  $include-avatar: $md-list-include-avatar,\n  $include-two-lines: $md-list-include-two-lines,\n  $include-three-lines: $md-list-include-three-lines,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  @if $md-list-padding == null {\n    .md-list {\n      padding-bottom: $md-list-desktop-padding;\n      padding-top: $md-list-desktop-padding;\n    }\n  }\n\n  @if $md-list-height == null {\n    .md-list-tile {\n      height: $md-list-desktop-height;\n    }\n  }\n\n  %text-size {\n    font-size: $md-list-desktop-font-size;\n  }\n\n  @if $md-list-primary-font-size == null {\n    .md-tile-text--primary {\n      @extend %text-size;\n    }\n  }\n\n  @if $include-two-lines or $include-three-lines and $md-list-secondary-font-size == null {\n    .md-tile-text--secondary {\n      @extend %text-size;\n    }\n  }\n\n  @if $include-avatar and $md-list-avatar-height == null {\n    .md-list-tile--avatar {\n      height: $md-list-desktop-avatar-height;\n    }\n  }\n\n  @if $include-two-lines and $md-list-two-lines-height == null {\n    .md-list-tile--two-lines {\n      height: $md-list-desktop-two-lines-height;\n    }\n  }\n\n  @if $include-three-lines and $md-list-three-lines-height == null {\n    .md-list-tile--three-lines {\n      height: $md-list-desktop-three-lines-height;\n\n      .md-tile-text--secondary {\n        height: $md-line-height * $md-list-desktop-font-size * 2;\n      }\n\n      @if $include-icon or $include-avatar {\n        .md-tile-addon {\n          margin-top: $md-list-desktop-three-lines-addon-margin-top;\n        }\n      }\n    }\n  }\n\n  @if $include-dense-icons and $include-icon {\n    .md-tile-addon--icon {\n      height: $md-font-icon-dense-size;\n    }\n\n    .md-tile-content--left-icon {\n      padding-left: $md-list-left-padding - $md-font-icon-dense-size - $md-default-padding;\n    }\n  }\n}\n\n/// Includes the media queries and styles for lists on mobile devices and desktop screens.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-lists-media;\n///\n/// @param {Boolean} include-icon [$md-list-include-icon] - Boolean if the styles for lists with\n///     icons should be included.\n/// @param {Boolean} include-avatar [$md-list-include-avatar] - Boolean if the styles for lists\n///     with avatars should be included.\n/// @param {Boolean} include-two-lines [$md-list-include-two-lines] - Boolean if the styles for\n///     lists with two lines of text should be included.\n/// @param {Boolean} include-three-lines [$md-list-include-three-lines] - Boolean if the styles for\n///     lists with three lines of text should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense styles\n///     for icons should be included.\n/// @group lists, media-queries\n@mixin react-md-lists-media(\n  $include-icon: $md-list-include-icon,\n  $include-avatar: $md-list-include-avatar,\n  $include-two-lines: $md-list-include-two-lines,\n  $include-three-lines: $md-list-include-three-lines,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  $media-diff: $md-list-padding == null or $md-list-primary-font-size == null\n    or $md-list-secondary-font-size == null or $md-list-height == null\n    or $md-list-avatar-height == null or $md-list-two-lines-height == null\n    or $md-list-three-lines-height == null;\n\n  @if $media-diff {\n    @media #{$md-mobile-media} {\n      @include react-md-lists-mobile($include-icon, $include-avatar, $include-two-lines, $include-three-lines);\n    }\n  }\n\n  @if $media-diff or ($include-icon and $md-font-icon-size != $md-font-icon-dense-size) {\n    @media #{$md-desktop-media} {\n      @include react-md-lists-desktop($include-icon, $include-avatar, $include-two-lines, $include-three-lines, $include-dense-icons);\n    }\n  }\n}\n\n/// Creates the styles for nested lists. It basically loops over the `$nested-items-depth` param\n/// and adds `padding-left` to each nested list equal to the\n/// `$md-list-left-padding * (1 + $depth * $nested-items-increment)`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-lists-nested;\n///\n/// @param {Number} nested-items-depth [$md-list-nested-items-depth] - The maximum depth for nested lists.\n/// @param {Number} nested-items-increment [$md-list-nested-items-increment] - The amount that the\n///     nested list's padding should be incremented at each step.\n@mixin react-md-lists-nested(\n  $nested-items-depth: $md-list-nested-items-depth,\n  $nested-items-increment: $md-list-nested-items-increment,\n  $nested-items-initial-padding: $md-list-nested-items-initial-padding\n) {\n  @if $nested-items-depth != null and $nested-items-depth > 0 {\n    $multiplier: 0;\n\n    @for $i from 1 through $nested-items-depth {\n      .md-list--nested-#{$i} .md-list-tile {\n        padding-left: $nested-items-initial-padding + $md-list-left-padding * $multiplier;\n      }\n\n      $multiplier: $multiplier + $nested-items-increment;\n    }\n  }\n}\n","////\n/// @group media\n////\n\n/// The default aspect ratios to include.\n/// @type List\n$md-media-aspect-ratios: ('16:9', '4:3', '1:1') !default;\n\n/// A boolean if the overlay styles should be included.\n/// @type Boolean\n$md-media-include-overlay: true !default;\n\n/// Boolean if the `.md-media-embedded` class name should be included.\n/// @type Boolean\n$md-media-include-embedded: false !default;\n\n/// A list of class name or html tags that will get the embedded media styles applied\n/// by default in the `.md-media` container.\n/// @type List\n$md-media-embedded-selectors: ('img' 'iframe' 'svg' 'video' 'embed' 'object') !default;\n\n/// The color to use for the media overlay's background color.\n/// @type Color\n$md-media-overlay-color: rgba($md-black-base, .54) !default;\n\n/// A placeholder for making a class or html element use the embedded styles. This class or\n/// element will need to be contained in a class containing `.md-media` to get the correct\n/// styles.\n%md-media-embedded {\n  bottom: 0;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n}\n\n/// Creates the styles for media.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-media;\n///\n/// @param {Boolean} include-overlay [$md-media-include-overlay] - Boolean if the overlay styles should be included.\n/// @param {Boolean} include-embedded [$md-media-include-embedded] - Boolean if the embedded class name should be included.\n///     This does not affect the `$embedded-selectors` param.\n/// @param {List} embedded-selectors [$md-media-embedded-selectors] - A list of class name or html tags to apply the\n///     embedded styles to by default within a `.md-media` container.\n@mixin react-md-media($include-overlay: $md-media-include-overlay, $include-embedded: $md-media-include-embedded, $embedded-selectors: $md-media-embedded-selectors) {\n  .md-media {\n    display: block;\n    height: 0;\n    overflow: hidden;\n    padding: 0;\n    position: relative;\n\n    @if $embedded-selectors and length($embedded-selectors) {\n      @each $selector in $embedded-selectors {\n        #{$selector} {\n          @extend %md-media-embedded;\n        }\n      }\n    }\n  }\n\n  @each $aspect-ratio in $md-media-aspect-ratios {\n    $map: extract-media($aspect-ratio);\n    $width: map-get($map, width);\n    $height: map-get($map, height);\n\n    @include react-md-media-aspect-ratio($width, $height);\n  }\n\n  @if $include-overlay {\n    @include react-md-media-overlay;\n  }\n\n  @if $include-embedded {\n    @include react-md-media-embedded;\n  }\n}\n\n/// Creates a media aspect ratio that will make the `.md-media-embedded\\` or any of the\n/// `$md-media-embedded-selectors` children keep the aspect ratio.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-media-aspect-ratio(16, 9);\n///\n/// @param {Number} width - The width to enforce.\n/// @param {Number} height - The height to enforce.\n@mixin react-md-media-aspect-ratio($width, $height) {\n  .md-media--#{$width}-#{$height} {\n    padding-bottom: percentage($height / $width);\n  }\n}\n\n/// Very simple mixin to only include the `.md-media-embedded` class.\n@mixin react-md-media-embedded {\n  .md-media-embedded {\n    @extend %md-media-embedded;\n  }\n}\n\n/// Creates the styles for the media overlay.\n@mixin react-md-media-overlay {\n  .md-media-overlay {\n    background: $md-media-overlay-color;\n    bottom: 0;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n\n    .md-btn,\n    .md-text {\n      color: get-color('text', false);\n    }\n\n    .md-text--secondary {\n      color: get-color('secondary', false);\n    }\n  }\n}\n\n@function extract-media($string) {\n  $index: str-index($string, ':');\n  $width: str-slice($string, 1, $index - 1);\n  $height: str-slice($string, $index + 1);\n\n  @return (width: to-number($width), height: to-number($height));\n}\n\n@function to-number($string) {\n  $strings: ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n  $numbers: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9);\n\n  $result: 0;\n\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if not $index {\n      @warn \"Unknown character '#{$character}'\";\n      $index: 1;\n    }\n\n    $number: nth($numbers, $index);\n    $result: $result * 10 + $number;\n  }\n\n  @return $result;\n}\n","////\n/// @group colors\n////\n\n\n// Material Design color palette variables\n// @link https://www.google.com/design/spec/style/color.html#color-color-palette\n\n/// Boolean if a class name for each color should be created.\n/// @type Boolean\n$md-colors-include-class-names: false !default;\n\n/// Boolean if the there should be warnings about colors not being from material design. This\n/// is enabled by default to alert users of the lib to set the correct fallback colors.\n/// @type Boolean\n/// @see md-data-table-contextual-fallback-color\n/// @see md-linear-progress-fallback-color\n/// @see md-switch-ball-fallback-color\n/// @see md-slider-warn-md\n/// @see validate-slider-primary-color\n/// @group colors, themes\n$md-colors-warn-md: true !default;\n\n/// @type Color\n$md-red-50: #ffebee;\n\n/// @type Color\n$md-red-100: #ffcdd2;\n\n/// @type Color\n$md-red-200: #ef9a9a;\n\n/// @type Color\n$md-red-300: #e57373;\n\n/// @type Color\n$md-red-400: #ef5350;\n\n/// @type Color\n$md-red-500: #f44336;\n\n/// @type Color\n$md-red-600: #e53935;\n\n/// @type Color\n$md-red-700: #d32f2f;\n\n/// @type Color\n$md-red-800: #c62828;\n\n/// @type Color\n$md-red-900: #b71c1c;\n\n/// @type Color\n$md-red-a-100: #ff8a80;\n\n/// @type Color\n$md-red-a-200: #ff5252;\n\n/// @type Color\n$md-red-a-400: #ff1744;\n\n/// @type Color\n$md-red-a-700: #d50000;\n\n\n\n/// @type Color\n$md-pink-50: #fce4ec;\n\n/// @type Color\n$md-pink-100: #f8bbd0;\n\n/// @type Color\n$md-pink-200: #f48fb1;\n\n/// @type Color\n$md-pink-300: #f06292;\n\n/// @type Color\n$md-pink-400: #ec407a;\n\n/// @type Color\n$md-pink-500: #e91e63;\n\n/// @type Color\n$md-pink-600: #d81b60;\n\n/// @type Color\n$md-pink-700: #c2185b;\n\n/// @type Color\n$md-pink-800: #ad1457;\n\n/// @type Color\n$md-pink-900: #880e4f;\n\n\n/// @type Color\n$md-pink-a-100: #ff80ab;\n\n/// @type Color\n$md-pink-a-200: #ff4081;\n\n/// @type Color\n$md-pink-a-400: #f50057;\n\n/// @type Color\n$md-pink-a-700: #c51162;\n\n\n\n/// @type Color\n$md-purple-50: #f3e5f5;\n\n/// @type Color\n$md-purple-100: #e1bee7;\n\n/// @type Color\n$md-purple-200: #ce93d8;\n\n/// @type Color\n$md-purple-300: #ba68c8;\n\n/// @type Color\n$md-purple-400: #ab47bc;\n\n/// @type Color\n$md-purple-500: #9c27b0;\n\n/// @type Color\n$md-purple-600: #8e24aa;\n\n/// @type Color\n$md-purple-700: #7b1fa2;\n\n/// @type Color\n$md-purple-800: #6a1b9a;\n\n/// @type Color\n$md-purple-900: #4a148c;\n\n\n/// @type Color\n$md-purple-a-100: #ea80fc;\n\n/// @type Color\n$md-purple-a-200: #e040fb;\n\n/// @type Color\n$md-purple-a-400: #d500f9;\n\n/// @type Color\n$md-purple-a-700: #a0f;\n\n\n\n/// @type Color\n$md-deep-purple-50: #ede7f6;\n\n/// @type Color\n$md-deep-purple-100: #d1c4e9;\n\n/// @type Color\n$md-deep-purple-200: #b39ddb;\n\n/// @type Color\n$md-deep-purple-300: #9575cd;\n\n/// @type Color\n$md-deep-purple-400: #7e57c2;\n\n/// @type Color\n$md-deep-purple-500: #673ab7;\n\n/// @type Color\n$md-deep-purple-600: #5e35b1;\n\n/// @type Color\n$md-deep-purple-700: #512da8;\n\n/// @type Color\n$md-deep-purple-800: #4527a0;\n\n/// @type Color\n$md-deep-purple-900: #311b92;\n\n\n/// @type Color\n$md-deep-purple-a-100: #b388ff;\n\n/// @type Color\n$md-deep-purple-a-200: #7c4dff;\n\n/// @type Color\n$md-deep-purple-a-400: #651fff;\n\n/// @type Color\n$md-deep-purple-a-700: #6200ea;\n\n\n\n/// @type Color\n$md-indigo-50: #e8eaf6;\n\n/// @type Color\n$md-indigo-100: #c5cae9;\n\n/// @type Color\n$md-indigo-200: #9fa8da;\n\n/// @type Color\n$md-indigo-300: #7986cb;\n\n/// @type Color\n$md-indigo-400: #5c6bc0;\n\n/// @type Color\n$md-indigo-500: #3f51b5;\n\n/// @type Color\n$md-indigo-600: #3949ab;\n\n/// @type Color\n$md-indigo-700: #303f9f;\n\n/// @type Color\n$md-indigo-800: #283593;\n\n/// @type Color\n$md-indigo-900: #1a237e;\n\n\n/// @type Color\n$md-indigo-a-100: #8c9eff;\n\n/// @type Color\n$md-indigo-a-200: #536dfe;\n\n/// @type Color\n$md-indigo-a-400: #3d5afe;\n\n/// @type Color\n$md-indigo-a-700: #304ffe;\n\n\n/// @type Color\n$md-blue-50: #e3f2fd;\n\n/// @type Color\n$md-blue-100: #bbdefb;\n\n/// @type Color\n$md-blue-200: #90caf9;\n\n/// @type Color\n$md-blue-300: #64b5f6;\n\n/// @type Color\n$md-blue-400: #42a5f5;\n\n/// @type Color\n$md-blue-500: #2196f3;\n\n/// @type Color\n$md-blue-600: #1e88e5;\n\n/// @type Color\n$md-blue-700: #1976d2;\n\n/// @type Color\n$md-blue-800: #1565c0;\n\n/// @type Color\n$md-blue-900: #0d47a1;\n\n\n/// @type Color\n$md-blue-a-100: #82b1ff;\n\n/// @type Color\n$md-blue-a-200: #448aff;\n\n/// @type Color\n$md-blue-a-400: #2979ff;\n\n/// @type Color\n$md-blue-a-700: #2962ff;\n\n\n\n/// @type Color\n$md-light-blue-50: #e1f5fe;\n\n/// @type Color\n$md-light-blue-100: #b3e5fc;\n\n/// @type Color\n$md-light-blue-200: #81d4fa;\n\n/// @type Color\n$md-light-blue-300: #4fc3f7;\n\n/// @type Color\n$md-light-blue-400: #29b6f6;\n\n/// @type Color\n$md-light-blue-500: #03a9f4;\n\n/// @type Color\n$md-light-blue-600: #039be5;\n\n/// @type Color\n$md-light-blue-700: #0288d1;\n\n/// @type Color\n$md-light-blue-800: #0277bd;\n\n/// @type Color\n$md-light-blue-900: #01579b;\n\n\n/// @type Color\n$md-light-blue-a-100: #80d8ff;\n\n/// @type Color\n$md-light-blue-a-200: #40c4ff;\n\n/// @type Color\n$md-light-blue-a-400: #00b0ff;\n\n/// @type Color\n$md-light-blue-a-700: #0091ea;\n\n\n\n/// @type Color\n$md-cyan-50: #e0f7fa;\n\n/// @type Color\n$md-cyan-100: #b2ebf2;\n\n/// @type Color\n$md-cyan-200: #80deea;\n\n/// @type Color\n$md-cyan-300: #4dd0e1;\n\n/// @type Color\n$md-cyan-400: #26c6da;\n\n/// @type Color\n$md-cyan-500: #00bcd4;\n\n/// @type Color\n$md-cyan-600: #00acc1;\n\n/// @type Color\n$md-cyan-700: #0097a7;\n\n/// @type Color\n$md-cyan-800: #00838f;\n\n/// @type Color\n$md-cyan-900: #006064;\n\n\n/// @type Color\n$md-cyan-a-100: #84ffff;\n\n/// @type Color\n$md-cyan-a-200: #18ffff;\n\n/// @type Color\n$md-cyan-a-400: #00e5ff;\n\n/// @type Color\n$md-cyan-a-700: #00b8d4;\n\n\n\n/// @type Color\n$md-teal-50: #e0f2f1;\n\n/// @type Color\n$md-teal-100: #b2dfdb;\n\n/// @type Color\n$md-teal-200: #80cbc4;\n\n/// @type Color\n$md-teal-300: #4db6ac;\n\n/// @type Color\n$md-teal-400: #26a69a;\n\n/// @type Color\n$md-teal-500: #009688;\n\n/// @type Color\n$md-teal-600: #00897b;\n\n/// @type Color\n$md-teal-700: #00796b;\n\n/// @type Color\n$md-teal-800: #00695c;\n\n/// @type Color\n$md-teal-900: #004d40;\n\n\n/// @type Color\n$md-teal-a-100: #a7ffeb;\n\n/// @type Color\n$md-teal-a-200: #64ffda;\n\n/// @type Color\n$md-teal-a-400: #1de9b6;\n\n/// @type Color\n$md-teal-a-700: #00bfa5;\n\n\n\n/// @type Color\n$md-green-50: #e8f5e9;\n\n/// @type Color\n$md-green-100: #c8e6c9;\n\n/// @type Color\n$md-green-200: #a5d6a7;\n\n/// @type Color\n$md-green-300: #81c784;\n\n/// @type Color\n$md-green-400: #66bb6a;\n\n/// @type Color\n$md-green-500: #4caf50;\n\n/// @type Color\n$md-green-600: #43a047;\n\n/// @type Color\n$md-green-700: #388e3c;\n\n/// @type Color\n$md-green-800: #2e7d32;\n\n/// @type Color\n$md-green-900: #1b5e20;\n\n\n/// @type Color\n$md-green-a-100: #b9f6ca;\n\n/// @type Color\n$md-green-a-200: #69f0ae;\n\n/// @type Color\n$md-green-a-400: #00e676;\n\n/// @type Color\n$md-green-a-700: #00c853;\n\n\n\n/// @type Color\n$md-light-green-50: #f1f8e9;\n\n/// @type Color\n$md-light-green-100: #dcedc8;\n\n/// @type Color\n$md-light-green-200: #c5e1a5;\n\n/// @type Color\n$md-light-green-300: #aed581;\n\n/// @type Color\n$md-light-green-400: #9ccc65;\n\n/// @type Color\n$md-light-green-500: #8bc34a;\n\n/// @type Color\n$md-light-green-600: #7cb342;\n\n/// @type Color\n$md-light-green-700: #689f38;\n\n/// @type Color\n$md-light-green-800: #558b2f;\n\n/// @type Color\n$md-light-green-900: #33691e;\n\n\n/// @type Color\n$md-light-green-a-100: #ccff90;\n\n/// @type Color\n$md-light-green-a-200: #b2ff59;\n\n/// @type Color\n$md-light-green-a-400: #76ff03;\n\n/// @type Color\n$md-light-green-a-700: #64dd17;\n\n\n\n/// @type Color\n$md-lime-50: #f9fbe7;\n\n/// @type Color\n$md-lime-100: #f0f4c3;\n\n/// @type Color\n$md-lime-200: #e6ee9c;\n\n/// @type Color\n$md-lime-300: #dce775;\n\n/// @type Color\n$md-lime-400: #d4e157;\n\n/// @type Color\n$md-lime-500: #cddc39;\n\n/// @type Color\n$md-lime-600: #c0ca33;\n\n/// @type Color\n$md-lime-700: #afb42b;\n\n/// @type Color\n$md-lime-800: #9e9d24;\n\n/// @type Color\n$md-lime-900: #827717;\n\n\n/// @type Color\n$md-lime-a-100: #f4ff81;\n\n/// @type Color\n$md-lime-a-200: #eeff41;\n\n/// @type Color\n$md-lime-a-400: #c6ff00;\n\n/// @type Color\n$md-lime-a-700: #aeea00;\n\n\n\n/// @type Color\n$md-yellow-50: #fffde7;\n\n/// @type Color\n$md-yellow-100: #fff9c4;\n\n/// @type Color\n$md-yellow-200: #fff59d;\n\n/// @type Color\n$md-yellow-300: #fff176;\n\n/// @type Color\n$md-yellow-400: #ffee58;\n\n/// @type Color\n$md-yellow-500: #ffeb3b;\n\n/// @type Color\n$md-yellow-600: #fdd835;\n\n/// @type Color\n$md-yellow-700: #fbc02d;\n\n/// @type Color\n$md-yellow-800: #f9a825;\n\n/// @type Color\n$md-yellow-900: #f57f17;\n\n\n/// @type Color\n$md-yellow-a-100: #ffff8d;\n\n/// @type Color\n$md-yellow-a-200: #ff0;\n\n/// @type Color\n$md-yellow-a-400: #ffea00;\n\n/// @type Color\n$md-yellow-a-700: #ffd600;\n\n\n\n/// @type Color\n$md-amber-50: #fff8e1;\n\n/// @type Color\n$md-amber-100: #ffecb3;\n\n/// @type Color\n$md-amber-200: #ffe082;\n\n/// @type Color\n$md-amber-300: #ffd54f;\n\n/// @type Color\n$md-amber-400: #ffca28;\n\n/// @type Color\n$md-amber-500: #ffc107;\n\n/// @type Color\n$md-amber-600: #ffb300;\n\n/// @type Color\n$md-amber-700: #ffa000;\n\n/// @type Color\n$md-amber-800: #ff8f00;\n\n/// @type Color\n$md-amber-900: #ff6f00;\n\n\n/// @type Color\n$md-amber-a-100: #ffe57f;\n\n/// @type Color\n$md-amber-a-200: #ffd740;\n\n/// @type Color\n$md-amber-a-400: #ffc400;\n\n/// @type Color\n$md-amber-a-700: #ffab00;\n\n\n\n/// @type Color\n$md-orange-50: #fff3e0;\n\n/// @type Color\n$md-orange-100: #fff0b2;\n\n/// @type Color\n$md-orange-200: #ffcc80;\n\n/// @type Color\n$md-orange-300: #ffb74d;\n\n/// @type Color\n$md-orange-400: #ffa726;\n\n/// @type Color\n$md-orange-500: #ff9800;\n\n/// @type Color\n$md-orange-600: #fb8c00;\n\n/// @type Color\n$md-orange-700: #f57c00;\n\n/// @type Color\n$md-orange-800: #ef6c00;\n\n/// @type Color\n$md-orange-900: #e65100;\n\n\n/// @type Color\n$md-orange-a-100: #ffd180;\n\n/// @type Color\n$md-orange-a-200: #ffab40;\n\n/// @type Color\n$md-orange-a-400: #ff9100;\n\n/// @type Color\n$md-orange-a-700: #ff6d00;\n\n\n\n/// @type Color\n$md-deep-orange-50: #fbe9e7;\n\n/// @type Color\n$md-deep-orange-100: #ffccbc;\n\n/// @type Color\n$md-deep-orange-200: #ffab91;\n\n/// @type Color\n$md-deep-orange-300: #ff8a65;\n\n/// @type Color\n$md-deep-orange-400: #ff7043;\n\n/// @type Color\n$md-deep-orange-500: #ff5722;\n\n/// @type Color\n$md-deep-orange-600: #f4511e;\n\n/// @type Color\n$md-deep-orange-700: #e64a19;\n\n/// @type Color\n$md-deep-orange-800: #d84315;\n\n/// @type Color\n$md-deep-orange-900: #bf360c;\n\n\n/// @type Color\n$md-deep-orange-a-100: #ff9e80;\n\n/// @type Color\n$md-deep-orange-a-200: #ff6e40;\n\n/// @type Color\n$md-deep-orange-a-400: #ff3d00;\n\n/// @type Color\n$md-deep-orange-a-700: #dd2c00;\n\n\n\n/// @type Color\n$md-brown-50: #efebe9;\n\n/// @type Color\n$md-brown-100: #d7ccc8;\n\n/// @type Color\n$md-brown-200: #bcaaa4;\n\n/// @type Color\n$md-brown-300: #a1887f;\n\n/// @type Color\n$md-brown-400: #8d6e63;\n\n/// @type Color\n$md-brown-500: #795548;\n\n/// @type Color\n$md-brown-600: #6d4c41;\n\n/// @type Color\n$md-brown-700: #5d4037;\n\n/// @type Color\n$md-brown-800: #4e342e;\n\n/// @type Color\n$md-brown-900: #3e2723;\n\n\n\n/// @type Color\n$md-grey-50: #fafafa;\n\n/// @type Color\n$md-grey-100: #f5f5f5;\n\n/// @type Color\n$md-grey-200: #eee;\n\n/// @type Color\n$md-grey-300: #e0e0e0;\n\n/// @type Color\n$md-grey-400: #bdbdbd;\n\n/// @type Color\n$md-grey-500: #9e9e9e;\n\n/// @type Color\n$md-grey-600: #757575;\n\n/// @type Color\n$md-grey-700: #616161;\n\n/// @type Color\n$md-grey-800: #424242;\n\n/// @type Color\n$md-grey-900: #212121;\n\n\n\n/// @type Color\n$md-blue-grey-50: #eceff1;\n\n/// @type Color\n$md-blue-grey-100: #cfd8dc;\n\n/// @type Color\n$md-blue-grey-200: #b0bec5;\n\n/// @type Color\n$md-blue-grey-300: #90a4ae;\n\n/// @type Color\n$md-blue-grey-400: #78909c;\n\n/// @type Color\n$md-blue-grey-500: #607d8b;\n\n/// @type Color\n$md-blue-grey-600: #546e7a;\n\n/// @type Color\n$md-blue-grey-700: #455a64;\n\n/// @type Color\n$md-blue-grey-800: #37474f;\n\n/// @type Color\n$md-blue-grey-900: #263238;\n\n\n\n\n\n/// @type Color\n$md-black-base: #000;\n\n/// @type Color\n$md-white-base: #fff;\n\n/// This is a map of all the material design base colors so that you can programmatically get\n/// variables with the neat sass-map functions.\n///\n/// @example scss - Example Usage SCSS\n///   .error-field {\n///     background: map-get(md-red-300, $md-color-map);\n///   }\n///\n/// @type Map\n$md-color-map: (\n  md-red-50: $md-red-50,\n  md-red-100: $md-red-100,\n  md-red-200: $md-red-200,\n  md-red-300: $md-red-300,\n  md-red-400: $md-red-400,\n  md-red-500: $md-red-500,\n  md-red-600: $md-red-600,\n  md-red-700: $md-red-700,\n  md-red-800: $md-red-800,\n  md-red-900: $md-red-900,\n  md-red-a-100: $md-red-a-100,\n  md-red-a-200: $md-red-a-200,\n  md-red-a-400: $md-red-a-400,\n  md-red-a-700: $md-red-a-700,\n  md-pink-50: $md-pink-50,\n  md-pink-100: $md-pink-100,\n  md-pink-200: $md-pink-200,\n  md-pink-300: $md-pink-300,\n  md-pink-400: $md-pink-400,\n  md-pink-500: $md-pink-500,\n  md-pink-600: $md-pink-600,\n  md-pink-700: $md-pink-700,\n  md-pink-800: $md-pink-800,\n  md-pink-900: $md-pink-900,\n  md-pink-a-100: $md-pink-a-100,\n  md-pink-a-200: $md-pink-a-200,\n  md-pink-a-400: $md-pink-a-400,\n  md-pink-a-700: $md-pink-a-700,\n  md-purple-50: $md-purple-50,\n  md-purple-100: $md-purple-100,\n  md-purple-200: $md-purple-200,\n  md-purple-300: $md-purple-300,\n  md-purple-400: $md-purple-400,\n  md-purple-500: $md-purple-500,\n  md-purple-600: $md-purple-600,\n  md-purple-700: $md-purple-700,\n  md-purple-800: $md-purple-800,\n  md-purple-900: $md-purple-900,\n  md-purple-a-100: $md-purple-a-100,\n  md-purple-a-200: $md-purple-a-200,\n  md-purple-a-400: $md-purple-a-400,\n  md-purple-a-700: $md-purple-a-700,\n  md-deep-purple-50: $md-deep-purple-50,\n  md-deep-purple-100: $md-deep-purple-100,\n  md-deep-purple-200: $md-deep-purple-200,\n  md-deep-purple-300: $md-deep-purple-300,\n  md-deep-purple-400: $md-deep-purple-400,\n  md-deep-purple-500: $md-deep-purple-500,\n  md-deep-purple-600: $md-deep-purple-600,\n  md-deep-purple-700: $md-deep-purple-700,\n  md-deep-purple-800: $md-deep-purple-800,\n  md-deep-purple-900: $md-deep-purple-900,\n  md-deep-purple-a-100: $md-deep-purple-a-100,\n  md-deep-purple-a-200: $md-deep-purple-a-200,\n  md-deep-purple-a-400: $md-deep-purple-a-400,\n  md-deep-purple-a-700: $md-deep-purple-a-700,\n  md-indigo-50: $md-indigo-50,\n  md-indigo-100: $md-indigo-100,\n  md-indigo-200: $md-indigo-200,\n  md-indigo-300: $md-indigo-300,\n  md-indigo-400: $md-indigo-400,\n  md-indigo-500: $md-indigo-500,\n  md-indigo-600: $md-indigo-600,\n  md-indigo-700: $md-indigo-700,\n  md-indigo-800: $md-indigo-800,\n  md-indigo-900: $md-indigo-900,\n  md-indigo-a-100: $md-indigo-a-100,\n  md-indigo-a-200: $md-indigo-a-200,\n  md-indigo-a-400: $md-indigo-a-400,\n  md-indigo-a-700: $md-indigo-a-700,\n  md-blue-50: $md-blue-50,\n  md-blue-100: $md-blue-100,\n  md-blue-200: $md-blue-200,\n  md-blue-300: $md-blue-300,\n  md-blue-400: $md-blue-400,\n  md-blue-500: $md-blue-500,\n  md-blue-600: $md-blue-600,\n  md-blue-700: $md-blue-700,\n  md-blue-800: $md-blue-800,\n  md-blue-900: $md-blue-900,\n  md-blue-a-100: $md-blue-a-100,\n  md-blue-a-200: $md-blue-a-200,\n  md-blue-a-400: $md-blue-a-400,\n  md-blue-a-700: $md-blue-a-700,\n  md-light-blue-50: $md-light-blue-50,\n  md-light-blue-100: $md-light-blue-100,\n  md-light-blue-200: $md-light-blue-200,\n  md-light-blue-300: $md-light-blue-300,\n  md-light-blue-400: $md-light-blue-400,\n  md-light-blue-500: $md-light-blue-500,\n  md-light-blue-600: $md-light-blue-600,\n  md-light-blue-700: $md-light-blue-700,\n  md-light-blue-800: $md-light-blue-800,\n  md-light-blue-900: $md-light-blue-900,\n  md-light-blue-a-100: $md-light-blue-a-100,\n  md-light-blue-a-200: $md-light-blue-a-200,\n  md-light-blue-a-400: $md-light-blue-a-400,\n  md-light-blue-a-700: $md-light-blue-a-700,\n  md-cyan-50: $md-cyan-50,\n  md-cyan-100: $md-cyan-100,\n  md-cyan-200: $md-cyan-200,\n  md-cyan-300: $md-cyan-300,\n  md-cyan-400: $md-cyan-400,\n  md-cyan-500: $md-cyan-500,\n  md-cyan-600: $md-cyan-600,\n  md-cyan-700: $md-cyan-700,\n  md-cyan-800: $md-cyan-800,\n  md-cyan-900: $md-cyan-900,\n  md-cyan-a-100: $md-cyan-a-100,\n  md-cyan-a-200: $md-cyan-a-200,\n  md-cyan-a-400: $md-cyan-a-400,\n  md-cyan-a-700: $md-cyan-a-700,\n  md-teal-50: $md-teal-50,\n  md-teal-100: $md-teal-100,\n  md-teal-200: $md-teal-200,\n  md-teal-300: $md-teal-300,\n  md-teal-400: $md-teal-400,\n  md-teal-500: $md-teal-500,\n  md-teal-600: $md-teal-600,\n  md-teal-700: $md-teal-700,\n  md-teal-800: $md-teal-800,\n  md-teal-900: $md-teal-900,\n  md-teal-a-100: $md-teal-a-100,\n  md-teal-a-200: $md-teal-a-200,\n  md-teal-a-400: $md-teal-a-400,\n  md-teal-a-700: $md-teal-a-700,\n  md-green-50: $md-green-50,\n  md-green-100: $md-green-100,\n  md-green-200: $md-green-200,\n  md-green-300: $md-green-300,\n  md-green-400: $md-green-400,\n  md-green-500: $md-green-500,\n  md-green-600: $md-green-600,\n  md-green-700: $md-green-700,\n  md-green-800: $md-green-800,\n  md-green-900: $md-green-900,\n  md-green-a-100: $md-green-a-100,\n  md-green-a-200: $md-green-a-200,\n  md-green-a-400: $md-green-a-400,\n  md-green-a-700: $md-green-a-700,\n  md-light-green-50: $md-light-green-50,\n  md-light-green-100: $md-light-green-100,\n  md-light-green-200: $md-light-green-200,\n  md-light-green-300: $md-light-green-300,\n  md-light-green-400: $md-light-green-400,\n  md-light-green-500: $md-light-green-500,\n  md-light-green-600: $md-light-green-600,\n  md-light-green-700: $md-light-green-700,\n  md-light-green-800: $md-light-green-800,\n  md-light-green-900: $md-light-green-900,\n  md-light-green-a-100: $md-light-green-a-100,\n  md-light-green-a-200: $md-light-green-a-200,\n  md-light-green-a-400: $md-light-green-a-400,\n  md-light-green-a-700: $md-light-green-a-700,\n  md-lime-50: $md-lime-50,\n  md-lime-100: $md-lime-100,\n  md-lime-200: $md-lime-200,\n  md-lime-300: $md-lime-300,\n  md-lime-400: $md-lime-400,\n  md-lime-500: $md-lime-500,\n  md-lime-600: $md-lime-600,\n  md-lime-700: $md-lime-700,\n  md-lime-800: $md-lime-800,\n  md-lime-900: $md-lime-900,\n  md-lime-a-100: $md-lime-a-100,\n  md-lime-a-200: $md-lime-a-200,\n  md-lime-a-400: $md-lime-a-400,\n  md-lime-a-700: $md-lime-a-700,\n  md-yellow-50: $md-yellow-50,\n  md-yellow-100: $md-yellow-100,\n  md-yellow-200: $md-yellow-200,\n  md-yellow-300: $md-yellow-300,\n  md-yellow-400: $md-yellow-400,\n  md-yellow-500: $md-yellow-500,\n  md-yellow-600: $md-yellow-600,\n  md-yellow-700: $md-yellow-700,\n  md-yellow-800: $md-yellow-800,\n  md-yellow-900: $md-yellow-900,\n  md-yellow-a-100: $md-yellow-a-100,\n  md-yellow-a-200: $md-yellow-a-200,\n  md-yellow-a-400: $md-yellow-a-400,\n  md-yellow-a-700: $md-yellow-a-700,\n  md-amber-50: $md-amber-50,\n  md-amber-100: $md-amber-100,\n  md-amber-200: $md-amber-200,\n  md-amber-300: $md-amber-300,\n  md-amber-400: $md-amber-400,\n  md-amber-500: $md-amber-500,\n  md-amber-600: $md-amber-600,\n  md-amber-700: $md-amber-700,\n  md-amber-800: $md-amber-800,\n  md-amber-900: $md-amber-900,\n  md-amber-a-100: $md-amber-a-100,\n  md-amber-a-200: $md-amber-a-200,\n  md-amber-a-400: $md-amber-a-400,\n  md-amber-a-700: $md-amber-a-700,\n  md-orange-50: $md-orange-50,\n  md-orange-100: $md-orange-100,\n  md-orange-200: $md-orange-200,\n  md-orange-300: $md-orange-300,\n  md-orange-400: $md-orange-400,\n  md-orange-500: $md-orange-500,\n  md-orange-600: $md-orange-600,\n  md-orange-700: $md-orange-700,\n  md-orange-800: $md-orange-800,\n  md-orange-900: $md-orange-900,\n  md-orange-a-100: $md-orange-a-100,\n  md-orange-a-200: $md-orange-a-200,\n  md-orange-a-400: $md-orange-a-400,\n  md-orange-a-700: $md-orange-a-700,\n  md-deep-orange-50: $md-deep-orange-50,\n  md-deep-orange-100: $md-deep-orange-100,\n  md-deep-orange-200: $md-deep-orange-200,\n  md-deep-orange-300: $md-deep-orange-300,\n  md-deep-orange-400: $md-deep-orange-400,\n  md-deep-orange-500: $md-deep-orange-500,\n  md-deep-orange-600: $md-deep-orange-600,\n  md-deep-orange-700: $md-deep-orange-700,\n  md-deep-orange-800: $md-deep-orange-800,\n  md-deep-orange-900: $md-deep-orange-900,\n  md-deep-orange-a-100: $md-deep-orange-a-100,\n  md-deep-orange-a-200: $md-deep-orange-a-200,\n  md-deep-orange-a-400: $md-deep-orange-a-400,\n  md-deep-orange-a-700: $md-deep-orange-a-700,\n  md-brown-50: $md-brown-50,\n  md-brown-100: $md-brown-100,\n  md-brown-200: $md-brown-200,\n  md-brown-300: $md-brown-300,\n  md-brown-400: $md-brown-400,\n  md-brown-500: $md-brown-500,\n  md-brown-600: $md-brown-600,\n  md-brown-700: $md-brown-700,\n  md-brown-800: $md-brown-800,\n  md-brown-900: $md-brown-900,\n  md-grey-50: $md-grey-50,\n  md-grey-100: $md-grey-100,\n  md-grey-200: $md-grey-200,\n  md-grey-300: $md-grey-300,\n  md-grey-400: $md-grey-400,\n  md-grey-500: $md-grey-500,\n  md-grey-600: $md-grey-600,\n  md-grey-700: $md-grey-700,\n  md-grey-800: $md-grey-800,\n  md-grey-900: $md-grey-900,\n  md-blue-grey-50: $md-blue-grey-50,\n  md-blue-grey-100: $md-blue-grey-100,\n  md-blue-grey-200: $md-blue-grey-200,\n  md-blue-grey-300: $md-blue-grey-300,\n  md-blue-grey-400: $md-blue-grey-400,\n  md-blue-grey-500: $md-blue-grey-500,\n  md-blue-grey-600: $md-blue-grey-600,\n  md-blue-grey-700: $md-blue-grey-700,\n  md-blue-grey-800: $md-blue-grey-800,\n  md-blue-grey-900: $md-blue-grey-900,\n  md-black-base: $md-black-base,\n  md-white-base: $md-white-base\n);\n\n\n/// @type Color\n$md-light-theme-text-color: rgba($md-black-base, .87) !default;\n\n/// @type Color\n$md-light-theme-secondary-text-color: rgba($md-black-base, .54) !default;\n\n/// @type Color\n$md-light-theme-icon-text-color: $md-light-theme-secondary-text-color !default;\n\n/// @type Color\n$md-light-theme-disabled-text-color: rgba($md-black-base, .38) !default;\n\n/// @type Color\n$md-light-theme-hint-text-color: $md-light-theme-disabled-text-color !default;\n\n/// @type Color\n$md-light-theme-divider-color: rgba($md-black-base, .12) !default;\n\n/// @type Color\n$md-light-theme-status-bar-color: $md-grey-300 !default;\n\n/// @type Color\n$md-light-theme-app-bar-color: $md-grey-100 !default;\n\n/// @type Color\n$md-light-theme-background-color: $md-grey-50 !default;\n\n/// @type Color\n$md-light-theme-card-color: $md-white-base !default;\n\n\n\n/// @type Color\n$md-dark-theme-text-color: $md-white-base !default;\n\n/// @type Color\n$md-dark-theme-secondary-text-color: rgba($md-white-base, .7) !default;\n\n/// @type Color\n$md-dark-theme-icon-text-color: $md-dark-theme-secondary-text-color !default;\n\n/// @type Color\n$md-dark-theme-disabled-text-color: rgba($md-white-base, .3) !default;\n\n/// @type Color\n$md-dark-theme-hint-text-color: $md-dark-theme-disabled-text-color !default;\n\n/// @type Color\n$md-dark-theme-divider-color: rgba($md-white-base, .12) !default;\n\n/// @type Color\n$md-dark-theme-status-bar-color: $md-black-base !default;\n\n/// @type Color\n$md-dark-theme-app-bar-color: $md-grey-900 !default;\n\n/// @type Color\n$md-dark-theme-background-color: #303030 !default;\n\n/// @type Color\n$md-dark-theme-card-color: $md-grey-800 !default;\n\n/// A mapping of all the light-theme colors.\n/// @type Map\n$md-light-theme-colors: (\n  text: $md-light-theme-text-color,\n  secondary: $md-light-theme-secondary-text-color,\n  icon: $md-light-theme-icon-text-color,\n  disabled: $md-light-theme-disabled-text-color,\n  hint: $md-light-theme-hint-text-color,\n  divider: $md-light-theme-divider-color,\n  background: $md-light-theme-background-color,\n  card: $md-light-theme-card-color,\n  hover: $md-light-theme-divider-color,\n  toolbar: $md-light-theme-app-bar-color,\n);\n\n/// A mapping of all the dark-theme colors.\n/// @type Map\n$md-dark-theme-colors: (\n  text: $md-dark-theme-text-color,\n  secondary: $md-dark-theme-secondary-text-color,\n  icon: $md-dark-theme-icon-text-color,\n  disabled: $md-dark-theme-disabled-text-color,\n  hint: $md-dark-theme-hint-text-color,\n  divider: $md-dark-theme-divider-color,\n  background: $md-dark-theme-background-color,\n  card: $md-dark-theme-card-color,\n  hover: rgba($md-black-base, .12),\n  toolbar: $md-dark-theme-app-bar-color,\n);\n\n\n/// A utility function for getting a color from either the light or dark theme.\n///\n/// @param {String} $name - The color name to look up.\n/// @param {Boolean} $light-theme - Boolean if it is for the light theme.\n/// @return {Color} the color for the theme or null if it is not a color that changes\n///     based on the theme.\n@function get-color($name, $light-theme) {\n  $map: if($light-theme, $md-light-theme-colors, $md-dark-theme-colors);\n  @if map-has-key($map, $name) == false {\n    @warn \"The given color: #{$name} is not a valid color in the #{if($light-theme, 'light', 'dark')} theme.\";\n    @return null;\n  }\n\n  @return map-get($map, $name);\n}\n\n/// A mixin for generating the base color class names to be used\n/// on multiple components. This will generate the following class names:\n/// - md-text - Styles the `color` to be the text color.\n/// - md-text--secondary - Styles the `color` to be the secondary text color.\n/// - md-text--disabled - Styles the `color` to be the disabled text color.\n/// - md-text--error - Styles the `color` to be the error text color.\n/// - md-text--theme-primary - Styles the `color` to be the `primary` color.\n/// - md-text--theme-secondary - Styles the `color` to be the `secondary` color.\n/// - md-background - Styles the `background` to be the base background color.\n/// - md-background--primary - Styles the `background` to be the `primary` color.\n/// - md-background--primary-hover - Styles the `background` to be the `primary` color with some opacity.\n/// - md-background--secondary - Styles the `background` to be the `secondary` color.\n/// - md-background--secondary-hover - Styles the `background` to be the `secondary` color with some opacity.\n/// - md-text--theme-primary-ink - Styles any ink inside this class to use the `primary` color.\n/// - md-text--theme-secondary-ink - Styles any ink inside this class to use the `secondary` color.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-colors;\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to use.\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to use.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should also be included.\n/// @param {Boolean} include-color-class-names [$md-colors-include-class-names] - Boolean if a class name\n///     should be created for every color as well.\n/// @param {Number} primary-opacity [$md-primary-hover-opacity] - The opacity to apply to the primary color with the `md-background--primary`\n///     class name.\n/// @param {Color} primary-background-text-color [$md-primary-background-text-color] - The text color for any text\n///     that appears inside the `md-background--primary` class name.\n/// @param {Number} secondary-opacity [$md-secondary-hover-opacity] - The opacity to apply to the secondary color with the `md-background--secondary`\n///     class name.\n/// @param {Color} secondary-background-text-color [$md-secondary-background-text-color] - The text color for any text\n///     that appears inside the `md-background--secondary` class name.\n/// @param {Color} error-color [$md-error-color] - The text color for any text that appears in the `md-text--error` class name.\n/// @group colors, themes\n@mixin react-md-colors(\n  $primary-color: $md-primary-color,\n  $secondary-color: $md-secondary-color,\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-color-class-names: $md-colors-include-class-names,\n  $primary-opacity: $md-primary-hover-opacity,\n  $primary-background-text-color: $md-primary-background-text-color,\n  $secondary-opacity: $md-secondary-hover-opacity,\n  $secondary-background-text-color: $md-secondary-background-text-color,\n  $error-color: $md-error-color\n) {\n  .md-text {\n    color: get-color('text', $light-theme);\n\n    &--secondary {\n      color: get-color('secondary', $light-theme);\n    }\n\n    &--disabled {\n      color: get-color('disabled', $light-theme);\n    }\n\n    &--theme-primary {\n      color: $primary-color;\n    }\n\n    &--theme-secondary {\n      color: $secondary-color;\n    }\n\n    &--error {\n      color: $error-color;\n    }\n\n    &--inherit.md-text--inherit {\n      color: inherit;\n    }\n  }\n\n  .md-ink--primary .md-ink {\n    background: rgba($primary-color, .26);\n  }\n\n  .md-ink--secondary .md-ink {\n    background: rgba($secondary-color, .26);\n  }\n\n  .md-background {\n    background: get-color('background', $light-theme);\n\n    &--card {\n      background: get-color('card', $light-theme);\n    }\n\n    &--primary {\n      background: $primary-color;\n      color: $primary-background-text-color;\n    }\n\n    &--secondary {\n      background: $secondary-color;\n      color: $secondary-background-text-color;\n    }\n  }\n\n  @if $include-media {\n    @include react-md-colors-hover($primary-color, $primary-opacity, $secondary-color, $secondary-opacity);\n  }\n\n  @if $include-color-class-names {\n    @include react-md-color-class-names;\n  }\n}\n\n/// This will conditionally update theme colors. The theme colors will only\n/// be updated if their value does not equal the global value.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-colors($md-blue-500, $md-red-a-200, false);\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to use.\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to use.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries for the hover effects should\n///     also be included\n/// @param {Number} primary-opacity [$md-primary-hover-opacity] - The opacity to apply to the primary color.\n/// @param {Color} primary-background-text-color [$md-primary-background-text-color] - The text color for any text\n///     that appears inside the `md-background--primary` class name.\n/// @param {Number} secondary-opacity [$md-secondary-hover-opacity] - The opacity to apply to the secondary color.\n/// @param {Color} secondary-background-text-color [$md-secondary-background-text-color] - The text color for any text\n///     that appears inside the `md-background--secondary` class name.\n/// @param {Color} error-color [$md-error-color] - The text color for any text that appears in the `md-text--error` class name.\n/// @group colors, themes\n@mixin react-md-theme-colors(\n  $primary-color: $md-primary-color,\n  $secondary-color: $md-secondary-color,\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $primary-opacity: $md-primary-hover-opacity,\n  $primary-background-text-color: $md-primary-background-text-color,\n  $secondary-opacity: $md-secondary-hover-opacity,\n  $secondary-background-text-color: $md-secondary-background-text-color,\n  $error-color: $md-error-color\n) {\n  @if $primary-color != $md-primary-color {\n    .md-text--theme-primary {\n      color: $primary-color;\n    }\n\n    .md-ink--primary .md-ink {\n      background: rgba($primary-color, .26);\n    }\n\n    .md-background--primary {\n      background: $primary-color;\n\n      @if $primary-background-text-color != $md-primary-background-text-color {\n        color: $primary-background-text-color;\n      }\n    }\n  } @else if $primary-background-text-color != $md-primary-background-text-color {\n    .md-background--primary {\n      color: $primary-background-text-color;\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-text--theme-secondary {\n      color: $secondary-color;\n    }\n\n    .md-ink--secondary .md-ink {\n      background: rgba($secondary-color, .26);\n    }\n\n    .md-background--secondary {\n      background: $secondary-color;\n\n      @if $secondary-background-text-color != $md-secondary-background-text-color {\n        color: $secondary-background-text-color;\n      }\n    }\n  } @else if $secondary-background-text-color != $md-secondary-background-text-color {\n    .md-background--secondary {\n      color: $secondary-background-text-color;\n    }\n  }\n\n  @if $error-color != $md-error-color {\n    .md-text--error {\n      color: $error-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-text {\n      color: get-color('text', $light-theme);\n\n      &--secondary {\n        color: get-color('secondary', $light-theme);\n      }\n\n      &--disabled {\n        color: get-color('disabled', $light-theme);\n      }\n    }\n\n    .md-background {\n      background: get-color('background', $light-theme);\n\n      &--card {\n        background: get-color('card', $light-theme);\n      }\n    }\n  }\n\n  @if $include-media and ($primary-color != $md-primary-color or $secondary-color != $md-secondary-color) {\n    @include react-md-colors-hover($primary-color, $primary-opacity, $secondary-color, $secondary-opacity);\n  }\n}\n\n/// Creates the two class names for getting a primary or secondary background hover effect,\n/// Since the `:hover` selector still gets applied on mobile devices, these styles are wrapped\n/// in the desktop media query.\n///\n/// @example markdown - Created Class Names\n///   - `.md-background--primary-hover`\n///   - `.md-background--secondary-hover`\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to use as the base for the\n///     hover effect.\n/// @param {Number} primary-opacity [$md-primary-hover-opacity] - The opacity to apply to the primary color.\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to use as the base for the\n///     hover effect.\n/// @param {Number} secondary-opacity [$md-secondary-hover-opacity] - The opacity to apply to the secondary color.\n@mixin react-md-colors-hover($primary-color: $md-primary-color, $primary-opacity: $md-primary-hover-opacity, $secondary-color: $md-secondary-color, $secondary-opacity: $md-secondary-hover-opacity) {\n  @media #{$md-desktop-media} {\n    .md-background--primary-hover:hover {\n      background: rgba($primary-color, $primary-opacity);\n    }\n\n    .md-background--secondary-hover:hover {\n      background: rgba($secondary-color, $secondary-opacity);\n    }\n  }\n}\n\n/// A utility function to take a color and get a different swatch/accent color\n/// in the same family.\n/// @param {Color} color - The material design color to get a swatch for.\n/// @param {Number} swatch - The swatch to get.\n/// @param {Boolean} accent [false] - Boolean if the swatch is the accent color.\n/// @param {Color} fallback-color [null] - An optional color to fallback if the given color\n///     is not a valid material design color.\n/// @param {String} fallback-name [null] - An optional name for the fallback color's variable\n///     to help set a correct fallback value.\n/// @return {Color} the color with the correct swatch.\n@function get-swatch($color, $swatch, $accent: false, $fallback-color: null, $fallback-name: null) {\n  $index: index(map-values($md-color-map), $color);\n  @if $index == null or $index < 1 {\n    @if $fallback-color == null and $md-colors-warn-md {\n      $msg: 'The given color \"#{$color}\" is not a valid material design color. Please set';\n      @if $fallback-name {\n        $msg: '#{$msg} the \"$#{$fallback-name}\"';\n      } @else {\n        $msg: '#{$msg} a fallback-color';\n      }\n\n      $msg: '#{$msg} or disable the \"$md-colors-warn-md\" variable to ignore this message (not recommended because of losing styling).';\n      @warn \"#{$msg} See https://react-md.mlaursen.com/customization/colors?tab=1#variable-md-colors-warn-md for more information.\";\n      @return $color;\n    } @elseif $fallback-color == null {\n      @return $color;\n    }\n\n    @return $fallback-color;\n  }\n\n  $current-color-name: nth(map-keys($md-color-map), $index);\n  $colors: (\n    'red'\n    'pink'\n    'purple'\n    'deep-purple'\n    'indigo'\n    'blue'\n    'light-blue'\n    'cyan'\n    'teal'\n    'green'\n    'light-green'\n    'lime'\n    'yellow'\n    'amber'\n    'orange'\n    'deep-orange'\n    'brown'\n    'grey'\n    'blue-grey'\n  );\n  $color-name: null;\n  $index: 1;\n  @while $color-name == null and $index < length($colors) {\n    $md-color: nth($colors, $index);\n    @if str-index($current-color-name, $md-color) != null {\n      $color-name: $md-color;\n    }\n\n    $index: $index + 1;\n  }\n\n  @return map-get($md-color-map, \"md-#{$color-name}-#{if($accent, 'a-', '')}#{$swatch}\");\n}\n\n/// This will create two class names for every material design color. The first\n/// class name can be used to style any text with that color, while the other will\n/// be used to style the background color.\n///\n/// @example scss - Example Usage SCSS\n///    @include react-md-color-class-names;\n///\n/// @example scss - Example Usage CSS Output\n///    .md-red-50--text {\n///      color: #ffebee;\n///    }\n///\n///    .md-red-50--background {\n///      background: #ffebee;\n///    }\n///\n/// @param {Boolean} include-text [true] - Boolean if the text class name should be created.\n/// @param {Boolean} include-background [true] - Boolean if the background class name should be created.\n@mixin react-md-color-class-names($include-text: true, $include-background: true) {\n  @each $name, $color in $md-color-map {\n    @include react-md-color-class-name($name, $color, $include-text, $include-background);\n  }\n}\n\n/// Creates 0 - 2 class names for a given color. No classes will be created if both\n/// `$include-text` and `$include-background` are false.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-color-class-name(md-red-500, $md-red-500);\n///   @include react-md-color-class-name(md-blue-200, $md-blue-200, false, true);\n///\n/// @example scss - Example Usage CSS Output\n///   .md-red-500--text {\n///     color: #f44336;\n///   }\n///\n///   .md-red-500--background {\n///     background: #f44336;\n///   }\n///\n///   .md-blue-200--background {\n///     background: #90caf9;\n///   }\n///\n/// @param {String} name - The class name prefix to use.\n/// @param {Color} color - The color to apply to text, background, or both.\n/// @param {Boolean} include-text [true] - Boolean if the text class name should be created.\n/// @param {Boolean} include-background [true] - Boolean if the background class name should be created.\n@mixin react-md-color-class-name($name, $color, $include-text: true, $include-background: true) {\n  @if $include-text {\n    .#{$name}--text {\n      color: $color;\n    }\n  }\n\n  @if $include-background {\n    .#{$name}--background {\n      background: $color;\n    }\n  }\n}\n","////\n/// @group accessibility\n////\n\n/// The left position of the content jump link when it has gained keyboard focus. This is\n/// for the link that appears in the navigation drawer that skips to the main content.\n/// @type Number\n$md-content-jump-left-active: 0 !default;\n\n/// Boolean if iOS should allow scroll momentum in places where manual scrolling\n/// is enabled.\n/// @type Boolean\n$md-enable-ios-scroll-momentum: true !default;\n\n/// The left position of the content jump link when it does not have keyboard focus. This is\n/// for the link that appears in the navigation drawer that skips to the main content.\n/// @type Number\n$md-content-jump-left-inactive: -1000px !default;\n\n/// The top position of the content jump link when it has gained keyboard focus. This is\n/// for the link that appears in the navigation drawer that skips to the main content.\n/// @type Number\n$md-content-jump-top-active: $md-content-jump-left-active !default;\n\n/// The top position of the content jump link when it does not have keyboard focus. This is\n/// for the link that appears in the navigation drawer that skips to the main content.\n/// @type Number\n$md-content-jump-top-inactive: $md-content-jump-left-inactive !default;\n\n/// Creates the _accessible_ styles and class names.\n///\n/// This will create the following class names:\n/// - `.md-fake-btn`\n/// - `.md-no-scroll`\n/// - `.md-pointer--hover`\n/// - `.md-pointer--none`\n/// - `.md-content-jump`\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-accessibility;\n@mixin react-md-accessibility {\n  .md-fake-btn {\n    background: transparent;\n    position: relative;\n\n    &--no-outline {\n      outline-style: none;\n    }\n  }\n\n  // Need to add one additional level of precedence for some dialogs,\n  // but don't want to use !important\n  .md-no-scroll.md-no-scroll {\n    overflow: hidden;\n    position: fixed;\n  }\n\n  .md-pointer--hover:hover {\n    cursor: pointer;\n  }\n\n  .md-pointer--none {\n    pointer-events: none;\n  }\n\n  .md-content-jump {\n    left: $md-content-jump-left-inactive;\n    position: absolute;\n    top: $md-content-jump-top-inactive;\n\n    &:active,\n    &:focus {\n      left: $md-content-jump-left-active;\n      top: $md-content-jump-top-active;\n    }\n  }\n}\n\n/// A simple mixin that will add scroll momentum to a class ONLY if the momentum is\n/// enabled via the mixin or the `$md-enable-ios-scroll-momentum` variable.\n///\n/// @param {Boolean} enable-momentum [$md-enable-ios-scroll-momentum] - Boolean if the momentum\n///     should be added\n@mixin md-ios-scroll-momentum($enable-momentum: $md-enable-ios-scroll-momentum) {\n  @if $enable-momentum {\n    -webkit-overflow-scrolling: touch;\n  }\n}\n","////\n/// @group autocompletes\n////\n\n@import 'text-fields';\n\n/// Boolean if the inline autocompletes should be included by default.\n/// @type Boolean\n$md-inline-autocomplete: true !default;\n\n/// The position from the top of the text field that the inline autocomplete suggestion should appear.\n/// @type Number\n$md-autocomplete-suggestion-top: 12px !default;\n\n/// The position from the top of the text field with a floating label that the inline autocomplete suggestion\n/// should appear on mobile devices.\n/// @type Number\n$md-autocomplete-suggestion-mobile-floating-top: $md-text-field-mobile-floating-label-margin !default;\n\n/// The position from the top of a blocked text field that the inline autocomplete suggestion should appear on\n/// mobile devices.\n/// @type Number\n$md-autocomplete-suggestion-mobile-block-top: 18px !default;\n\n/// The position from the top of the text field with a floating label that the inline autocomplete suggestion\n/// should appear.\n/// @type Number\n$md-autocomplete-suggestion-desktop-floating-top: $md-text-field-desktop-floating-label-margin !default;\n\n/// The position from the top of a blocked text field that the inline autocomplete suggestion should appear on\n/// desktop screens.\n/// @type Number\n$md-autocomplete-suggestion-desktop-block-top: 15px !default;\n\n\n/// Includes any additional styles for autocompletes if `include-inline` is `true`.\n/// The `Autocomplete` component really depends on all the styles for text fields and menus.\n///\n/// This will end up creating the `.md-autocomplete-suggestion` class name that is used\n/// for the inline suggestions for autocompletes.\n///\n/// @see react-md-text-fields\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @param {Boolean} include-inline [$md-inline-autocomplete] - Boolean if the inline styles\n///     for autocompletes should be included.\n@mixin react-md-autocompletes($light-theme: $md-light-theme, $include-media: $md-media-included, $include-inline: $md-inline-autocomplete) {\n  @if $include-inline {\n    .md-autocomplete-container {\n      position: relative;\n    }\n\n    .md-autocomplete-suggestion {\n      color: get-color('secondary', $light-theme);\n      line-height: $md-text-field-line-height;\n      overflow: hidden;\n      position: absolute;\n      top: $md-autocomplete-suggestion-top;\n      white-space: nowrap;\n    }\n\n    @if $include-media {\n      @include react-md-autocompletes-media;\n    }\n  }\n}\n\n/// Updates the styles for the autocompletes ONLY if the `$light-theme` does not\n/// equal the `$md-light-theme`.\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @param {Boolean} include-inline [$md-inline-autocomplete] - Boolean if the inline styles\n///     for autocompletes should be included.\n/// @group autocompletes, themes\n@mixin react-md-theme-autocompletes($light-theme: $md-light-theme, $include-inline: $md-inline-autocomplete) {\n  @if $light-theme != $md-light-theme and $include-inline {\n    .md-autocomplete-suggestion {\n      color: get-color('secondary', $light-theme);\n    }\n  }\n}\n\n/// Creates the styles for the autocomplete component on mobile devices.\n/// This should normally be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-autocompletes-mobile;\n///   }\n///\n/// @param {Boolean} include-inline [$md-inline-autocomplete] - Boolean if the inline styles\n///     for autocompletes should be included.\n/// @group autocompletes, media-queries\n@mixin react-md-autocompletes-mobile($include-inline: $md-inline-autocomplete) {\n  @if $include-inline {\n    .md-autocomplete-suggestion {\n      font-size: $md-text-field-mobile-font-size;\n\n      &--floating {\n        top: $md-autocomplete-suggestion-mobile-floating-top;\n      }\n\n      &--block {\n        top: $md-autocomplete-suggestion-mobile-block-top;\n      }\n    }\n  }\n}\n\n/// Creates the styles for the autocomplete component on desktop screens.\n/// This should normally be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-autocompletes-desktop;\n///   }\n///\n/// @param {Boolean} include-inline [$md-inline-autocomplete] - Boolean if the inline styles\n///     for autocompletes should be included.\n/// @group autocompletes, media-queries\n@mixin react-md-autocompletes-desktop($include-inline: $md-inline-autocomplete) {\n  @if $include-inline {\n    .md-autocomplete-suggestion {\n      font-size: $md-text-field-desktop-font-size;\n\n      &--floating {\n        top: $md-autocomplete-suggestion-desktop-floating-top;\n      }\n\n      &--block {\n        top: $md-autocomplete-suggestion-desktop-block-top;\n      }\n    }\n  }\n}\n\n/// Includes the media queries for autocompletes.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-autocompletes-media;\n///\n/// @param {Boolean} include-inline [$md-inline-autocomplete] - Boolean if the inline styles\n///     for autocompletes should be included.\n/// @group autocompletes, media-queries\n@mixin react-md-autocompletes-media($include-inline: $md-inline-autocomplete) {\n  @if $include-inline {\n    @media #{$md-mobile-media} {\n      @include react-md-autocompletes-mobile($include-inline);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-autocompletes-desktop($include-inline);\n    }\n  }\n}\n","////\n/// @group text-fields\n////\n\n/// The box shadow to apply to text fields that have been autocompleted by the browser's\n/// autocomplete ability. The default styles are to remove the yellow color and just display\n/// as a normal text field. This value can be set to `null` to allow normal browser behavior\n/// or any other valid box-shadow style.\n///\n/// @type String\n$md-text-field-autocompleted-shadow: 0 0 0 50px $md-white-base inset !default;\n\n/// The error color to use on text fields. This will be applied to the\n/// any icons, text field error message, floating label, and the text\n/// field divider when there is an error.\n///\n/// @type Color\n/// @deprecated\n$md-text-field-error-color: $md-error-color !default;\n\n/// The text field divider's active height. This is the bar that\n/// gets colored with the primary color or the error color.\n/// @type Number\n$md-text-field-divider-active-height: 2px !default;\n\n/// A Map of custom sizes for text fields. Set this to null if you do not want any\n/// custom sizes by default. This is a key value pair of String and List. The key will\n/// be used to generate a `--suffix` class name to apply to floating labels and text\n/// fields. The list must have a length of 4 where it is the:\n///   - custom font size\n///   - the transition duration modifier\n///   - the y position of the label when inactive on mobile devices\n///   - the y position of the label when inactive on desktop screens\n///\n/// @type Map\n$md-text-field-custom-sizes: (\n  title: ($md-display-1-font-size, .25s, 42px, 36px),\n) !default;\n\n/// Boolean if the multiline styling should be included by default.\n/// @type Boolean\n$md-text-field-include-multiline: true !default;\n\n/// Boolean if the floating label styling should be included by default.\n/// @type Boolean\n$md-text-field-include-floating-label: true !default;\n\n/// Boolean if the block styling should be included by default.\n/// @type Boolean\n$md-text-field-include-block: true !default;\n\n/// Boolean if the icon styling for text fields should be included by default.\n/// @type Boolean\n$md-text-field-include-icon: true !default;\n\n/// Boolean if the message styling for text fields should be included by default.\n/// @type Boolean\n$md-text-field-include-message: true !default;\n\n/// Boolean if the password text field styling should be included by default.\n/// @type Boolean\n$md-text-field-include-password: true !default;\n\n/// Boolean if the minimal styling for inline indicators for text fields should be included by default.\n/// @type Boolean\n$md-text-field-include-inline-indicator: true !default;\n\n\n\n/// The font size for the text field messages.\n/// @type Number\n$md-text-field-message-font-size: 12px !default;\n\n/// The font size for the floating label when it is floating above\n/// the text field.\n/// @type Number\n$md-text-field-active-font-size: 12px !default;\n\n/// The padding below the text field divider on mobile devices.\n/// @type Number\n$md-text-field-mobile-divider-bottom-padding: 8px !default;\n\n/// The height for a single-line text field on mobile devices.\n/// @type Number\n$md-text-field-mobile-height: $md-height !default;\n\n/// The height for a floating-label text field on mobile devices.\n/// @type Number\n$md-text-field-mobile-floating-height: 72px !default;\n\n/// The font size for a text field on mobile devices.\n/// @type Number\n$md-text-field-mobile-font-size: 16px !default;\n\n/// The padding above a floating label on mobile devices.\n/// @type Number\n$md-text-field-mobile-top-padding: $md-default-padding !default;\n\n/// The padding between a _floating_ floating label and the text field\n/// on mobile devices.\n/// @type Number\n$md-text-field-mobile-floating-label-padding: 8px !default;\n\n/// The padding above the text field divider for mobile and desktop.\n/// @type Number\n$md-text-field-divider-top-padding: 7px !default;\n\n// The padding above and below the block text field on mobile devices.\n// @type Number\n$md-text-field-mobile-block-padding: 20px !default;\n\n/// The height for a single-line text field on desktop displays.\n/// @type Number\n$md-text-field-desktop-height: 40px !default;\n\n/// The height for a floating-label text field on desktop displays.\n/// @type Number\n$md-text-field-desktop-floating-height: 60px !default;\n\n/// The font size for text fields on desktop displays.\n/// @type Number\n$md-text-field-desktop-font-size: 13px !default;\n\n/// The padding from the top of the text field container to the _floating_\n/// floating label on desktop displays.\n/// @type Number\n$md-text-field-desktop-top-padding: 12px !default;\n\n/// The padding between a _floating_ floating label and the text field on\n/// desktop displays.\n/// @type Number\n$md-text-field-desktop-floating-label-padding: 4px !default;\n\n/// The padding between the text field container's bottom and the text field\n/// divider on desktop displays.\n/// @type Number\n$md-text-field-desktop-divider-bottom-padding: 4px !default;\n\n// The padding above and below the block text field on desktop screens.\n// @type Number\n$md-text-field-desktop-block-padding: $md-default-padding !default;\n\n/// This is the position from the top of the text field's container that the floating\n/// label should appear.\n/// @type Number\n$md-text-field-mobile-floating-label-margin: 37px !default;\n\n/// This is the position from the top of the text field's container that the floating\n/// label should appear for desktop screens.\n/// @type Number\n$md-text-field-desktop-floating-label-margin: 33px !default;\n\n/// The line-height to use for the text field's input. This will not be applied to multiline\n/// text fields. This value should be more than 1 to support Firefox clipping letters.\n/// @type Number\n$md-text-field-line-height: 1.15 !default;\n\n/// The line-height to apply to the text field message. This is really only required in case the\n/// text field appears as a title in a toolbar.\n/// @type Number\n$md-text-field-message-line-height: $md-line-height !default;\n\n\n/// Creates the styles for text fields on mobile devices. The floating labels, blocks,\n/// icons, or password styles can be omitted by disabling the defaults or passing\n/// false here. This should normally be used within a media query for mobile devices.\n///\n/// > Note: If the password is included, icons will automatically be included since they\n/// > share styles.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-text-fields-mobile;\n///   }\n///\n/// @param {Boolean} include-multiline [$md-text-field-include-multiline] - Boolean if the multiline\n///     styling of text fields should be included.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     floating label styles should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the `block` styling\n///     should be included.\n/// @param {Boolean} include-icon [$md-text-field-include-icon] - Boolean if the minimal styling for\n///     using icons should be included.\n/// @param {Boolean} include-password [$md-text-field-include-password] - Boolean if the styling for password\n///     text fields should be included.\n/// @param {Boolean} include-inline-indicator [$md-text-field-include-inline-indicator] - Boolean if the styling\n///     for inline indicators should be included. If the `$include-password` param is `true`, this will automatically\n///     be included as well.\n/// @param {Map} custom-sizes [$md-text-field-custom-sizes] - A map of custom sizes to apply. If you do not\n///     want any custom sizes, set the global or this param to null.\n/// @group text-fields, media-queries\n@mixin react-md-text-fields-mobile(\n  $include-floating-label: $md-text-field-include-floating-label,\n  $include-block: $md-text-field-include-block,\n  $include-icon: $md-text-field-include-icon,\n  $include-password: $md-text-field-include-password,\n  $include-inline-indicator: $md-text-field-include-inline-indicator,\n  $custom-sizes: $md-text-field-custom-sizes\n) {\n  @include react-md-text-field-container-mobile($include-block);\n  @include react-md-text-field-mobile($include-floating-label);\n  @include react-md-text-field-divider-mobile;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-mobile($include-floating-label, $include-block);\n  }\n\n  @include react-md-text-field-custom-sizes-mobile($custom-sizes, $include-floating-label);\n}\n\n/// Creates the styles for text fields on desktop screens. The floating labels, blocks,\n/// icons, or password styles can be omitted by disabling the defaults or passing\n/// false here. This should normally be used within a media query for desktop screens.\n///\n/// > Note: If the password is included, icons will automatically be included since they\n/// > share styles.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-text-fields-desktop;\n///   }\n///\n/// @param {Boolean} include-multiline [$md-text-field-include-multiline] - Boolean if the multiline\n///     styling of text fields should be included.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     floating label styles should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the `block` styling\n///     should be included.\n/// @param {Boolean} include-icon [$md-text-field-include-icon] - Boolean if the minimal styling for\n///     using icons should be included.\n/// @param {Boolean} include-message [$md-text-field-include-message] - Boolean if the text field message\n///     styling should be included. This is the CSS for the counter and/or help/error text.\n/// @param {Boolean} include-password [$md-text-field-include-password] - Boolean if the styling for password\n///     text fields should be included.\n/// @param {Boolean} include-inline-indicator [$md-text-field-include-inline-indicator] - Boolean if the styling\n///     for inline indicators should be included. If the `$include-password` param is `true`, this will automatically\n///     be included as well.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense font icon\n///     styles should be included for text fields.\n/// @param {Map} custom-sizes [$md-text-field-custom-sizes] - A map of custom sizes to apply. If you do not\n///     want any custom sizes, set the global or this param to null.\n/// @group text-fields, media-queries\n@mixin react-md-text-fields-desktop(\n  $include-floating-label: $md-text-field-include-floating-label,\n  $include-block: $md-text-field-include-block,\n  $include-icon: $md-text-field-include-icon,\n  $include-message: $md-text-field-include-message,\n  $include-password: $md-text-field-include-password,\n  $include-inline-indicator: $md-text-field-include-inline-indicator,\n  $include-dense-icons: $md-font-icon-include-dense,\n  $custom-sizes: $md-text-field-custom-sizes\n) {\n  @include react-md-text-field-container-desktop($include-block);\n  @include react-md-text-field-desktop($include-floating-label);\n  @include react-md-text-field-divider-desktop;\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label-desktop;\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon-desktop($include-password, $include-dense-icons);\n  }\n\n  @if $include-message and ($include-dense-icons and $include-icon) {\n    .md-text-field-message-container {\n      $margin: if($md-font-icon-include-dense, $md-font-icon-dense-size, $md-font-icon-size) + $md-default-padding;\n\n      &--left-icon-offset {\n        padding-left: $margin;\n      }\n\n      &--right-icon-offset {\n        padding-right: $margin;\n      }\n    }\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator-desktop($include-floating-label, $include-block);\n  }\n\n  @include react-md-text-field-custom-sizes-desktop($custom-sizes, $include-floating-label);\n}\n\n/// Includes the media queries for text fields on mobile devices and desktop screens. The floating\n/// labels, blocks, icons, or password styles can be omitted by disabling the defaults or passing\n/// false here. This should normally be used within a media query for mobile devices.\n///\n/// > Note: If the password is included, icons will automatically be included since they\n/// > share styles.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-fields-media;\n///\n/// @param {Boolean} include-multiline [$md-text-field-include-multiline] - Boolean if the multiline\n///     styling of text fields should be included.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     floating label styles should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the `block` styling\n///     should be included.\n/// @param {Boolean} include-icon [$md-text-field-include-icon] - Boolean if the minimal styling for\n///     using icons should be included.\n/// @param {Boolean} include-message [$md-text-field-include-message] - Boolean if the text field message\n///     styling should be included. This is the CSS for the counter and/or help/error text.\n/// @param {Boolean} include-password [$md-text-field-include-password] - Boolean if the styling for password\n///     text fields should be included.\n/// @param {Boolean} include-inline-indicator [$md-text-field-include-inline-indicator] - Boolean if the styling\n///     for inline indicators should be included. If the `$include-password` param is `true`, this will automatically\n///     be included as well.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense font icon\n///     styles should be included for text fields.\n/// @param {Map} custom-sizes [$md-text-field-custom-sizes] - A map of custom sizes to apply. If you do not\n///     want any custom sizes, set the global or this param to null.\n/// @group text-fields, media-queries\n@mixin react-md-text-fields-media(\n  $include-floating-label: $md-text-field-include-floating-label,\n  $include-block: $md-text-field-include-block,\n  $include-icon: $md-text-field-include-icon,\n  $include-message: $md-text-field-include-message,\n  $include-password: $md-text-field-include-password,\n  $include-inline-indicator: $md-text-field-include-inline-indicator,\n  $include-dense-icons: $md-font-icon-include-dense,\n  $custom-sizes: $md-text-field-custom-sizes\n) {\n  @media #{$md-mobile-media} {\n    @include react-md-text-fields-mobile($include-floating-label, $include-block, $include-icon, $include-password, $custom-sizes);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-fields-desktop($include-floating-label, $include-block, $include-icon, $include-message, $include-password, $include-dense-icons, $custom-sizes);\n  }\n}\n\n/// Includes the CSS for text fields. The floating label, block styling, icon, password, and\n/// messages are all optional. These sections can be enabled or disabled by modifying the params\n/// on this mixin or modifying the default values. If the `$include-media` param is true, the\n/// mobile and desktop media queries will be included for all included parts of the text fields.\n///\n/// Also if the `$md-text-field-custom-sizes` map is defined, each custom size will be created.\n///\n/// @example scss - Basic Usage SCSS\n///   @include react-md-text-fields;\n///\n///   // or\n///   $md-primary-color: $md-light-blue-500;\n///   @include react-md-text-fields;\n///\n///   // or\n///   @include react-md-text-fields($md-light-theme, $md-light-blue-500);\n///\n///\n/// @see {mixin} react-md-text-fields-media\n/// @param {Color} primary-color [$md-primary-color] - The primary color to theme text fields with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the text fields should be styled for\n///     the light or dark theme.\n/// @param {Color} error-color [$md-red-500] - The error color to use with text fields.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should be included.\n/// @param {Boolean} include-multiline [$md-text-field-include-multiline] - Boolean if the multiline\n///     styling of text fields should be included.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     floating label styles should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the `block` styling\n///     should be included.\n/// @param {Boolean} include-icon [$md-text-field-include-icon] - Boolean if the minimal styling for\n///     using icons should be included.\n/// @param {Boolean} include-message [$md-text-field-include-message] - Boolean if the text field message\n///     styling should be included. This is the CSS for the counter and/or help/error text.\n/// @param {Boolean} include-password [$md-text-field-include-password] - Boolean if the styling for password\n///     text fields should be included.\n/// @param {Boolean} include-inline-indicator [$md-text-field-include-inline-indicator] - Boolean if the styling\n///     for inline indicators should be included. If the `$include-password` param is `true`, this will automatically\n///     be included as well.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense font icon\n///     styles should be included for text fields.\n/// @param {Map} custom-sizes [$md-text-field-custom-sizes] - This is a map of size names and font sizes\n///     to apply as custom sizes for the text field.\n@mixin react-md-text-fields(\n  $primary-color: $md-primary-color,\n  $light-theme: $md-light-theme,\n  $error-color: $md-error-color,\n  $include-media: $md-media-included,\n  $include-multiline: $md-text-field-include-multiline,\n  $include-floating-label: $md-text-field-include-floating-label,\n  $include-block: $md-text-field-include-block,\n  $include-icon: $md-text-field-include-icon,\n  $include-message: $md-text-field-include-message,\n  $include-password: $md-text-field-include-password,\n  $include-inline-indicator: $md-text-field-include-inline-indicator,\n  $include-dense-icons: $md-font-icon-include-dense,\n  $custom-sizes: $md-text-field-custom-sizes\n) {\n  @include react-md-text-field-container($light-theme, $include-multiline, $include-block, $include-message);\n  @include react-md-text-field($light-theme, $include-multiline);\n  @include react-md-text-field-divider($primary-color, $error-color);\n\n  @if $include-floating-label {\n    @include react-md-text-field-floating-label($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-message {\n    @include react-md-text-field-message($light-theme, $error-color, $include-icon);\n  }\n\n  @if $include-password or $include-icon {\n    @include react-md-text-field-icon($primary-color, $light-theme, $error-color);\n  }\n\n  @if $include-password or $include-inline-indicator {\n    @include react-md-text-field-inline-indicator;\n  }\n\n  @if $include-password {\n    @include react-md-text-field-password($light-theme);\n  }\n\n  @if $include-media {\n    @include react-md-text-fields-media($include-floating-label, $include-block, $include-icon, $include-message, $include-password, $include-dense-icons, $custom-sizes);\n  }\n\n  @include react-md-text-field-custom-sizes($md-text-field-custom-sizes, $include-floating-label);\n}\n\n\n/// Themes all parts of the text fields if they are included.\n///\n/// @example scss - Example Usage SCSS\n///   .my-subtheme {\n///     @include react-md-theme-text-fields($md-blue-500);\n///   }\n///\n/// @see {mixin} react-md-theme-text-field-divider\n/// @param {Color} primary-color - The primary color to theme text fields with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the text fields should be styled for\n///     the light or dark theme.\n/// @param {Color} error-color [$md-red-500] - The error color to use with text fields.\n/// @param {Boolean} include-multiline [$md-text-field-include-multiline] - Boolean if the multiline\n///     styling of text fields should be included.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     floating label styles should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the `block` styling\n///     should be included.\n/// @param {Boolean} include-icon [$md-text-field-include-icon] - Boolean if the minimal styling for\n///     using icons should be included.\n/// @param {Boolean} include-message [$md-text-field-include-message] - Boolean if the text field message\n///     styling should be included. This is the CSS for the counter and/or help/error text.\n/// @param {Boolean} include-password [$md-text-field-include-password] - Boolean if the styling for password\n///     text fields should be included.\n/// @group text-fields, themes\n@mixin react-md-theme-text-fields(\n  $primary-color,\n  $light-theme: $md-light-theme,\n  $error-color: $md-error-color,\n  $include-multiline: $md-text-field-include-multiline,\n  $include-floating-label: $md-text-field-include-floating-label,\n  $include-block: $md-text-field-include-block,\n  $include-icon: $md-text-field-include-icon,\n  $include-message: $md-text-field-include-message,\n  $include-password: $md-text-field-include-password\n) {\n  @if $light-theme != $md-light-theme {\n    .md-text-field {\n      @include react-md-style-placeholders {\n        color: get-color('secondary', $light-theme);\n      };\n\n      &[disabled] {\n        @include react-md-style-placeholders {\n          color: get-color('disabled', $light-theme);\n        };\n      }\n    }\n  }\n\n  @include react-md-theme-text-field-divider($primary-color, $error-color);\n}\n\n\n/// Creates the styles for the text-field-container on mobile devices. This\n/// should normally be used within the `react-md-text-fields-mobile` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @import react-md-text-field-container-mobile;\n///   }\n///\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if block styling should\n///     be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-container-mobile($include-block: $md-text-field-include-block) {\n  @if $include-block {\n    .md-text-field-container--input-block {\n      padding-bottom: $md-text-field-mobile-block-padding;\n      padding-top: $md-text-field-mobile-block-padding;\n    }\n\n    .md-text-field-container--multiline-block {\n      margin-bottom: $md-text-field-mobile-block-padding;\n      margin-top: $md-text-field-mobile-block-padding;\n    }\n\n    .md-text-field-container--padded-block {\n      padding-left: $md-text-field-mobile-block-padding;\n      padding-right: $md-text-field-mobile-block-padding;\n    }\n  }\n}\n\n\n/// Creates the styles for the text-field-container on desktop screens. This\n/// should normally be used within the `react-md-text-fields-desktop` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @import react-md-text-field-container-desktop;\n///   }\n///\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if block styling should\n///     be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-container-desktop($include-block: $md-text-field-include-block) {\n  @if $include-block {\n    .md-text-field-container--input-block {\n      padding-bottom: $md-text-field-desktop-block-padding;\n      padding-top: $md-text-field-desktop-block-padding;\n    }\n\n    .md-text-field-container--multiline-block {\n      margin-bottom: $md-text-field-desktop-block-padding;\n      margin-top: $md-text-field-desktop-block-padding;\n    }\n\n    .md-text-field-container--padded-block {\n      padding-left: $md-text-field-desktop-block-padding;\n      padding-right: $md-text-field-desktop-block-padding;\n    }\n  }\n}\n\n\n/// Includes the media queries for the text-field container.\n///\n/// @example scss - Example Usage SCSS\n///   @import react-md-text-field-container-media;\n///\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if block styling should\n///     be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-container-media($include-block: $md-text-field-include-block) {\n  @if $include-block {\n    @media #{$md-mobile-media} {\n      @include react-md-text-field-container-mobile($include-block);\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-text-field-container-desktop($include-block);\n    }\n  }\n}\n\n/// Includes only the `md-text-field-container` CSS. This should normally be used from\n/// the `react-md-text-fields` mixin. The placeholders will also be styled accordingly.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-container;\n///\n///   // or\n///   $md-primary-color: $md-orange-500;\n///   @include react-md-text-field-container;\n///\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if currently using the light\n///     theme.\n/// @param {Boolean} include-multiline [$md-text-field-include-multiline] - Boolean if the\n///     multiline text field CSS should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the block styling\n///     for text fields should be included.\n/// @param {Boolean} include-message [$md-text-field-include-message] - Boolean if the styles for the inline\n///     messages or counter should be included. This will only every create styles if the `include-block` param\n///     is `true` as well.\n@mixin react-md-text-field-container(\n  $light-theme: $md-light-theme,\n  $include-multiline: $md-text-field-include-multiline,\n  $include-block: $md-text-field-include-block,\n  $include-message: $md-text-field-include-message\n) {\n\n  .md-text-field-container {\n    position: relative;\n  }\n\n  .md-text-field-container--input {\n    line-height: $md-text-field-line-height;\n  }\n\n  @if $include-block {\n    .md-text-field-container--input-block {\n      display: flex;\n\n      @if $include-message {\n        .md-text-field-message-container {\n          flex-shrink: 0;\n        }\n      }\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field-multiline-container,\n    .md-text-field-container--multiline {\n      transition-duration: $md-transition-time;\n      transition-property: height;\n    }\n\n    .md-text-field-multiline-container {\n      position: relative;\n    }\n\n    .md-text-field-container--multiline {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n}\n\n\n\n/// Includes the CSS for the input / textarea tags for text fields. This is normally\n/// used only within the `react-md-text-fields` mixin.\n///\n/// @example scss - Basic Usage SCSS\n///   @include react-md-text-field;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the text field should be styled\n///     for the light-theme.\n/// @param {Boolean} include-multiline [$md-text-field-include-multiline] - Boolean if the multiline styling\n///     of text fields should be included.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the floating\n///     label styles should be included.\n@mixin react-md-text-field($light-theme: $md-light-theme, $include-multiline: $md-text-field-include-multiline) {\n  .md-text-field {\n    background: none;\n    border: 0;\n    line-height: inherit;\n    padding: 0;\n    width: 100%;\n\n    @include react-md-style-placeholders {\n      color: get-color('secondary', $light-theme);\n    }\n\n    &:focus {\n      outline-style: none;\n    }\n\n    &[type=\"search\"] {\n      // This fixes the weird styling Safari applies to search text fields.\n      -webkit-appearance: textfield;\n    }\n\n    &:-webkit-autofill,\n    &:-webkit-autofill:focus {\n      box-shadow: $md-text-field-autocompleted-shadow;\n    }\n\n    &--margin {\n      margin-top: 13px;\n    }\n\n    &[disabled] {\n      @include react-md-style-placeholders {\n        color: get-color('disabled', $light-theme);\n      }\n    }\n  }\n\n  @if $include-multiline {\n    .md-text-field--multiline {\n      padding-bottom: 0;\n      padding-top: 0;\n      resize: none;\n    }\n\n    .md-text-field--multiline-mask {\n      overflow: hidden;\n      position: absolute;\n      visibility: hidden;\n    }\n  }\n}\n\n/// Creates the CSS for styling text fields on a mobile device. This should\n/// be used within media queries.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-text-field-mobile;\n///   }\n///\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     floating label styles should be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-mobile($include-floating-label: $md-text-field-include-floating-label) {\n  .md-text-field {\n    font-size: $md-text-field-mobile-font-size;\n  }\n\n  @if $include-floating-label {\n    .md-text-field--floating-margin {\n      margin-top: $md-text-field-mobile-floating-label-margin;\n    }\n  }\n\n}\n\n/// Creates the CSS for styling text fields on a mobile device. This should\n/// be used within media queries.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-text-field-desktop;\n///   }\n///\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     floating label styles should be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-desktop($include-floating-label: $md-text-field-include-floating-label) {\n  .md-text-field {\n    font-size: $md-text-field-desktop-font-size;\n  }\n\n  @if $include-floating-label {\n    .md-text-field--floating-margin {\n      margin-top: $md-text-field-desktop-floating-label-margin;\n    }\n  }\n}\n\n/// Includes the media queries for text fields on mobile and desktop devices. This\n/// is really only helpful if you do not use the `react-md-text-fields` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-media;\n///\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     floating label styles should be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-media($include-floating-label: $md-text-field-include-floating-label) {\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-mobile($include-floating-label);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-desktop($include-floating-label);\n  }\n}\n\n\n\n/// Includes the styles for the text field's floating label.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-floating-label;\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to theme text fields with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the text fields should be styled for\n///     the light or dark theme.\n/// @param {Color} error-color [$md-red-500] - The error color to use with text fields.\n@mixin react-md-text-field-floating-label($primary-color: $md-primary-color, $light-theme: $md-light-theme, $error-color: $md-error-color) {\n  .md-floating-label {\n    cursor: text;\n    line-height: 1;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    transition-duration: $md-transition-time;\n    transition-property: transform, font-size, color;\n    white-space: nowrap;\n  }\n\n  .md-floating-label--floating {\n    font-size: $md-text-field-active-font-size;\n  }\n\n  .md-floating-label--icon-offset {\n    left: $md-font-icon-size + $md-default-padding;\n\n    @if $md-font-icon-include-dense {\n      @media #{$md-desktop-media} {\n        left: $md-font-icon-dense-size + $md-default-padding;\n      }\n    }\n  }\n}\n\n\n/// @deprecated This is no longer needed since the colors come from the `.md-text--{color-type}`.\n@mixin react-md-theme-text-field-floating-label($primary-color: $md-primary-color, $light-theme: $md-light-theme, $error-color: $md-error-color) {\n}\n\n/// Creates the styles for the text field floating labels for mobile devices.\n/// This should be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-text-field-floating-label-mobile;\n///   }\n/// @group text-fields, media-queries\n@mixin react-md-text-field-floating-label-mobile {\n  .md-floating-label--inactive {\n    $text-field-size: floor($md-text-field-mobile-font-size * $md-line-height);\n    $distance: $md-text-field-mobile-top-padding + $md-text-field-active-font-size + ($text-field-size / 2);\n\n    transform: translate3d(0, $distance, 0);\n  }\n\n  .md-floating-label--inactive-sized {\n    font-size: $md-text-field-mobile-font-size;\n  }\n\n  .md-floating-label--floating {\n    transform: translate3d(0, $md-default-padding, 0);\n  }\n}\n\n/// Creates the styles for the text field floating labels for desktop screens.\n/// This should be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-text-field-floating-label-desktop;\n///   }\n/// @group text-fields, media-queries\n@mixin react-md-text-field-floating-label-desktop {\n  .md-floating-label--inactive {\n    $text-field-size: floor($md-text-field-desktop-font-size * $md-line-height);\n    $distance: $md-text-field-desktop-top-padding + $md-text-field-active-font-size + ($text-field-size / 2);\n\n    transform: translate3d(0, $distance, 0);\n  }\n\n  .md-floating-label--inactive-sized {\n    font-size: $md-text-field-desktop-font-size;\n  }\n\n  .md-floating-label--floating {\n    transform: translate3d(0, 12px, 0);\n  }\n}\n\n/// Includes the media queries and styles for the text field floating labels..\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-floating-label-media;\n/// @group text-fields, media-queries\n@mixin react-md-text-field-floating-label-media {\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-floating-label-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-floating-label-desktop;\n  }\n}\n\n\n/// Includes only CSS for the text field dividers. This is really used if\n/// you do not use the `react-md-text-fields` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-divider;\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to theme text fields with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the text fields should be styled for\n///     the light or dark theme.\n/// @param {Color} error-color [$md-error-color] - The error color to use with text fields.\n@mixin react-md-text-field-divider($primary-color: $md-primary-color, $error-color: $md-error-color) {\n  .md-divider--text-field {\n    margin-top: $md-text-field-divider-top-padding;\n    overflow: visible;\n\n    &::after {\n      background: $primary-color;\n      content: '';\n      display: block;\n      height: $md-text-field-divider-active-height;\n      transition-duration: $md-transition-time;\n      transition-property: width;\n      width: 0;\n    }\n  }\n\n  .md-divider--text-field-expanded::after {\n    width: 100%;\n  }\n\n  .md-divider--text-field-error,\n  .md-divider--text-field-error::after {\n    background: $error-color;\n  }\n\n  .md-divider--expand-from-left::after {\n    left: 0;\n  }\n\n  .md-divider--expand-from-center::after {\n    margin: auto;\n  }\n\n  .md-divider--expand-from-right::after {\n    @extend %md-cell--right;\n\n    right: 0;\n  }\n}\n\n/// Modifies the styles of the text-field-divider ONLY if:\n/// - the `$primary-color` is different than `$md-primary-color`\n/// - the `$error-color` is different than `$md-error-color`.\n///\n/// In most cases, you should use the `react-md-theme-text-fields` mixin instead.\n///\n/// @example scss - Example Usage SCSS\n///   .my-subsection-styling {\n///     @include react-md-theme-text-field-divider($md-light-blue-400, true, $md-orange-500);\n///   }\n///\n/// @see {mixin} react-md-theme-text-fields\n/// @param {Color} primary-color [$md-primary-color] - The primary color to use.\n/// @param {Color} error-color [$md-error-color] - The error color to use.\n/// @group text-fields, themes\n@mixin react-md-theme-text-field-divider($primary-color: $md-primary-color, $error-color: $md-error-color) {\n  @if $primary-color != $md-primary-color {\n    .md-divider--text-field:not(.md-divider--text-field-error)::after {\n      background: $primary-color;\n    }\n  }\n\n  @if $error-color != $md-error-color {\n    .md-divider--text-field-error,\n    .md-divider--text-field-error::after {\n      background: $error-color;\n    }\n  }\n}\n\n/// Creates the styles for the text field dividers for mobile devices.\n/// This should be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-text-field-divider-mobile;\n///   }\n/// @group text-fields, media-queries\n@mixin react-md-text-field-divider-mobile {\n  .md-divider--text-field {\n    margin-bottom: $md-text-field-mobile-divider-bottom-padding;\n  }\n}\n\n/// Creates the styles for the text field dividers for mobile devices.\n/// This should be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-text-field-divider-desktop;\n///   }\n/// @group text-fields, media-queries\n@mixin react-md-text-field-divider-desktop {\n  .md-divider--text-field {\n    margin-bottom: $md-text-field-desktop-divider-bottom-padding;\n  }\n}\n\n/// Includes the mobile and desktop media queries for the text field dividers.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-divider-media;\n/// @group text-fields, media-queries\n@mixin react-md-text-field-divider-media {\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-divider-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-divider-desktop;\n  }\n}\n\n/// Includes the styles for the text field message / counter component.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-message;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the text fields should be styled for\n///     the light or dark theme.\n/// @param {Color} error-color [$md-red-500] - The error color to use with text fields.\n/// @param {Boolean} include-icon [$md-text-field-include-icon] - Boolean if the styles for text fields\n///     with icons and messages should be included.\n@mixin react-md-text-field-message($light-theme: $md-light-theme, $error-color: $md-error-color, $include-icon: $md-text-field-include-icon) {\n  .md-text-field-message-container {\n    display: flex;\n    font-size: $md-text-field-message-font-size;\n    justify-content: space-between;\n  }\n\n  .md-text-field-message-container--count-only {\n    justify-content: flex-end;\n  }\n\n  @if $include-icon {\n    .md-text-field-message-container {\n      $padding: $md-font-icon-size + $md-default-padding;\n\n      &--left-icon-offset {\n        padding-left: $padding;\n      }\n\n      &--right-icon-offset {\n        padding-right: $padding;\n      }\n    }\n  }\n\n  .md-text-field-message {\n    color: inherit;\n    flex-grow: 1;\n    line-height: $md-text-field-message-line-height;\n    transition-duration: $md-transition-time;\n    transition-property: opacity;\n    white-space: normal;\n  }\n\n  .md-text-field-message--counter {\n    display: block;\n    flex-grow: 0;\n    flex-shrink: 0;\n    padding-left: $md-default-padding;\n  }\n\n  .md-text-field-message--inactive {\n    opacity: 0;\n  }\n\n  .md-text-field-message--active {\n    opacity: 1;\n  }\n}\n\n/// @deprecated The theme colors now come from the `.md-text--{color-type}` class names.\n@mixin react-md-theme-text-field-message($light-theme: $md-light-theme, $error-color: $md-error-color) {\n}\n\n\n\n\n/// Includes the styles for using icons with text fields. This is really only useful if you did\n/// not use the `react-md-text-fields` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-icon;\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to theme text fields with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the text fields should be styled for\n///     the light or dark theme.\n/// @param {Color} error-color [$md-red-500] - The error color to use with text fields.\n@mixin react-md-text-field-icon($primary-color: $md-primary-color, $light-theme: $md-light-theme, $error-color: $md-error-color) {\n  .md-text-field-divider-container {\n    display: inline-block;\n  }\n\n  .md-text-field-divider-container--grow {\n    display: block;\n    flex-grow: 1;\n  }\n\n  .md-text-field-icon + .md-text-field-divider-container,\n  .md-text-field-divider-container + .md-text-field-icon {\n    margin-left: $md-default-padding;\n  }\n\n  .md-text-field-icon-container {\n    align-items: flex-end;\n    display: flex;\n    width: 100%;\n\n    .md-text-field-container--input-block & {\n      align-items: center;\n    }\n  }\n}\n\n\n\n/// @deprecated\n@mixin react-md-theme-text-field-icon($primary-color: $md-primary-color, $light-theme: $md-light-theme, $error-color: $md-error-color) {\n}\n\n/// Creates the styles for text field icons on mobile devices. This should be included within\n/// a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-text-field-icon-mobile;\n///   }\n/// @group text-fields, media-queries\n@mixin react-md-text-field-icon-mobile {\n  $text-field-height: 19px;\n\n  .md-text-field-icon--positioned {\n    margin-bottom: $md-default-padding - (($md-font-icon-size - $text-field-height) / 2);\n  }\n}\n\n/// Creates the styles for text field icons on desktop screens. This should be included within\n/// a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-text-field-icon-desktop;\n///   }\n///\n/// @param {Boolean} include-password [$md-text-field-include-password] - Boolean if the password button\n///     should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense font icon\n///     styles should be included for text fields.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-icon-desktop($include-password: $md-text-field-include-password, $include-dense-icons: $md-font-icon-include-dense) {\n  $text-field-height: 15px;\n\n  .md-text-field-icon--positioned {\n    margin-bottom: 12px - ((if($include-dense-icons, $md-font-icon-dense-size, $md-font-icon-size) - $text-field-height) / 2);\n  }\n\n  @if $include-password and $include-dense-icons {\n    .md-password-btn.md-password-btn {\n      height: $md-font-icon-dense-size;\n      width: $md-font-icon-dense-size;\n    }\n  }\n}\n\n/// Includes the media queries and styles for the text field icons.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-icon-media;\n///\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense font icon\n///     styles should be included for text fields.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-icon-media($include-dense-icons: $md-font-icon-include-dense) {\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-icon-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-icon-desktop($include-dense-icons);\n  }\n}\n\n\n/// Includes the styles for having a password text field.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-password;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the text fields should be styled for\n///     the light or dark theme.\n@mixin react-md-text-field-password($light-theme: $md-light-theme) {\n  .md-password-btn {\n    background: transparent;\n    border: 0;\n    height: $md-font-icon-size;\n    padding: 0;\n    width: $md-font-icon-size;\n\n    &:not(.md-password-btn--focus):focus {\n      outline-style: none;\n    }\n\n    .md-icon {\n      color: inherit;\n    }\n  }\n\n  .md-password-btn--active {\n\n    &::before {\n      background: get-color('secondary', $light-theme);\n    }\n  }\n\n  .md-password-btn--invisible {\n    &::before,\n    &::after {\n      content: '';\n      display: block;\n      height: 2px;\n      position: absolute;\n      top: 50%;\n      width: 100%;\n    }\n\n    &::before {\n      transform: translate3d(-1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n\n    &::after {\n      background: get-color('background', $light-theme);\n      transform: translate3d(1px, -50%, 0) rotate3d(0, 0, 1, 45deg);\n    }\n  }\n}\n\n\n/// Modifies the styles of the text-field-password ONLY if the value of `$light-theme` is\n/// different than the `$md-light-theme`. This is only useful if you have a part of your app\n/// that is `dark-theme` while another section is not. In most cases, you should use the\n/// `react-md-theme-text-fields` mixin instead.\n///\n/// @example scss - Example Usage SCSS\n///   .my-subsection-styling {\n///     @include react-md-theme-text-field-password(true);\n///   }\n///\n/// @see {mixin} react-md-theme-text-fields\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @group text-fields, themes\n@mixin react-md-theme-text-field-password($light-theme: $md-light-theme) {\n  @if $light-theme != $md-light-theme {\n    .md-password-btn--active {\n      &::before {\n        background: get-color('secondary', $light-theme);\n      }\n    }\n\n    .md-password-btn--invisible::after {\n      background: get-color('background', $light-theme);\n    }\n  }\n}\n\n/// Creates the styles for the text field's inline indicator. This is is for showing a password button\n/// or some other icon within the text field.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-inline-indicator;\n@mixin react-md-text-field-inline-indicator {\n  .md-text-field-inline-indicator {\n    position: absolute;\n    right: 0;\n  }\n\n  .md-text-field--inline-indicator {\n    width: calc(100% - #{$md-font-icon-size});\n  }\n}\n\n/// Creates the styles for showing inline indicators in text fields on mobile devices. This should\n/// be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-text-field-inline-indicator-mobile;\n///   }\n///\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///   floating label styles for inline indicators should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the block styles should\n///     be included\n/// @group text-fields, media-queries\n@mixin react-md-text-field-inline-indicator-mobile($include-floating-label: $md-text-field-include-floating-label, $include-block: $md-text-field-include-block) {\n  .md-text-field-inline-indicator {\n    top: 9px;\n\n    @if $include-floating-label {\n      &--floating {\n        top: 34px;\n      }\n    }\n\n    @if $include-block {\n      &--block {\n        top: 17px;\n      }\n    }\n  }\n}\n\n/// Creates the styles for showing inline indicators in text fields on desktop screens. This should\n/// be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-text-field-inline-indicator-desktop;\n///   }\n///\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///   floating label styles for inline indicators should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the block styles should\n///     be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense icons styles\n///     should be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-inline-indicator-desktop(\n  $include-floating-label: $md-text-field-include-floating-label,\n  $include-block: $md-text-field-include-block,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  .md-text-field-inline-indicator {\n    top: if($include-dense-icons, 9px, 7px);\n\n    @if $include-floating-label {\n      &--floating {\n        top: if($include-dense-icons, 30px, 28px);\n      }\n    }\n\n    @if $include-block {\n      &--block {\n        top: if($include-dense-icons, 12px, 10px);\n      }\n    }\n  }\n}\n\n/// Includes the media queries for showing inline indicators in text fields.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-inline-indicator-media;\n///\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///   floating label styles for inline indicators should be included.\n/// @param {Boolean} include-block [$md-text-field-include-block] - Boolean if the block styles should\n///     be included\n/// @group text-fields, media-queries\n@mixin react-md-text-field-inline-indicator-media($include-floating-label: $md-text-field-include-floating-label, $include-block: $md-text-field-include-block) {\n  @media #{$md-mobile-media} {\n    @include react-md-text-field-inline-indicator-mobile($include-floating-label, $include-block);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-text-field-inline-indicator-desktop($include-floating-label, $include-block);\n  }\n}\n\n\n/// Creates the styles for a custom sized text field for mobile devices. This\n/// should normally be used within the `react-md-text-field-custom-sizes-mobile`\n/// mixin.\n///\n/// @example scss - Example usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-text-field-custom-size-mobile('title', (34px, .25s, 46px, 34px));\n///\n/// @see {mixin} react-md-text-field-custom-sizes-mobile\n/// @param {String} name - The custom size name.\n/// @param {List} list - A list containing the font size, the transition-time, the mobile y position\n///     and the desktop y position.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if floating label\n///     styles should be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-custom-size-mobile($name, $list, $include-floating-label: $md-text-field-include-floating-label) {\n  @if $include-floating-label != null {\n    .md-floating-label--inactive-#{$name} {\n      transform: translate3d(0, nth($list, 3), 0);\n    }\n  }\n}\n\n\n/// Creates the styles for a custom sized text field for desktop screens. This\n/// should normally be used within the `react-md-text-field-custom-sizes-desktop`\n/// mixin.\n///\n/// @example scss - Example usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-text-field-custom-size-desktop('title', (34px, .25s, 46px, 34px));\n///\n/// @see {mixin} react-md-text-field-custom-sizes-desktop\n/// @param {String} name - The custom size name.\n/// @param {List} list - A list containing the font size, the transition-time, the mobile y position\n///     and the desktop y position.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if floating label\n///     styles should be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-custom-size-desktop($name, $list, $include-floating-label: $md-text-field-include-floating-label) {\n  @if $include-floating-label != null {\n    .md-floating-label--inactive-#{$name} {\n      transform: translate3d(0, nth($list, 4), 0);\n    }\n  }\n}\n\n\n/// Creates all the styles for all the custom sizes for text fields for mobile devices. This\n/// should normally be used in a media query or the `react-md-text-fields` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-text-field-custom-sizes-mobile($md-text-field-custom-sizes);\n///   }\n///\n/// @see {mixin} react-md-text-fields\n/// @see md-text-field-custom-sizes\n/// @param {Map} custom-sizes [$md-text-field-custom-sizes] - A map of custom sizes to use\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if floating label\n///     styles should be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-custom-sizes-mobile($custom-sizes: $md-text-field-custom-sizes, $include-floating-label: $md-text-field-include-floating-label) {\n  @if $custom-sizes != null {\n    @each $name, $list in $custom-sizes {\n      @include react-md-text-field-custom-size-mobile($name, $list, $include-floating-label);\n    }\n  }\n}\n\n\n\n/// Creates all the styles for all the custom sizes for text fields for desktop screens. This\n/// should normally be used in a media query or the `react-md-text-fields` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-text-field-custom-sizes-desktop($md-text-field-custom-sizes);\n///   }\n///\n/// @see {mixin} react-md-text-fields\n/// @see md-text-field-custom-sizes\n/// @param {Map} custom-sizes [$md-text-field-custom-sizes] - A map of custom sizes to use\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if floating label\n///     styles should be included.\n/// @group text-fields, media-queries\n@mixin react-md-text-field-custom-sizes-desktop($custom-sizes: $md-text-field-custom-sizes, $include-floating-label: $md-text-field-include-floating-label) {\n  @if $custom-sizes != null {\n    @each $name, $list in $custom-sizes {\n      @include react-md-text-field-custom-size-desktop($name, $list, $include-floating-label);\n    }\n  }\n}\n\n\n/// Includes the CSS for custom sizes for text fields. This will create some class names with the\n/// components they modify and a `--#{$name}` suffix.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-text-field-custom-sizes;\n///\n/// @example scss - Example Usage CSS Output\n///   .md-text-field--title {\n///     font-size: 34px;\n///   }\n///\n///   .md-floating-label--title {\n///     font-size: 34px;\n///   }\n///\n/// @param {Map} font-sizes [$md-text-field-custom-sizes] - A map of size names with font sizes.\n/// @param {Boolean} include-floating-label [$md-text-field-include-floating-label] - Boolean if the\n///     custom text field size should include the styles for floating labels.\n@mixin react-md-text-field-custom-sizes($font-sizes: $md-text-field-custom-sizes, $include-floating-label: $md-text-field-include-floating-label) {\n  @if $font-sizes != null {\n    @each $name, $list in $font-sizes {\n      $font-size: nth($list, 1);\n\n      .md-text-field--#{$name} {\n        font-size: $font-size;\n      }\n\n      @if $include-floating-label {\n        $time: nth($list, 2);\n\n        @if $time != null {\n          .md-floating-label--#{$name} {\n            transition-duration: $time;\n          }\n        }\n\n        .md-floating-label--inactive-#{$name} {\n          font-size: $font-size;\n        }\n      }\n    }\n  }\n}\n\n\n\n/// A mixin for adding custom styles to placeholders since the autoprefixer doesn't seem\n/// to be able to pick it up correctly.\n///\n/// @example scss - Example Scss Usage\n///   .md-text-field[disabled] {\n///     @include react-md-style-placeholders {\n///       color: get-color(disabled, true);\n///     }\n///   }\n///\n///   .some-field-container {\n///     @include react-md-style-placeholders(true) {\n///       color: red;\n///     }\n///   }\n///\n/// @example scss - Example CSS Output\n///   .md-text-field[disabled]:placeholder {\n///     color: rgba(0, 0, 0, .87);\n///   }\n///\n///   .md-text-field[disabled]:-moz-placeholder {\n///     color: rgba(0, 0, 0, .87);\n///   }\n///\n///   .md-text-field[disabled]::-moz-placeholder {\n///     color: rgba(0, 0, 0, .87);\n///   }\n///\n///   .md-text-field[disabled]:-ms-input-placeholder {\n///     color: rgba(0, 0, 0, .87);\n///   }\n///\n///   .md-text-field[disabled]::-webkit-placeholder {\n///     color: rgba(0, 0, 0, .87);\n///   }\n///\n///\n///   .some-field-container :placeholder {\n///     color: red;\n///   }\n///\n///   .some-field-container :-moz-placeholder {\n///     color: red;\n///   }\n///\n///   .some-field-container ::-moz-placeholder {\n///     color: red;\n///   }\n///\n///   .some-field-container :-ms-input-placeholder {\n///     color: red;\n///   }\n///\n///   .some-field-container ::-webkit-placeholder {\n///     color: red;\n///   }\n///\n/// @param {Boolean} child [true] - Boolean if the placeholder should apply to a child of the class\n///   name instead of applying to the current class name/selector.\n@mixin react-md-style-placeholders($child: false) {\n  @if $child {\n    // scss-lint:disable VendorPrefix, PseudoElement\n    :placeholder {\n      @content;\n    }\n\n    :-moz-placeholder {\n      @content;\n    }\n\n    ::-moz-placeholder {\n      @content;\n    }\n\n    :-ms-input-placeholder {\n      @content;\n    }\n\n    ::-webkit-input-placeholder {\n      @content;\n    }\n  } @else {\n    // scss-lint:disable VendorPrefix, PseudoElement\n\n    &:placeholder {\n      @content;\n    }\n\n    &:-moz-placeholder {\n      @content;\n    }\n\n    &::-moz-placeholder {\n      @content;\n    }\n\n    &:-ms-input-placeholder {\n      @content;\n    }\n\n    &::-webkit-input-placeholder {\n      @content;\n    }\n  }\n}\n\n\n/// Applies a color to all the browser placeholder pseudo elements.\n///\n/// @example scss - Basic Usage SCSS\n///   .md-primary.md-toolbar {\n///     @include md-theme-placeholders($md-dark-theme-help-text-color);\n///   }\n///\n/// @example scss - Basic Usage CSS Output\n///   .md-primary.md-toolbar {\n///     :-moz-placeholder {\n///       color: $color;\n///     }\n///\n///     ::-moz-placeholder {\n///       color: $color;\n///     }\n///\n///     :-ms-input-placeholder {\n///       color: $color;\n///     }\n///\n///     ::-webkit-input-placeholder {\n///       color: $color;\n///     }\n///   }\n///\n/// @param {Color} color - The placeholder color to use\n/// @group text-fields, themes\n/// @deprecated\n/// @see react-md-style-placeholders\n@mixin react-md-theme-placeholders($color) {\n  @include react-md-style-placeholders(true) {\n    color: $color;\n  }\n}\n","////\n/// @group avatars\n////\n@import 'icons';\n\n\n/// The default size for an avatar\n/// @type Number\n$md-avatar-size: 40px !default;\n\n/// The border radius for an avatar.\n/// @type Number\n$md-avatar-border-radius: 50% !default;\n\n/// The border color to use for an avatar. If this value is null, the border color\n/// will be the current theme's divider color.\n/// @type Color\n$md-avatar-border-color: null !default;\n\n/// The default background color for an avatar.\n/// @type Color\n$md-avatar-default-background: $md-grey-700 !default;\n\n/// The default text color for an avatar.\n/// @type Color\n$md-avatar-default-color: $md-grey-100 !default;\n\n/// Boolean if the avatar color suffixes should be included by default.\n/// @type Boolean\n$md-avatar-include-suffixes: true !default;\n\n/// Boolean if the `md-avatar--icon-sized` class name should also be included.\n/// This will force an avatar to be the same size as an icon.\n/// @type Boolean\n$md-avatar-include-icon-sized: true !default;\n\n/// A map of avatar color suffixes to use. Each key will be used\n/// as an avatar suffix name, and the value will be a list of two\n/// colors where the first item is the background color and the\n/// second item is the text color.\n///\n/// The default colors where chosen to pass the [WebAIM](http://webaim.org/resources/contrastchecker/)\n/// for large text only. If these values are changed, it should pass them as well.\n/// @type Map\n$md-avatar-colors: (\n  'red': $md-red-a-700 $md-red-50,\n  'pink': $md-pink-600 $md-white-base,\n  'purple': $md-purple-700 $md-purple-100,\n  'deep-purple': $md-deep-purple-900 $md-deep-purple-100,\n  'indigo': $md-indigo-600 $md-indigo-100,\n  'blue': $md-blue-a-700 $md-white-base,\n  'light-blue': $md-light-blue-300 $md-deep-purple-900,\n  'cyan': $md-cyan-400 $md-teal-900,\n  'teal': $md-teal-a-400 $md-teal-900,\n  'green': $md-green-800 $md-green-50,\n  'light-green': $md-light-green-300 $md-green-900,\n  'lime': $md-lime-400 $md-teal-800,\n  'yellow': $md-yellow-a-200 $md-brown-500,\n  'amber': $md-amber-400 $md-brown-800,\n  'orange': $md-orange-600 $md-grey-900,\n  'deep-orange': $md-deep-orange-a-400 $md-grey-900,\n  'brown': $md-brown-500 $md-brown-50,\n  'grey': $md-grey-700 $md-grey-100,\n  'blue-grey': $md-blue-grey-700 $md-blue-grey-50,\n) !default;\n\n/// Includes the styles for the Avatars.\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries for\n///     avatars should also be included. This will really only create additional styles if\n///     `$include-dense` is `true` as well.\n/// @param {Boolean} include-suffixes [$md-avatar-include-suffixes] - Boolean if the avatar color suffixes\n///     should be included.\n/// @param {Boolean} include-icon-sized [$md-avatar-include-icon-sized] - Boolean if icon sized avatars\n///     should be included.\n/// @param {Boolean} include-dense [$md-font-icon-include-dense] - Boolean if the dense spec of icons should\n///     be included.\n@mixin react-md-avatars(\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-suffixes: $md-avatar-include-suffixes,\n  $include-icon-sized: $md-avatar-include-icon-sized,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  .md-avatar {\n    $border-color: $md-avatar-border-color;\n    @if $border-color == null {\n      $border-color: if($md-light-theme, $md-light-theme-divider-color, $md-dark-theme-divider-color);\n    }\n\n    border: 1px solid $border-color;\n    border-radius: $md-avatar-border-radius;\n    height: $md-avatar-size;\n    overflow: hidden;\n    text-align: center;\n    width: $md-avatar-size;\n\n    .md-icon {\n      color: inherit;\n    }\n\n    @if $include-icon-sized {\n      &--icon-sized {\n        height: $md-font-icon-size;\n        width: $md-font-icon-size;\n      }\n    }\n  }\n\n  .md-avatar-img {\n    height: 100%;\n    width: auto;\n  }\n\n  .md-avatar-content {\n    align-items: center;\n    display: flex;\n    font-size: $md-font-icon-size;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n\n  @include react-md-theme-avatar($md-avatar-default-background, $md-avatar-default-color, default);\n  @if $include-media {\n    @include react-md-avatar-media($include-icon-sized, $include-dense-icons);\n  }\n\n  @if $include-suffixes {\n    @each $suffix, $colors in $md-avatar-colors {\n      @include react-md-theme-avatar(nth($colors, 1), nth($colors, 2), $suffix);\n    }\n  }\n}\n\n/// This will only update the base avatar's border color if the `$light-theme` is different than\n/// `$md-light-theme`. If you want to add different colors, you should use the `react-md-theme-avatar`\n/// mixin.\n///\n/// @see {mixin} react-md-theme-avatar\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @group avatars, themes\n@mixin react-md-theme-avatars($light-theme: $md-light-theme) {\n  @if $light-theme != $md-light-theme and $md-avatar-border-color != null {\n    .md-avatar {\n      border-color: get-color('divider', $light-theme);\n    }\n  }\n}\n\n/// Creates a single _theme_ for the Avatar. It simply creates a\n/// class name with the new background and text color with the given\n/// suffix.\n///\n/// @example scss - Simple Example SCSS\n///   @include react-md-theme-avatar(#000, #fff, black);\n///\n/// @example scss - Simple Example CSS Output\n///   .md-avatar--black {\n///     background: #000;\n///     color: #fff;\n///   }\n///\n/// @param {Color} bg-color - The background color to use.\n/// @param {Color} text-color - The text color to use.\n/// @param {String} suffix - The class name suffix to use.\n/// @group avatars, themes\n@mixin react-md-theme-avatar($bg-color, $text-color, $suffix) {\n  .md-avatar--#{$suffix} {\n    background: $bg-color;\n    color: $text-color;\n  }\n}\n\n/// Creates the media queries with styles for avatars. This really only generates any new styles\n/// if icon sized avatars are included, the dense spec for icons are included, and the font-icon size\n/// is different for default and the dense spec.\n///\n/// @param {Boolean} include-icon-sized [$md-avatar-include-icon-sized] - Boolean if icon sized avatars should\n///     be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense spec for icons\n///     should be included.\n/// @group avatars, media-queries\n@mixin react-md-avatar-media($include-icon-sized: $md-avatar-include-icon-sized, $include-dense-icons: $md-font-icon-include-dense) {\n  @if $include-icon-sized and $include-dense-icons and $md-font-icon-size != $md-font-icon-dense-size {\n    @media #{$md-desktop-media} {\n      .md-avatar-content {\n        font-size: $md-font-icon-dense-size;\n      }\n\n      .md-avatar--icon-sized {\n        height: $md-font-icon-dense-size;\n        width: $md-font-icon-dense-size;\n      }\n    }\n  }\n}\n","////\n/// @group badges\n////\n\n/// Boolean if the styles for a circular badge should be included.\n/// @type Boolean\n$md-badge-include-circular: true !default;\n\n/// Boolean if the default badge styles should be included. This will be\n/// just a background color change for the badge.\n/// @type Boolean\n$md-badge-include-default: true !default;\n\n/// The top position for a badge within the container. You can set this value to\n/// null if it should not be applied.\n/// @type Number\n$md-badge-top: -8px !default;\n\n/// The right position for a badge within the container. You can set this value to\n/// null if it should not be applied.\n/// @type Number\n$md-badge-right: -8px !default;\n\n/// The bottom position for a badge within the container. You can set this value to\n/// null if it should not be applied.\n/// @type Number\n$md-badge-bottom: null !default;\n\n/// The left position for a badge within the container. You can set this value to\n/// null if it should not be applied.\n/// @type Number\n$md-badge-left: null !default;\n\n/// The border-radius to apply to the circular badge.\n/// @type Number\n$md-badge-circular-border-radius: 50% !default;\n\n/// The font size to use within a circular badge.\n/// type Number\n$md-badge-circular-font-size: 10px !default;\n\n/// The height to use for a circular badge.\n/// @type Number\n$md-badge-circular-height: 24px !default;\n\n/// The width to use for a circular badge.\n/// @type Number\n$md-badge-circular-width: $md-badge-circular-height !default;\n\n/// The background color to use for a _default_ badge in the light theme.\n/// @type Color\n$md-badge-light-theme-default-color: rgba(0, 0, 0, .2) !default;\n\n/// The background color to use for a _default_ badge in the dark theme.\n/// @type Color\n$md-badge-dark-theme-default-color: get-color('background', false) !default;\n\n/// Creates the styles for a badge.\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the badge should be styled for\n///   the light theme. This really only gets applied if `$md-badge-include-default` is `true`.\n/// @param {Boolean} include-circular [$md-badge-include-circular] - Boolean if the styles for\n///   a circular badge should be included.\n/// @param {Boolean} include-default [$md-badge-include-default] - Boolean if _default_ styles\n///   should be created for a badge. This will be the background color of the badge.\n@mixin react-md-badges($light-theme: $md-light-theme, $include-circular: $md-badge-include-circular, $include-default: $md-badge-include-default) {\n  .md-badge-container {\n    position: relative;\n  }\n\n  .md-badge {\n    bottom: $md-badge-bottom;\n    left: $md-badge-left;\n    position: absolute;\n    right: $md-badge-right;\n    top: $md-badge-top;\n\n    @if $include-circular {\n      &--circular {\n        align-items: center;\n        border-radius: $md-badge-circular-border-radius;\n        display: flex;\n        font-size: $md-badge-circular-font-size;\n        height: $md-badge-circular-height;\n        justify-content: center;\n        width: $md-badge-circular-width;\n      }\n    }\n\n    @if $include-default {\n      &--default {\n        background: if($light-theme, $md-badge-light-theme-default-color, $md-badge-dark-theme-default-color);\n      }\n    }\n  }\n}\n\n/// Only updates the default styles for a badge if the `$light-theme` does not equal\n/// `$md-light-theme` and the default badge styles should be included.\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @param {Boolean} include-default [$md-badge-include-default] - Boolean if the default\n///   styles for a badge should be included.\n@mixin react-md-theme-badges($light-theme: $md-light-theme, $include-default: $md-badge-include-default) {\n  @if $light-theme != $md-light-theme and $include-default {\n    .md-badge--default {\n      background: if($light-theme, $md-badge-light-theme-default-color, $md-badge-dark-theme-default-color);\n    }\n  }\n}\n","////\n/// @group bottom-navigations\n////\n\n\n/// The default ink color to use for a shifting bottom navigation.\n/// @type Color\n$md-bottom-navigation-shifting-ink-color: rgba($md-white-base, .12) !default;\n\n/// The transition time it takes for the bottom navigation to slide out of view when\n/// it is dynamic. It is also the transition time for switching the background color.\n/// @type Number\n$md-bottom-navigation-transition-time: $md-transition-time * 2 !default;\n\n/// Boolean if the shifting bottom navigation style should be included by default.\n/// @type Boolean\n$md-bottom-navigation-include-shifting: true !default;\n\n/// Boolean if the dynamic bottom navigation style should be included by default.\n/// @type Boolean\n$md-bottom-navigation-include-dynamic: true !default;\n\n/// The z-index to use for bottom navigations\n/// @type Number\n/// @group bottom-navigations, z-indexes\n$md-bottom-navigation-z-index: 11 !default;\n\n/// The height for the bottom navigation bar.\n/// @type Number\n$md-bottom-navigation-height: 56px !default;\n\n/// The max width for a tab on the bottom navigation.\n/// @type Number\n$md-bottom-navigation-max-width: 168px !default;\n\n/// The top padding for a bottom navigation's tab when active.\n/// @type Number\n$md-bottom-navigation-top-padding-active: 6px !default;\n\n/// The top padding for a bottom navigation's tab when inactive.\n/// @type Number\n$md-bottom-navigation-top-padding-inactive: 8px !default;\n\n/// The bottom padding for a bottom navigation's tab.\n/// @type Number\n$md-bottom-navigation-bottom-padding: 10px !default;\n\n/// The left and right padding to apply to a bottom navigation's tab.\n/// @type Number\n$md-bottom-navigation-lr-padding: 12px !default;\n\n$md-bottom-navigation-active-font-size: 14px !default;\n$md-bottom-navigation-inactive-font-size: 12px !default;\n\n/// The min width for a fixed bottom navigation's tab.\n/// @type Number\n$md-bottom-navigation-fixed-min-width: 80px !default;\n\n/// The min width for a shifting bottom navigation's tab.\n/// @type Number\n$md-bottom-navigation-shifting-active-min-width: 96px !default;\n\n/// The min width for an inactive shifting bottom navigation's tab.\n/// @type Number\n$md-bottom-navigation-shifting-inactive-min-width: 56px !default;\n\n/// The max width for an inactive shifting bottom navigation's tab.\n/// @type Number\n$md-bottom-navigation-shifting-inactive-max-width: 96px !default;\n\n\n/// Creates the styles for bottom navigations. If both the `include-shifting` and `include-dynamic`\n/// params are false, no styles will be created.\n///\n/// @example markdown - Utility Classes\n///   The bottom navigations have a utility class name to offset any content to prevent it from underlapping the\n///   bottom navigations. Just apply the `md-bottom-navigation-offset` class name to whatever element or component\n///   to add padding bottom equal to the height of the bottom navigation.\n///\n///   ```js\n///   <div>\n///     <main className=\"md-bottom-navigation-offset\">Some Content</main>\n///     <BottomNavigation {...props} />\n///   </div>\n///   ```\n///\n/// @param {Boolean} include-shifting [$md-bottom-navigation-include-shifting] - Boolean if the styles\n///     for a shifting bottom navigation should be included.\n/// @param {Boolean} include-dynamic [$md-bottom-navigation-include-dynamic] - Boolean if the styles\n///     for a dynamic bottom navigation should be included.\n@mixin react-md-bottom-navigations($include-shifting: $md-bottom-navigation-include-shifting, $include-dynamic: $md-bottom-navigation-include-dynamic) {\n  @if $include-shifting or $include-dynamic {\n    .md-bottom-navigation {\n      bottom: 0;\n      display: flex;\n      justify-content: center;\n      left: 0;\n      overflow: hidden;\n      position: fixed;\n      width: 100%;\n      z-index: $md-bottom-navigation-z-index;\n\n      @if $include-shifting {\n        &--shifting {\n          transition-duration: $md-bottom-navigation-transition-time;\n          transition-property: background;\n        }\n      }\n\n      @if $include-dynamic {\n        &--dynamic {\n          transform: translate3d(0, 0, 0);\n          transition-duration: $md-bottom-navigation-transition-time;\n          transition-property: background, transform;\n\n          &-inactive {\n            transform: translate3d(0, 100%, 0);\n          }\n        }\n      }\n    }\n\n    .md-bottom-navigation-offset {\n      padding-bottom: $md-bottom-navigation-height;\n    }\n\n    @include react-md-bottom-navigations-nav($include-shifting);\n  }\n}\n\n/// Creates the styles for a tab in the bottom navigation nav item (link). This should\n/// normally be used within the `react-md-bottom-navigations` mixin.\n///\n/// @param {Boolean} include-shifting [$md-bottom-navigation-include-shifting] - Boolean if the styles\n///     for a shifting bottom navigation should be included.\n@mixin react-md-bottom-navigations-nav($include-shifting: $md-bottom-navigation-include-shifting) {\n  .md-bottom-nav {\n    color: inherit;\n    display: block;\n    flex-grow: 1;\n    font-size: $md-bottom-navigation-inactive-font-size;\n    height: $md-bottom-navigation-height;\n    max-width: $md-bottom-navigation-max-width;\n    padding: $md-bottom-navigation-top-padding-inactive $md-bottom-navigation-lr-padding $md-bottom-navigation-bottom-padding;\n    text-align: center;\n    text-decoration: none;\n    user-select: none;\n\n    &--active {\n      flex-shrink: 0;\n      font-size: $md-bottom-navigation-active-font-size;\n      padding-top: $md-bottom-navigation-top-padding-active;\n    }\n\n    &--fixed {\n      min-width: $md-bottom-navigation-fixed-min-width;\n    }\n\n    @if $include-shifting {\n      &--shifting {\n        min-width: $md-bottom-navigation-shifting-active-min-width;\n        position: static;\n        transition-duration: $md-transition-time;\n        transition-property: max-width;\n\n        &-inactive {\n          max-width: $md-bottom-navigation-shifting-inactive-max-width;\n          min-width: $md-bottom-navigation-shifting-inactive-min-width;\n          padding-top: 16px;\n        }\n\n        .md-ink-container {\n          overflow: visible;\n        }\n\n        .md-ink {\n          background: $md-bottom-navigation-shifting-ink-color;\n        }\n      }\n    }\n\n    &-label {\n      transition-duration: $md-transition-time;\n      transition-property: color, font-size;\n\n      @if $include-shifting {\n        &--shifting-inactive {\n          max-width: $md-bottom-navigation-shifting-inactive-min-width - $md-bottom-navigation-lr-padding * 2;\n          overflow: hidden;\n          white-space: nowrap;\n        }\n      }\n    }\n\n    .md-icon {\n      @extend %md-block-centered;\n    }\n  }\n}\n\n/// Styles a bottom navigation that is colored to update the `.md-background--primary` color to a new color. It also will\n/// optionally update the label's color and the ink's color if they do not equal the defaults. This is mostly used when\n/// you want to update the navigation drawer's color when a new tab is clicked.\n///\n/// @example scss - Example Usage SCSS\n///   .another-theme {\n///     @include react-md-theme-bottom-navigations-color($md-deep-purple-500);\n///   }\n///\n/// @example javascript - Example Usage React Components\n///   <div className={cn({ 'another-theme': themeTabActive })}>\n///     <BottomNavigation\n///       links={[{ label: 'Woop', }, { label: 'Theme Tab', }, { label: 'Noop' }]}\n///       onNavChange={activeTabIndex => this.setState({ themeTabActive: activeTabIndex === 1 })}\n///     />\n///   </div>\n///\n/// @param {Color} bg-color - The background color to force for the `.md-background--primary` of the bottom navigation.\n/// @param {Color} label-color [$md-white-base] - The color to style the label. If this is equal to `$md-white-base`, the styles\n///     will not be created.\n/// @param {Color} ink-color [$md-bottom-navigation-shifting-ink-color] - The ink color to use for this theme. If it equals the\n///     `$md-bottom-navigation-shifting-ink-color`, the styles will not be included.\n/// @group bottom-navigations, themes\n@mixin react-md-theme-bottom-navigations-colored($bg-color, $label-color: $md-white-base, $ink-color: $md-bottom-navigation-shifting-ink-color) {\n  .md-bottom-navigation.md-background--primary {\n    background: $bg-color;\n  }\n\n  @if $label-color != $md-white-base {\n    .md-bottom-nav-label {\n      color: $label-color;\n    }\n  }\n\n  @if $ink-color != $md-bottom-navigation-shifting-ink-color {\n    .md-bottom-navigation .md-ink {\n      background: $ink-color;\n    }\n  }\n}\n","@import 'colors';\n\n/// The primary color to use throughout the app. This should be a color\n/// with a `-500` suffix.\n/// @type Color\n/// @group themes\n$md-primary-color: $md-indigo-500 !default;\n\n/// The opacity to apply to the primary color with the `md-background--primary` class name.\n/// @type Number\n/// @group themes\n$md-primary-hover-opacity: .9 !default;\n\n/// The text color to use for any text that inside the `.md-background--primary` class name.\n/// This should ideally pass the color contrast test when.\n/// @type Color\n/// @group themes\n$md-primary-background-text-color: $md-white-base !default;\n\n/// The secondary color to use throughout the app. This should be a color\n/// with a `-a-{NUMBER}` suffix.\n/// @type Color\n/// @group themes\n$md-secondary-color: $md-pink-a-200 !default;\n\n/// The opacity to apply to the secondary color with the `md-background--secondary` class name.\n/// @type Number\n/// @group themes\n$md-secondary-hover-opacity: .9 !default;\n\n/// The text color to use for any text that inside the `.md-background--secondary` class name.\n/// This should ideally pass the color contrast test when.\n/// @type Color\n/// @group themes\n$md-secondary-background-text-color: $md-white-base !default;\n\n/// The error color to apply to icons, text fields, select fields, etc.\n/// @type Color\n/// @group themes\n$md-error-color: $md-red-500 !default;\n\n/// Boolean if the application is to be themed with the light theme.\n/// @type Boolean\n/// @group themes\n$md-light-theme: true !default;\n\n/// The default transition time to use on most animations/transitions.\n/// @type Number\n/// @group transitions\n$md-transition-time: .15s !default;\n\n/// The default min width for a mobile device.\n/// @type Number\n/// @group media-queries\n$md-mobile-min-width: 320px !default;\n\n/// The default min width for a tablet device.\n/// @type Number\n/// @group media-queries\n$md-tablet-min-width: 768px !default;\n\n/// The default min width for a desktop screen.\n/// @type Number\n/// @group media-queries\n$md-desktop-min-width: 1025px !default;\n\n/// The media query to detect devices in portrait mode. Normally you could just do something\n/// like `(orientation: portrait)`, but this doesn't work when the soft keyboard appears. The\n/// only part of the specification for portrait is that the \"height\" is greater than the \"width\"\n/// of the device. Android devices reduce the screen height when the soft keyboard appears and\n/// it is now considered landscape with this logic.\n///\n/// @type String\n/// @group media-queries\n$md-portrait-media: '(max-aspect-ratio: 13/9)' !default;\n\n/// The media query to detect devices in landscape mode.\n///\n/// @see md-portrait-media\n/// @type String\n/// @group media-queries\n$md-landscape-media: '(min-aspect-ratio: 13/9)' !default;\n\n/// The default mobile media query.\n/// @type String\n/// @group media-queries\n$md-mobile-media: 'screen and (min-width: #{$md-mobile-min-width})' !default;\n\n/// The default media query for a portrait mobile device.\n/// @type String\n/// @group media-queries\n$md-mobile-portrait-media: 'screen and (min-width: #{$md-mobile-min-width}) and #{$md-portrait-media}' !default;\n\n/// The default media query for a landscape mobile device.\n/// @type String\n/// @group media-queries\n$md-mobile-landscape-media: 'screen and (min-width: #{$md-mobile-min-width}) and #{$md-landscape-media}' !default;\n\n/// The default media query for a tablet device.\n/// @type String\n/// @group media-queries\n$md-tablet-media: 'screen and (min-width: #{$md-tablet-min-width})' !default;\n\n/// The default media query for a portrait tablet device.\n/// @type String\n/// @group media-queries\n$md-tablet-portrait-media: 'screen and (min-width: #{$md-tablet-min-width}) and #{$md-portrait-media}' !default;\n\n/// The default media query for a landscape tablet device.\n/// @type String\n/// @group media-queries\n$md-tablet-landscape-media: 'screen and (min-width: #{$md-tablet-min-width}) and #{$md-landscape-media}' !default;\n\n/// The default media query for a desktop device.\n/// @type String\n/// @group media-queries\n$md-desktop-media: 'screen and (min-width: #{$md-desktop-min-width})' !default;\n\n/// Boolean if the media queries should be included by default for all component mixins.\n/// Set this to false if you want to manually include them. It is really only beneficial\n/// if you want to join all media queries into one, but you can always use a postcss plugin\n/// to combine them if you are worried about bundle size.\n/// @type Boolean\n/// @group media-queries\n$md-media-included: true !default;\n\n\n/// The default accessible height for a lot of material design components.\n/// @type Number\n/// @group defaults\n$md-height: 48px !default;\n\n/// The default padding used for most material design components.\n/// @type Number\n/// @group defaults\n$md-default-padding: 16px !default;\n","////\n/// @group buttons\n////\n\n/// Boolean if the flat button styles should be included.\n/// @type Boolean\n$md-btn-include-flat: true !default;\n\n/// Boolean if the raised button styles should be included.\n/// @type Boolean\n$md-btn-include-raised: true !default;\n\n/// Boolean if the icon button styles should be included.\n/// @type Boolean\n$md-btn-include-icon: true !default;\n\n/// Boolean if the floating button styles should be included.\n/// @type Boolean\n$md-btn-include-floating: true !default;\n\n/// The default z index for fixed floating buttons\n/// @type Number\n/// @see md-dialog-full-page-z-index\n/// @see md-dialog-overlay-z-index\n/// @see md-drawer-z-index\n/// @see md-menu-z-index\n/// @see md-picker-inline-z-index\n/// @see md-snackbar-z-index\n/// @see md-toolbar-z-index\n/// @see md-overlay-z-index\n/// @group buttons, z-indexes\n$md-btn-fixed-z-index: 10 !default;\n\n\n/// The height for buttons to make them accessible for touch devices.\n/// @type Number\n/// @access private;\n$md-btn-accessible-height: 48px;\n\n/// The border radius to apply to text buttons.\n/// @type Number\n$md-btn-text-border-radius: 2px !default;\n\n/// The font size for buttons on mobile devices.\n///\n/// @see md-btn-text-font-size\n/// @type Number\n$md-btn-mobile-font-size: 14px !default;\n\n/// The height for button on mobile devices.\n///\n/// @see md-btn-text-height\n/// @type Number\n$md-btn-mobile-height: 36px !default;\n\n/// The minimum margin to use for fixed floating buttons on mobile-devices.\n///\n/// @see md-btn-floating-margin\n/// @type Number\n$md-btn-mobile-floating-margin: 16px !default;\n\n/// The font size for buttons on desktop screens.\n///\n/// @see md-btn-text-font-size\n/// @type Number\n$md-btn-desktop-font-size: 13px !default;\n\n/// The height for buttons on desktop screens.\n///\n/// @see md-btn-text-height\n/// @type Number\n$md-btn-desktop-height: 32px !default;\n\n/// The minimum margin to use for fixed floating buttons on desktop screens.\n///\n/// @see md-btn-floating-margin\n/// @type Number\n$md-btn-desktop-floating-margin: 24px !default;\n\n\n/// The too and bottom padding to apply to text buttons.\n/// @type Number\n$md-btn-tb-padding: 8px !default;\n\n/// The left and right padding to apply to text buttons.\n/// @type Number\n$md-btn-lr-padding: 16px !default;\n\n/// The min width for a flat or raised button.\n/// @type Number\n$md-btn-min-width: 88px !default;\n\n/// The default size for a floating button (FAB).\n/// @type Number\n$md-btn-floating-size: 56px !default;\n\n/// The size for a floating button when using the dense spec for icons.\n/// @type Number\n$md-btn-floating-dense-size: 48px !default;\n\n/// The mini size for a floating button.\n/// @type Number\n$md-btn-floating-mini-size: 40px !default;\n\n/// The available floating button fixed positions.\n/// @type List\n$md-btn-floating-fixed-positions: ('tl' 'tr' 'bl' 'br') !default;\n\n/// The size for an icon button.\n/// @type Number\n$md-btn-icon-size: $md-font-icon-size * 2 !default;\n\n/// The padding for an icon button.\n/// @type Number\n$md-btn-icon-padding: $md-btn-icon-size / 4 !default;\n\n/// The size for a icon button when using the dense spec.\n/// @type Number\n$md-btn-icon-dense-size: $md-font-icon-dense-size * 2 !default;\n\n/// The padding to use for a dense icon button.\n/// @type Number\n$md-btn-icon-dense-padding: $md-btn-icon-dense-size / 4 !default;\n\n/// The border radius to apply to icon buttons.\n/// @type Number\n$md-btn-icon-border-radius: 50% !default;\n\n/// The base color to use for default buttons in the light theme.\n/// @type Color\n$md-btn-light-theme-base-color: #999 !default;\n\n/// The background color to use for default buttons in the light theme.\n/// @type Color\n$md-btn-light-theme-hover-color: rgba($md-btn-light-theme-base-color, .12) !default;\n\n/// The background color to use for default buttons in the light theme that have been disabled.\n/// @type Color\n$md-btn-light-theme-disabled-color: rgba($md-btn-light-theme-base-color, .2) !default;\n\n/// The background color to use for default buttons that have been pressed in the light theme.\n/// @type Color\n$md-btn-light-theme-pressed-color: rgba($md-btn-light-theme-base-color, .4) !default;\n\n/// The base color to use for default buttons in the dark theme.\n/// @type Color\n$md-btn-dark-theme-base-color: #ccc !default;\n\n/// The hover color to use for default buttons in the dark theme.\n/// @type Color\n$md-btn-dark-theme-hover-color: rgba($md-btn-dark-theme-base-color, .12) !default;\n\n/// The background color to use for default buttons in the dark theme that have been disabled.\n/// @type Color\n$md-btn-dark-theme-disabled-color: rgba($md-btn-dark-theme-base-color, .2) !default;\n\n/// The background color to use for default buttons that have been pressed in the dark theme.\n/// @type Color\n$md-btn-dark-theme-pressed-color: rgba($md-btn-dark-theme-base-color, .25) !default;\n\n/// An optional height to apply to a text button for all screen sizes. This will take precedence over\n/// the mobile/desktop variables.\n///\n/// A side effect of using this variable is that the buttons will *not* be updated on mobile devices\n/// to have additional styles to make them accessible for touch users.\n///\n/// @see md-btn-mobile-height\n/// @see md-btn-desktop-height\n/// @type Number\n$md-btn-text-height: null !default;\n\n/// An optional font size to apply to a text button for all screen sizes. This will take precedence\n/// over the mobile/desktop variables.\n///\n/// @see md-btn-mobile-font-size\n/// @see md-btn-desktop-font-size\n/// @type Number\n$md-btn-text-font-size: null !default;\n\n/// An optional margin to get applied to floating buttons that are fixed on a page for all screen sizes.\n/// This will take precedence over the mobile/desktop variables.\n///\n/// @see md-btn-mobile-floating-margin\n/// @see md-btn-desktop-floating-margin\n/// @type Number\n$md-btn-floating-margin: null !default;\n\n\n\n/// Includes the styles for material design buttons. Each button type can optionally\n/// be excluded. However, if the `floating` styles are included, the `icon` styles\n/// will also be included.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-buttons\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to theme the\n///     buttons with.\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme\n///     the buttons with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the buttons should be styled\n///     for the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should\n///     also be included in this mixin.\n/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for\n///     buttons should be included.\n/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for\n///     buttons should be included.\n/// @param {Boolean} include-icon [$md-btn-include-icon] - Boolean if the icon styles for\n///     buttons should be included.\n/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for\n///     buttons should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense specs for icons\n///     should be included for buttons.\n@mixin react-md-buttons(\n  $primary-color: $md-primary-color,\n  $secondary-color: $md-secondary-color,\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-flat: $md-btn-include-flat,\n  $include-raised: $md-btn-include-raised,\n  $include-icon: $md-btn-include-icon,\n  $include-floating: $md-btn-include-floating,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  // scss-lint:disable QualifyingElement\n  a.md-btn {\n    text-decoration: none;\n  }\n\n  .md-btn {\n    background: transparent;\n    border: 0;\n    position: relative;\n    transition-duration: $md-transition-time;\n    transition-property: background, color;\n\n    // Prevents click event from firing when clicking a child\n    &[disabled] * {\n      pointer-events: none;\n    }\n\n    &--tooltip {\n      // This is required for IE11, the other browsers appear to do this by default.\n      overflow: visible;\n    }\n\n    &:focus {\n      outline-style: none;\n    }\n\n    .md-icon-separator {\n      height: 100%;\n    }\n\n    .md-icon-text {\n      @extend %md-font-medium;\n    }\n  }\n\n  .md-btn--hover {\n    background: if($light-theme, $md-btn-light-theme-hover-color, $md-btn-dark-theme-hover-color);\n  }\n\n  .md-btn--color-primary-active {\n    background: rgba($primary-color, .12);\n  }\n\n  .md-btn--color-secondary-active {\n    background: rgba($secondary-color, .12);\n  }\n\n  @if $include-flat or $include-raised {\n    .md-btn--text {\n      border-radius: $md-btn-text-border-radius;\n      font-size: $md-btn-text-font-size;\n      font-weight: $md-font-medium;\n      height: $md-btn-text-height;\n      min-width: $md-btn-min-width;\n      padding: $md-btn-tb-padding $md-btn-lr-padding;\n      text-transform: uppercase;\n    }\n  }\n\n  @if $include-raised or $include-floating {\n    .md-btn--raised {\n      @include md-box-shadow(1);\n\n      transition: background $md-transition-time, box-shadow $md-transition-time * 2, color $md-transition-time;\n    }\n\n    .md-btn--raised-disabled {\n      background: get-color('divider', $light-theme);\n    }\n\n    .md-btn--raised-pressed {\n      @include md-box-shadow(2);\n    }\n  }\n\n  @if $include-icon or $include-floating {\n    .md-btn--icon {\n      border-radius: $md-btn-icon-border-radius;\n      color: get-color('icon', $light-theme);\n      height: $md-btn-icon-size;\n      padding: $md-btn-icon-padding;\n      width: $md-btn-icon-size;\n    }\n  }\n\n  @if $include-floating {\n    .md-btn--floating {\n      height: $md-btn-floating-size;\n      padding: ($md-btn-floating-size - $md-font-icon-size) / 2;\n      transition-property: background, box-shadow, color;\n      width: $md-btn-floating-size;\n    }\n\n    .md-btn--floating-mini {\n      height: $md-btn-floating-mini-size;\n      padding: ($md-btn-floating-mini-size - $md-font-icon-size) / 2;\n      width: $md-btn-floating-mini-size;\n    }\n\n    .md-btn--fixed {\n      position: fixed;\n      z-index: $md-btn-fixed-z-index;\n    }\n\n    @if $md-btn-floating-margin != null {\n      @include react-md-button-fixed-positions($md-btn-floating-margin);\n    }\n  }\n\n  @if $include-media {\n    @include react-md-buttons-media($include-flat, $include-raised, $include-icon, $include-floating, $include-dense-icons);\n  }\n}\n\n/// Themes the buttons ONLY when the `$primary-color` does not equal the `$md-primary-color`,\n/// the `$secondary-color` does not equal the `$md-secondary-color`, or the `$md-light-theme`\n/// does not equal the `$md-light-theme`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-buttons($md-orange-500, $md-purple-a-200, !$md-light-theme);\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to theme the\n///     buttons with.\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme\n///     the buttons with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the buttons should be styled\n///     for the light theme.\n/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for\n///     buttons should be included.\n/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for\n///     buttons should be included.\n/// @param {Boolean} include-icon [$md-btn-include-icon] - Boolean if the icon styles for\n///     buttons should be included.\n/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for\n///     buttons should be included.\n/// @group buttons, themes\n@mixin react-md-theme-buttons(\n  $primary-color: $md-primary-color,\n  $secondary-color: $md-secondary-color,\n  $light-theme: $md-light-theme,\n  $include-flat: $md-btn-include-flat,\n  $include-raised: $md-btn-include-raised,\n  $include-icon: $md-btn-include-icon,\n  $include-floating: $md-btn-include-floating\n) {\n  @if $light-theme != $md-light-theme {\n    @if $include-flat or $include-raised {\n      .md-btn--raised-disabled {\n        background: get-color('divider', $light-theme);\n      }\n    }\n\n    @if $include-icon or $include-floating {\n      .md-btn--icon {\n        color: get-color('icon', $light-theme);\n      }\n    }\n  }\n\n  @if $primary-color != $md-primary-color {\n    .md-btn--color-primary-active {\n      background: rgba($primary-color, .12);\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color {\n    .md-btn--color-secondary-active {\n      background: rgba($secondary-color, .12);\n    }\n  }\n}\n\n/// Creates the styles for buttons on mobile devices. This really just sets the\n/// font size and adds some styles to make the button be accessible for touch.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-buttons-mobile;\n///   }\n///\n/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for\n///     buttons should be included.\n/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for\n///     buttons should be included.\n/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for\n///     buttons should be included.\n/// @group buttons, media-queries\n@mixin react-md-buttons-mobile($include-flat: $md-btn-include-flat, $include-raised: $md-btn-include-raised, $include-floating: $md-btn-include-floating) {\n  @if $include-flat or $include-raised {\n    @if $md-btn-text-height == null {\n      $accessible-padding: ($md-btn-accessible-height - $md-btn-mobile-height) / 2;\n\n      .md-btn--text {\n        height: $md-btn-mobile-height;\n        margin-bottom: $accessible-padding;\n        margin-top: $accessible-padding;\n\n        @if $md-btn-text-height == null {\n          font-size: $md-btn-mobile-font-size;\n        }\n\n        // The accessible height is supposed to be 48px while the button height is supposed\n        // to be 36px.. So hack for touch by adding some margin for the difference and adding\n        // ::before/::after absolutely positioned so they can be touched as well? Iunno\n        &::before,\n        &::after {\n          content: '';\n          height: $accessible-padding;\n          left: 0;\n          position: absolute;\n          right: 0;\n        }\n\n        &::before {\n          top: -$accessible-padding;\n        }\n\n        &::after {\n          bottom: -$accessible-padding;\n        }\n      }\n    } @else if $md-btn-text-font-size == null {\n      .md-btn--text {\n        font-size: $md-btn-mobile-font-size;\n      }\n    }\n  }\n\n  @if $include-floating and $md-btn-floating-margin == null {\n    @include react-md-button-fixed-positions($md-btn-mobile-floating-margin);\n  }\n}\n\n/// Creates the styles for buttons on desktop screens.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-buttons-desktop;\n///   }\n///\n/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for\n///     buttons should be included.\n/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for\n///     buttons should be included.\n/// @param {Boolean} include-icon [$md-btn-include-icon] - Boolean if the icon styles for\n///     buttons should be included.\n/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for\n///     buttons should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense specs for icons\n///     should be included for buttons.\n/// @group buttons, media-queries\n@mixin react-md-buttons-desktop(\n  $include-flat: $md-btn-include-flat,\n  $include-raised: $md-btn-include-raised,\n  $include-icon: $md-btn-include-icon,\n  $include-floating: $md-btn-include-floating,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  @if $include-flat or $include-raised {\n    @if $md-btn-text-height == null {\n      .md-btn--text {\n        height: $md-btn-desktop-height;\n        margin-bottom: 0;\n        margin-top: 0;\n\n        @if $md-btn-text-height == null {\n          font-size: $md-btn-desktop-font-size;\n        }\n\n        &::before,\n        &::after {\n          display: none;\n          visibility: hidden;\n        }\n\n        &::before {\n          top: 0;\n        }\n\n        &::after {\n          bottom: 0;\n        }\n      }\n    } @else if $md-btn-text-font-size == null {\n      .md-btn--text {\n        font-size: $md-btn-desktop-font-size;\n      }\n    }\n  }\n\n  @if $include-floating and $md-btn-floating-margin == null {\n    @include react-md-button-fixed-positions($md-btn-desktop-floating-margin);\n  }\n\n  @if ($include-icon or $include-floating) and $include-dense-icons {\n    $icon-size-diff: $md-btn-icon-size != $md-btn-icon-dense-size;\n    $icon-pad-diff: $md-btn-icon-padding != $md-btn-icon-dense-padding;\n    @if ($icon-size-diff or $icon-pad-diff) {\n      .md-btn--icon {\n        @if $icon-size-diff {\n          height: $md-btn-icon-dense-size;\n          width: $md-btn-icon-dense-size;\n        }\n\n        @if $icon-pad-diff {\n          padding: $md-btn-icon-dense-padding;\n        }\n      }\n    }\n\n    @if $md-btn-floating-size != $md-btn-floating-dense-size {\n      .md-btn--floating {\n        height: $md-btn-floating-dense-size;\n        padding: ($md-btn-floating-dense-size - $md-font-icon-dense-size) / 2;\n        width: $md-btn-floating-dense-size;\n\n        &-mini {\n          height: $md-btn-floating-mini-size;\n          padding: ($md-btn-floating-mini-size - $md-font-icon-dense-size) / 2;\n          width: $md-btn-floating-mini-size;\n        }\n      }\n    }\n  }\n}\n\n/// Creates the media queries and styles for buttons for mobile and desktop.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-buttons-media;\n///\n/// @param {Boolean} include-flat [$md-btn-include-flat] - Boolean if the flat styles for\n///     buttons should be included.\n/// @param {Boolean} include-raised [$md-btn-include-raised] - Boolean if the raised styles for\n///     buttons should be included.\n/// @param {Boolean} include-icon [$md-btn-include-icon] - Boolean if the icon styles for\n///     buttons should be included.\n/// @param {Boolean} include-floating [$md-btn-include-floating] - Boolean if the floating styles for\n///     buttons should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense specs for icons\n///     should be included for buttons.\n/// @group buttons, media-queries\n@mixin react-md-buttons-media(\n  $include-flat: $md-btn-include-flat,\n  $include-raised: $md-btn-include-raised,\n  $include-icon: $md-btn-include-icon,\n  $include-floating: $md-btn-include-floating,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  @media #{$md-mobile-media} {\n    @include react-md-buttons-mobile($include-flat, $include-raised, $include-floating);\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-buttons-desktop($include-flat, $include-raised, $include-icon, $include-floating, $include-dense-icons);\n  }\n}\n\n/// A simple mixin for applying a screen edge margin positioning to a fixed button. If the position name\n/// contains the first letter of the positioning style, the margin will get applied to that style.\n///\n/// So if the position name is 'tl', the margin will get applied to the `top` and the `left.\n///\n/// @param {Number} margin - the button's margin from the screen edge.\n/// @param {List} positions [$md-btn-floating-fixed-positions] - The positions to create the styles for.\n@mixin react-md-button-fixed-positions($margin, $positions: $md-btn-floating-fixed-positions) {\n  @each $position in $positions {\n    .md-btn--fixed-#{$position} {\n      bottom: if(str-index($position, b), $margin, null);\n      left: if(str-index($position, l), $margin, null);\n      right: if(str-index($position, r), $margin, null);\n      top: if(str-index($position, t), $margin, null);\n    }\n  }\n}\n","////\n/// @group papers\n////\n\n\n/// The default transition time for the paper to raise from 0 to 3\n/// @type Number\n$md-paper-transition-time: $md-transition-time * 2 !default;\n\n/// Creates the styles for paper.\n@mixin react-md-papers($include-media: $md-media-included) {\n  @for $i from 0 through 5 {\n    .md-paper--#{$i} {\n      @include md-box-shadow($i);\n    }\n\n    @if $i == 0 and $include-media {\n      @media #{$md-desktop-media} {\n        .md-paper--#{$i}-hover {\n          transition-duration: $md-paper-transition-time;\n          transition-property: box-shadow;\n\n          &:hover {\n            @include md-box-shadow(3);\n          }\n        }\n      }\n    }\n  }\n}\n\n\n/// Generates the box shadow for material design\n///\n/// @example scss - Basic Usage Sass\n///   .md-paper--1 {\n///     @include md-box-shadow(1);\n///   }\n///\n///   .md-paper--5 {\n///     @include md-box-shadow(5);\n///   }\n///\n/// @example scss - Basic Usage CSS Output\n///   .md-paper--1 {\n///     box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14). 0 1px 5px 0 rgba(0, 0, 0, .12), 0 3px 1px -2px rgba(0, 0, 0, .2);\n///   }\n///\n///   .md-paper--5 {\n///     box-shadow: 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12), 0 8px 10px -5px rgba(0, 0, 0, .4);\n///   }\n///\n/// @link https://elements.polymer-project.org/elements/paper-card?view=demo:demo/index.html&active=paper-card Polymer Box Shadow\n/// @param {Number} elevation - The material design elevation. This should be a number from 0 - 5.\n@mixin md-box-shadow($elevation) {\n  @if $elevation < 0 or $elevation > 5 {\n    @warn 'The elevation must be a number from 0 - 5. elevation given was `#{$elevation}`';\n  } @else {\n    $top-shadow-color: rgba($md-black-base, .14);\n    $middle-shadow-color: rgba($md-black-base, .12);\n    $bottom-shadow-color: rgba($md-black-base, if($elevation == 1, .2, .4));\n\n    @if $elevation == 0 {\n      box-shadow: none;\n    } @else if $elevation == 1 {\n      box-shadow: 0 2px 2px 0 $top-shadow-color, 0 1px 5px 0 $middle-shadow-color, 0 3px 1px -2px $bottom-shadow-color;\n    } @else if $elevation == 2 {\n      box-shadow: 0 4px 5px 0 $top-shadow-color, 0 1px 10px 0 $middle-shadow-color, 0 2px 4px -1px $bottom-shadow-color;\n    } @else if $elevation == 3 {\n      box-shadow: 0 6px 10px 0 $top-shadow-color, 0 1px 18px 0 $middle-shadow-color, 0 3px 5px -1px $bottom-shadow-color;\n    } @else if $elevation == 4 {\n      box-shadow: 0 8px 10px 1px $top-shadow-color, 0 3px 14px 2px $middle-shadow-color, 0 5px 5px -3px $bottom-shadow-color;\n    } @else if $elevation == 5 {\n      box-shadow: 0 16px 24px 2px $top-shadow-color, 0 6px 30px 5px $middle-shadow-color, 0 8px 10px -5px $bottom-shadow-color;\n    }\n  }\n}\n","////\n/// @group cards\n////\n\n/// Boolean if the styles for the `CardText` component should be included by default.\n/// @type Boolean\n$md-card-include-text: true !default;\n\n/// Boolean if the styles for the `CardTitle` component should be included by default.\n/// @type Boolean\n$md-card-include-title: true !default;\n\n/// Boolean if the styles for having an icon in the `CardTitle` component should be included\n/// by default. IF this is set, the `$md-card-include-title` will automatically be true.\n/// @type Boolean\n$md-card-include-title-avatar: true !default;\n\n/// A boolean if the styles for the `CardActions` component should be included by default.\n/// @type Boolean\n$md-card-include-actions: true !default;\n\n/// Boolean if the styles for tables within cards should be included.\n/// @type Boolean\n$md-card-include-tables: true !default;\n\n/// When the card part is either the first or last in the card, this padding will be applied\n/// instead of the `$md-default-padding`.\n/// @type Number\n/// @see md-default-padding\n$md-card-padding-extra: 24px !default;\n\n/// The font size for the CardText component.\n/// @type Number\n$md-card-text-font-size: 14px !default;\n\n/// The card title's font size.\n/// @type Number\n$md-card-title-font-size: 14px !default;\n\n/// The card title's larger font size.\n/// @type Number\n$md-card-title-large-font-size: 24px !default;\n\n/// Includes the styles for cards. The different sections can be excluded by setting the parameter\n/// to false. If the `react-md-everything` mixin is being used, set the corresponding variables to\n/// false before including the mixin.\n///\n/// @example scss - All Defaults\n///   @include react-md-cards;\n///\n/// @example scss - Excluding Some In Mixin\n///   @include react-md-cards(true, true, false, false, false);\n///\n/// @example scss - Excluding Some With react-md-everything\n///   @import '~react-md/src/scss/react-md';\n///\n///   $md-card-include-actions: false;\n///   $md-card-include-title-avatar: false;\n///   @include react-md-everything;\n///\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should\n///     also be included.\n/// @param {Boolean} include-text [$md-card-include-text] - Boolean if the `CardText` component styles\n///     should be included.\n/// @param {Boolean} include-title [$md-card-include-title] - Boolean if the `CardTitle` component\n///     styles should be included.\n/// @param {Boolean} include-title-avatar [$md-card-include-title-avatar] - Boolean if the styles for\n///     an avatar in the `CardTitle` component should also be included. If this is `true`, and the\n///     `include-title` param is false, it will behave as if the `include-title` was also set to `true`.\n/// @param {Boolean} include-actions [$md-card-include-actions] - Boolean if the `CardActions` component\n///     styles should be included.\n@mixin react-md-cards(\n  $include-media: $md-media-included,\n  $include-text: $md-card-include-text,\n  $include-title: $md-card-include-title,\n  $include-title-avatar: $md-card-include-title-avatar,\n  $include-actions: $md-card-include-actions,\n  $include-tables: $md-card-include-tables\n) {\n  .md-card {\n    display: block;\n\n    &--raise {\n      transition-duration: $md-transition-time * 2;\n      transition-property: box-shadow;\n    }\n  }\n\n  .md-collapser--card {\n    @extend %md-cell--right;\n\n    transition-duration: $md-transition-time * 2;\n    transition-property: background, transform;\n  }\n\n  @if $include-text {\n    @include react-md-cards-text;\n  }\n\n  @if $include-title or $include-title-avatar {\n    @include react-md-cards-title;\n  }\n\n  @if $include-title-avatar {\n    @include react-md-cards-title-avatar;\n  }\n\n  @if $include-actions {\n    @include react-md-cards-actions;\n  }\n\n  @if $include-tables {\n    @include react-md-cards-tables;\n  }\n}\n\n/// Includes the styles for the `CardText` component only.\n@mixin react-md-cards-text {\n  .md-card-text {\n    font-size: $md-card-text-font-size;\n    padding: $md-default-padding;\n\n    p {\n      font-size: inherit;\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    &:last-child {\n      padding-bottom: $md-card-padding-extra;\n    }\n  }\n}\n\n/// Includes the styles for the `CardTitle` component only.\n@mixin react-md-cards-title {\n  .md-card-title {\n    align-items: center;\n    display: flex;\n    padding: $md-default-padding;\n\n    &:last-child {\n      padding-bottom: $md-card-padding-extra;\n    }\n\n    &--primary {\n      padding-top: $md-card-padding-extra;\n    }\n\n    &--title {\n      font-size: $md-card-title-font-size;\n      line-height: $md-line-height;\n      margin: 0;\n      white-space: normal;\n    }\n\n    &--large {\n      font-size: $md-card-title-large-font-size;\n    }\n\n    &--one-line {\n      overflow: hidden;\n\n      .md-card-title--title {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n    }\n  }\n}\n\n/// Includes the styles for an avatar in the `CardTitle` component only.\n///\n/// This really requires the styles of avatars to already be included.\n/// @see react-md-avatars\n@mixin react-md-cards-title-avatar {\n  .md-avatar--card {\n    flex-shrink: 0;\n    margin-right: $md-default-padding;\n  }\n}\n\n/// Includes the styles for the `CardActions` component only.\n///\n/// This really depends on the styles of dialog footers to already be included.\n/// @see react-md-dialogs\n/// @see react-md-dialogs-footer\n@mixin react-md-cards-actions {\n  .md-dialog-footer {\n    &--card {\n      align-items: center;\n      display: flex;\n      justify-content: flex-start;\n    }\n\n    &--card-centered {\n      justify-content: center;\n    }\n  }\n}\n\n/// Creates the styles for tables in cards. This should _normally_ be included\n/// with the `react-md-cards` mixin.\n///\n/// @group cards, data-tables\n@mixin react-md-cards-tables {\n  .md-card--table {\n    .md-card-title {\n      padding-left: 24px;\n    }\n  }\n}\n","////\n/// @group chips\n////\n\n/// Boolean if the remove icon styling should be included for chips.\n/// @type Boolean\n$md-chip-include-remove: true !default;\n\n/// Boolean if the chip avatar styling should be included for chips.\n/// @type Boolean\n$md-chip-include-avatar: true !default;\n\n/// Boolean if the chip contact styling should be included for chips.\n/// @type Boolean\n$md-chip-include-contact: true !default;\n\n/// A chip's text color for when using the light theme.\n/// @type Color\n$md-chip-light-theme-color: rgba($md-black-base, .87) !default;\n\n/// A chip's background color when using the light theme.\n/// @type Color\n$md-chip-light-theme-bg-color: $md-grey-300 !default;\n\n/// The dark theme text color of a chip. This is configurable because it is not actually\n/// specified in the docs.\n/// @type Color\n$md-chip-dark-theme-color: get-color('secondary', false) !default;\n\n/// The dark theme background color of a chip. This is configurable because it is not actually\n/// specified in the docs.\n/// @type Color\n$md-chip-dark-theme-bg-color: $md-grey-600 !default;\n\n/// The height for a chip.\n/// @type Number\n$md-chip-height: 32px !default;\n\n/// The font size for a chip.\n/// @type Number\n$md-chip-font-size: 13px !default;\n\n\n/// The remove icon color for a chip.\n/// @type Number\n$md-chip-icon-color: rgba($md-black-base, .54) !default;\n\n/// The default padding to apply to a chip.\n/// type Number\n$md-chip-default-padding: 12px !default;\n\n/// The padding between an avatar and the chip's text.\n/// @type Number\n$md-chip-avatar-left-padding: 8px !default;\n\n/// The amount of padding to use around the remove icon on a chip.\n/// @type Number\n$md-chip-icon-padding: 4px !default;\n\n/// The amount of padding to use around the remove icon on a chip when using the dense\n/// icon spec.\n/// @type Number\n$md-chip-icon-dense-padding: 6px !default;\n\n/// The font size for a contact chip.\n/// @type Number\n$md-chip-contact-font-size: 14px !default;\n\n/// Includes the styles for chips. The remove, avatar, and contact styles can be excluded.\n/// If the `$include-contact` param is true, the avatar styles will always be included even\n/// if `$include-avatar` is false.\n///\n/// @example scss - Example Usage SCSS\n///   include react-md-chips;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the chips should be themed for\n///     the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries for chips\n///     should be included. This really relies on the `include-dense-icons` as well.\n/// @param {Boolean} include-remove [$md-chip-include-remove] - Boolean if the remove styles\n///     should be included.\n/// @param {Boolean} include-avatar [$md-chip-include-avatar] - Boolean if the avatar styles\n///     should be included.\n/// @param {Boolean} include-contact [$md-chip-include-contact] - Boolean if the contact styles\n///     should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense spec for\n///     icons should be included with the remove icon.\n@mixin react-md-chips(\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-remove: $md-chip-include-remove,\n  $include-avatar: $md-chip-include-avatar,\n  $include-contact: $md-chip-include-contact,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  .md-chip {\n    align-items: center;\n    background: if($light-theme, $md-chip-light-theme-bg-color, $md-chip-dark-theme-bg-color);\n    border: 0;\n    border-radius: $md-chip-height / 2;\n    display: inline-flex;\n    height: $md-chip-height;\n    padding-left: $md-chip-default-padding;\n    padding-right: $md-chip-default-padding;\n    position: relative;\n    transition-duration: $md-transition-time;\n    transition-property: box-shadow, background;\n    vertical-align: top;\n    white-space: nowrap;\n\n    &:focus {\n      @include md-box-shadow(1);\n      outline-style: none;\n    }\n  }\n\n  .md-chip--hover.md-chip--hover {\n    background: $md-grey-700;\n  }\n\n  .md-chip-text {\n    color: if($light-theme, $md-chip-light-theme-color, $md-chip-dark-theme-color);\n    font-size: $md-chip-font-size;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n  }\n\n  @if $include-avatar or $include-contact {\n    @include react-md-chips-avatar;\n  }\n\n  @if $include-remove {\n    @include react-md-chips-remove;\n  }\n\n  @if $include-contact {\n    @include react-md-chips-contact;\n  }\n\n  // has to go last so it has higher precedence.\n  .md-chip-text--hover {\n    color: $md-white-base;\n  }\n\n  @if $include-media and $include-remove and $include-dense-icons {\n    @media #{$md-desktop-media} {\n      .md-chip-icon {\n        margin-left: $md-chip-icon-dense-padding;\n        margin-right: $md-chip-icon-dense-padding;\n        top: ($md-chip-height - $md-font-icon-dense-size) / 2;\n      }\n    }\n  }\n}\n\n/// Includes the styles for the avatars in chips.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-chips-avatar;\n@mixin react-md-chips-avatar {\n  .md-chip .md-avatar {\n    border: 0;\n    height: $md-chip-height;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: $md-chip-height;\n  }\n\n  .md-chip--avatar {\n    padding-left: $md-chip-height + $md-chip-avatar-left-padding;\n  }\n}\n\n\n/// Includes the styles for the remove icons in chips.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-chips-remove;\n@mixin react-md-chips-remove {\n  .md-chip-icon {\n    color: $md-chip-icon-color;\n    margin-left: $md-chip-icon-padding;\n    margin-right: $md-chip-icon-padding;\n    position: absolute;\n    right: 0;\n    top: ($md-chip-height - $md-font-icon-size) / 2;\n    z-index: 1;\n  }\n\n  .md-chip-icon--rotate {\n    transform: rotate3d(0, 0, 1, 45deg);\n  }\n\n  .md-chip--remove {\n    padding-right: $md-font-icon-size + ($md-chip-icon-padding * 2);\n  }\n}\n\n\n/// Includes the styles for the contact chips.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-chips-contact;\n@mixin react-md-chips-contact {\n  .md-chip-text--contact {\n    font-size: $md-chip-contact-font-size;\n  }\n}\n\n/// Updates the styles for chips based on the theme. If the `light-theme` equals the `md-light-theme`,\n/// no styles will be included.\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling for the light theme.\n/// @group chips, themes\n@mixin react-md-theme-chips($light-theme: $md-light-theme) {\n  @if $light-theme != $md-light-theme {\n    .md-chip {\n      background: if($light-theme, $md-chip-light-theme-bg-color, $md-chip-dark-theme-bg-color);\n    }\n\n    .md-chip-text {\n      color: if($light-theme, $md-chip-light-theme-color, $md-chip-dark-theme-color);\n    }\n  }\n}\n","////\n/// @group collapsers\n////\n\n/// Creates the styles for a collapser icon\n@mixin react-md-collapsers {\n  .md-collapser {\n\n    &.md-collapser {\n      transition-duration: $md-transition-time;\n      transition-property: transform;\n    }\n\n    .md-tooltip-container {\n      transform: rotate3d(0, 0, 1, 0deg);\n      transition-duration: $md-transition-time;\n      transition-property: transform;\n    }\n\n    &--flipped {\n      transform: rotate3d(0, 0, 1, 180deg);\n\n      .md-tooltip-container {\n        transform: rotate3d(0, 0, 1, -180deg);\n      }\n    }\n  }\n}\n","////\n/// @group data-tables\n////\n\n@import '../grids';\n@import 'dialogs';\n@import 'select-fields';\n@import 'text-fields';\n\n/// Boolean if the plain table styles should be included.\n/// @type Boolean\n$md-data-table-include-plain: true !default;\n\n/// Boolean if the checkbox styles should be included.\n/// @type Boolean\n$md-data-table-include-checkboxes: true !default;\n\n/// Boolean if the edit dialog styles should be included.\n/// @type Boolean\n$md-data-table-include-edit-dialog: true !default;\n\n/// Boolean if the styles for select fields in data tables should be included.\n/// @type Boolean\n$md-data-table-include-select-fields: true !default;\n\n/// Boolean if the styles for fixed table headers/footers should be included.\n/// @type Boolean\n$md-data-table-include-fixed-headers-footers: true !default;\n\n/// Boolean if the table pagination styles should be included.\n/// @type Boolean\n$md-data-table-include-pagination: true !default;\n\n/// Boolean if the selected state of the data tables should have higher precedence over the hover state.\n/// The default behavior is to allow the hover state to show up even if the row is selected. If this value\n/// is enabled, the hover effect will not show up at all when a row is selected.\n///\n/// @type Boolean\n$md-data-table-selected-over-hover: false !default;\n\n/// Boolean if the `react-md-make-fixed-table` mixin should include headers by default in the\n/// created styles.\n///\n/// @see react-md-make-fixed-table\n$md-data-table-fixed-include-headers: true !default;\n\n/// Boolean if the `react-md-make-fixed-table` mixin should include footers by default in the\n/// created styles.\n///\n/// @see react-md-make-fixed-table\n$md-data-table-fixed-include-footers: true !default;\n\n/// Boolean if the `react-md-make-fixed-table` mixin should make the table fixed relative to the\n/// view height instead of just using height.\n/// @type Boolean\n$md-data-table-fixed-use-view-height: false !default;\n\n/// Boolean if the `TablePagination`'s styles should be updated for mobiles devices\n/// so that the select field shrinks its font size to 13px;\n///\n/// This should normally be used along with the `md-data-table-pagination-mobile-label-hidden`\n/// variable if you want to support mobile devices.\n///\n/// @type Boolean\n/// @see md-data-table-pagination-mobile-label-hidden\n$md-data-table-pagination-mobile-shrinking: true !default;\n\n/// This will hide the `TablePagination`s label on mobile devices.\n/// @type Boolean\n$md-data-table-pagination-mobile-label-hidden: true !default;\n\n/// Boolean if the table card header styles should be included.\n/// @type Boolean\n$md-data-table-include-table-card-headers: true !default;\n\n/// The min width for an edit dialog's column.\n/// @type Number\n/// @deprecated Use the `$md-edit-dialog-width` variable instead.\n$md-edit-dialog-min-width: 300px !default;\n\n/// The width for the edit dialog.\n/// @type Number\n$md-edit-dialog-width: 250px !default;\n\n/// The width for the label for the edit dialog column. When this width\n/// is reached, the text will be ellipsed.\n/// @type Number\n$md-edit-dialog-label-width: 250px !default;\n\n/// The amount of padding to apply to the `AccessibleFakeButton` that gets used in the\n/// edit dialog column to trigger the dialog to appear.\n/// @type Number\n$md-edit-dialog-label-padding: 16px 0 !default;\n\n/// The amount of padding to provide to the edit dialog.\n/// @type Number\n$md-edit-dialog-padding: $md-dialog-padding !default;\n\n/// The amount of padding-bottom to provide to the edit dialog. If you set this value to\n/// null, only the `$md-edit-dialog-padding` variable will be used.\n/// @type Number\n$md-edit-dialog-padding-bottom: 8px !default;\n\n/// For some reason, the edit dialogs on mobile devices don't position themselves like tablets\n/// and desktop screens so this value is required for positioning the dialog from the right edge\n/// of the screen.\n/// @type Number\n$md-data-table-edit-dialog-mobile-right: $md-grid-phone-margin !default;\n\n/// The default left/right padding for a `TableColumn`.\n/// @type Number\n$md-data-table-padding: 24px !default;\n\n/// The minimum distance between a cell's content and the next cell.\n/// @type Number\n$md-data-table-min-padding: 56px !default;\n\n/// The font size for content inside of the `TableBody` component.\n/// @type Number\n$md-data-table-content-font-size: 13px !default;\n\n/// The font size for the content inside of the `TableHeader` component.\n/// @type Number\n$md-data-table-header-font-size: 12px !default;\n\n/// The height for the `TableHeader`'s row.\n/// @type Number\n$md-data-table-header-height: 56px !default;\n\n/// The font size for a font-icon in the `md-table-column--header`.\n/// @type Number\n$md-data-table-header-icon-font-size: 16px !default;\n\n/// The height for a column in a data table.\n/// @type Number\n$md-data-table-column-height: 48px !default;\n\n/// The height for a plain data table's column.\n/// @type Number\n$md-data-table-plain-column-height: $md-data-table-column-height !default;\n\n/// The border size to use for each row.\n/// @type Number\n$md-data-table-border-size: 1px !default;\n\n/// The hover color for a row when using the light theme.\n/// @type Color\n$md-data-table-hover-color: $md-grey-200 !default;\n\n/// The selected color for a row when using the light theme.\n/// @type Color\n$md-data-table-selected-color: $md-grey-100 !default;\n\n/// The hover color for a row when using the dark theme. This is configurable since\n/// the dark theme data table specs are not defined in the material design documentation\n/// at this point.\n/// @type Color\n$md-data-table-dark-theme-hover-color: $md-grey-800 !default;\n\n/// The selected color for a row when using the dark theme. This is configurable since\n/// the dark theme data table specs are not defined in the material design documentation\n/// at this point.\n/// @type Color\n$md-data-table-dark-theme-selected-color: $md-grey-700 !default;\n\n/// The z-index to use for the contextual table card header.\n/// @type Number\n$md-data-table-card-header-z-index: 1 !default;\n\n/// The font size to use for the contextual table card header.\n/// @type Number\n$md-data-table-card-header-font-size: 16px !default;\n\n/// The height for the table card header.\n/// @type Number\n$md-data-table-card-header-height: 80px !default;\n\n/// The min-width to apply to the fixed tables wrapper.\n/// @type Number\n$md-data-table-fixed-wrapper-min-width: 100% !default;\n\n/// A fallback color to use for the contextual table card header. This is only required\n/// when the `$md-primary-color` is not a valid material design color.\n/// @type Color\n/// @see get-swatch\n/// @group data-tables, themes\n$md-data-table-contextual-fallback-color: null !default;\n\n/// A selector for creating a plain styled column. This is used to update all\n/// the `md-table-column--data` in a `.md-data-table--plain` and to create a\n/// `md-table-column--plain` class. The `white-space` will still need to manually\n/// be changed from `nowrap` to `initial` if you want line wrapping.\n%md-table-column--plain {\n  height: $md-data-table-plain-column-height;\n  white-space: normal;\n}\n\n/// Includes the styles for the data tables.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-data-tables;\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to use to theme\n///     the table card headers with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the tables should be styled\n///     for the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should also be included.\n/// @param {Boolean} include-plain [$md-data-table-include-plain] - Boolean if the plain data\n///     table styles should be included.\n/// @param {Boolean} include-checkboxes [$md-data-table-include-checkboxes] - Boolean if the checkbox\n///     styles should be included.\n/// @param {Boolean} include-edit-dialog [$md-data-table-include-edit-dialog] - Boolean if the edit\n///     dialog styles should be included.\n/// @param {Boolean} include-pagination [$md-data-table-include-pagination] - Boolean if the pagination\n///     styles should be included.\n/// @param {Boolean} include-table-card-headers [$md-data-table-include-table-card-headers] - Boolean if\n///     the table card header styles should be included.\n@mixin react-md-data-tables(\n  $secondary-color: $md-secondary-color,\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-plain: $md-data-table-include-plain,\n  $include-checkboxes: $md-data-table-include-checkboxes,\n  $include-edit-dialog: $md-data-table-include-edit-dialog,\n  $include-select-fields: $md-data-table-include-select-fields,\n  $include-pagination: $md-data-table-include-pagination,\n  $include-table-card-headers: $md-data-table-include-table-card-headers,\n  $include-fixed-headers-footers: $md-data-table-include-fixed-headers-footers\n) {\n  @include react-md-data-table;\n  @include react-md-data-table-rows($light-theme);\n  @include react-md-data-table-column($include-plain);\n\n  @if $include-checkboxes {\n    @include react-md-data-table-checkboxes;\n  }\n\n  @if $include-edit-dialog {\n    @include react-md-data-table-edit-dialogs;\n  }\n\n  @if $include-select-fields {\n    @include react-md-data-table-select-fields;\n  }\n\n  @if $include-pagination {\n    @include react-md-data-table-paginations;\n\n    @if $include-media {\n      @media (max-width: $md-tablet-min-width - 1) {\n        @include react-md-data-table-paginations-shrink;\n      }\n    }\n  }\n\n  @if $include-table-card-headers {\n    @include react-md-data-table-card-headers;\n  }\n\n  @if $include-fixed-headers-footers {\n    @include react-md-data-table-fixed-headers-footers;\n  }\n}\n\n/// Updates the styles for data tables only if the `$light-theme` does not equal the\n/// `$md-light-theme`. The only styles really updated are the border colors and the\n/// hover/selected row background colors.\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if updating the styles for\n///     the light theme.\n/// @param {Boolean} include-table-card-headers [$md-data-table-include-table-card-headers] - Boolean if\n///     the contextual table card header styles should be included.\n/// @param {Color} contextual-fallback-color [$md-data-table-contextual-fallback-color] - A fallback color\n///     to use for the contextual headers.\n/// @param {Boolean} selected-over-hover [$md-data-table-selected-over-hover] - Boolean if the selected state of\n///     rows should have a higher precedence than the hover state.\n/// @group data-tables, themes\n@mixin react-md-theme-data-tables(\n  $secondary-color: $md-secondary-color,\n  $light-theme: $md-light-theme,\n  $include-table-card-headers: $md-data-table-include-table-card-headers,\n  $contextual-fallback-color: $md-data-table-contextual-fallback-color,\n  $selected-over-hover: $md-data-table-selected-color\n) {\n  @if $light-theme != $md-light-theme {\n    thead .md-table-row,\n    tbody .md-table-row:not(:last-child) {\n      border-bottom-color: get-color('divider', $light-theme);\n    }\n\n    .md-table-row {\n      $active-color: if($light-theme, $md-data-table-selected-color, $md-data-table-dark-theme-selected-color);\n      $hover-color: if($light-theme, $md-data-table-hover-color, $md-data-table-dark-theme-hover-color);\n\n      @if not $selected-over-hover {\n        &--active {\n          background: $active-color;\n        }\n      }\n\n      @media (min-device-width: #{$md-desktop-min-width}) {\n        &--hover {\n          background: $hover-color;\n        }\n      }\n\n      @if $selected-over-hover {\n        &--active {\n          background: $active-color;\n        }\n      }\n    }\n  }\n\n  @if $include-table-card-headers {\n    $bg-color: get-swatch($secondary-color, 50, false, $contextual-fallback-color, md-data-table-contextual-fallback-color);\n    @if get-swatch($md-secondary-color, 50, false, $contextual-fallback-color, md-data-table-contextual-fallback-color) != $bg-color {\n      .md-card-title--contextual {\n        background: $bg-color;\n      }\n    }\n\n    @if $secondary-color != $md-secondary-color {\n      .md-card-title--title-contextual {\n        color: $secondary-color;\n      }\n    }\n  }\n}\n\n/// Creates the styles for the data table. It will also create the styles for\n/// plain data tables if the param is true.\n@mixin react-md-data-table {\n  .md-data-table {\n    border-collapse: collapse;\n    max-width: 100%;\n\n    &--full-width {\n      width: 100%;\n    }\n\n    &--responsive {\n      @include md-ios-scroll-momentum;\n\n      overflow-x: auto;\n    }\n  }\n}\n\n/// Creates the styles for a row in the data table.\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling for the light\n///     theme.\n/// @param {Boolean} selected-over-hover [$md-data-table-selected-over-hover] - Boolean if the selected state of\n///     rows should have a higher precedence than the hover state.\n@mixin react-md-data-table-rows($light-theme: $md-light-theme, $selected-over-hover: $md-data-table-selected-over-hover) {\n  thead .md-table-row,\n  tbody .md-table-row:not(:last-child) {\n    border-bottom: $md-data-table-border-size solid get-color('divider', $light-theme);\n  }\n\n  tbody .md-table-row {\n    transition-duration: $md-transition-time;\n    transition-property: background;\n\n    $active-color: if($light-theme, $md-data-table-selected-color, $md-data-table-dark-theme-selected-color);\n    $hover-color: if($light-theme, $md-data-table-hover-color, $md-data-table-dark-theme-hover-color);\n\n    @if not $selected-over-hover {\n      &--active {\n        background: $active-color;\n      }\n    }\n\n    @media (min-device-width: #{$md-desktop-min-width}) {\n      &--hover {\n        background: $hover-color;\n      }\n    }\n\n    @if $selected-over-hover {\n      &--active {\n        background: $active-color;\n      }\n    }\n  }\n}\n\n/// Creates the styles for a column in a data table.\n///\n/// @param {Boolean} include-plain [$md-data-table-include-plain] - boolean if the plain columns should be included\n@mixin react-md-data-table-column($include-plain: $md-data-table-include-plain) {\n  .md-table-column {\n    line-height: normal;\n    padding-bottom: 0;\n    padding-right: $md-data-table-padding;\n    padding-top: 0;\n    vertical-align: middle;\n    white-space: nowrap;\n\n    &:first-child {\n      padding-left: $md-data-table-padding;\n    }\n\n    &--relative {\n      position: relative;\n    }\n\n    &--adjusted {\n      padding-right: $md-data-table-min-padding;\n    }\n\n    &--header {\n      font-size: $md-data-table-header-font-size;\n      font-weight: $md-font-medium;\n      height: $md-data-table-header-height;\n\n      .md-icon {\n        font-size: $md-data-table-header-icon-font-size;\n      }\n    }\n\n    &--data {\n      font-size: $md-data-table-content-font-size;\n      height: $md-data-table-column-height;\n    }\n\n    @if $include-plain {\n      &--plain {\n        height: $md-data-table-plain-column-height;\n        white-space: normal;\n      }\n    }\n\n    &--grow {\n      width: 100%;\n    }\n\n    &--select-header {\n      padding-left: $md-default-padding;\n    }\n\n    .md-icon-separator {\n      line-height: inherit;\n    }\n  }\n}\n\n/// Creates the styles for a table checkbox column in a data table.\n@mixin react-md-data-table-checkboxes {\n  $margin: $md-data-table-padding - $md-btn-icon-padding;\n\n  .md-table-checkbox {\n\n    .md-selection-control-label {\n      display: flex;\n    }\n\n    .md-selection-control-container {\n      margin-left: $margin;\n      margin-right: $margin;\n    }\n  }\n}\n\n/// Creates the styles for edit dialogs in a data table.\n@mixin react-md-data-table-edit-dialogs {\n  .md-edit-dialog {\n    &.md-dialog {\n      width: $md-edit-dialog-width;\n    }\n\n    &__label {\n      overflow: hidden;\n      padding: $md-edit-dialog-label-padding;\n      text-overflow: ellipsis;\n      width: $md-edit-dialog-label-width;\n\n      @media screen and (max-width: #{$md-desktop-min-width - 1}) {\n        font-size: $md-text-field-mobile-font-size;\n      }\n    }\n\n    &__content {\n      // For the multiline text fields\n      display: flex;\n      padding: $md-edit-dialog-padding;\n      padding-bottom: $md-edit-dialog-padding-bottom;\n\n      &:not(:first-child) {\n        padding-top: 0;\n      }\n    }\n\n    &__header {\n      font-weight: $md-font-medium;\n\n      &.md-text-field {\n        font-size: $md-data-table-header-font-size;\n      }\n    }\n\n    &__blocked-field {\n      height: $md-data-table-column-height - $md-data-table-border-size;\n      width: $md-edit-dialog-width;\n\n      &.md-edit-dialog__blocked-field {\n        padding-bottom: 0;\n        padding-top: 0;\n      }\n\n      .md-text-field-icon-container {\n        align-items: center;\n      }\n    }\n  }\n}\n\n/// Creates the styles for select fields in data tables.\n@mixin react-md-data-table-select-fields {\n  .md-table-column--select-field {\n    padding-left: $md-select-field-left-padding;\n  }\n\n  .md-select-field-column {\n    .md-select-field--btn {\n      height: $md-data-table-column-height - $md-data-table-border-size;\n    }\n  }\n}\n\n/// Creates the styles for table pagination.\n@mixin react-md-data-table-paginations {\n  .md-table-footer--pagination {\n    .md-table-column {\n      padding-left: 0;\n    }\n  }\n\n  .md-table-pagination {\n    height: $md-data-table-header-height;\n\n    &--controls {\n      align-items: center;\n      display: inline-flex;\n      justify-content: flex-start;\n      position: absolute;\n      white-space: nowrap;\n    }\n  }\n}\n\n/// Creates the styles for fixed headers and footers in a data table.\n@mixin react-md-data-table-fixed-headers-footers {\n  .md-data-table {\n    &--fixed {\n      overflow-y: hidden;\n    }\n\n    &__fixed-wrapper {\n      display: table;\n      min-width: $md-data-table-fixed-wrapper-min-width;\n      position: relative;\n\n      &--header {\n        padding-top: $md-data-table-header-height;\n      }\n\n      &--footer {\n        padding-bottom: $md-data-table-column-height;\n      }\n    }\n\n    &__scroll-wrapper {\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  }\n\n  .md-table-column--fixed {\n    height: 0;\n    padding-bottom: 0;\n    padding-top: 0;\n    visibility: hidden;\n    white-space: nowrap;\n\n    > * {\n      display: none;\n    }\n\n    .md-table-column__fixed {\n      display: block;\n    }\n  }\n\n  .md-table-column__fixed {\n    position: absolute;\n    visibility: visible;\n\n    &--header {\n      top: 0;\n    }\n\n    &--footer {\n      bottom: 0;\n    }\n\n    &--flex {\n      align-items: center;\n      display: flex;\n\n      &-right {\n        justify-content: flex-end;\n      }\n    }\n\n    .md-table-checkbox {\n      &--header {\n        display: flex;\n        height: $md-data-table-header-height;\n      }\n\n      &--footer {\n        display: flex;\n        height: $md-data-table-column-height;\n      }\n    }\n  }\n}\n\n/// This is a utility function for making a fixed table via CSS instead of inline styles. This one is a bit more\n/// reliable since you can provide the cell heights correctly.\n///\n/// @example scss - Example Usage\n/// .fixed-table--200-300 {\n///   @include react-md-make-fixed-table(300px);\n///\n///   width: 200px;\n/// }\n///\n/// .fixed-table__footless--200-300 {\n///   @include react-md-make-fixed-table(300px, $md-data-table-header-height, null);\n/// }\n///\n/// .fixed-table--viewport {\n///   @include react-md-make-fixed-table(true);\n/// }\n///\n/// @example scss - Example Usage CSS Output\n/// .fixed-table--200-300 {\n///   width: 200px;\n/// }\n///\n/// .fixed-table--200-300 .md-data-table__scroll-wrapper {\n///   max-height: 196px;\n/// }\n///\n/// .fixed-table__footless--200-300 .md-data-table__scroll-wrapper {\n///   max-height: 244px;\n/// }\n///\n/// .fixed-table--viewport .md-data-table__scroll-wrapper {\n///   max-height: calc(100vh - 104px);\n/// }\n///\n///\n/// @param {Number | Boolean} height - The height to use for the fixed table. If this value is a boolean, the height\n///     will be calculated from the view height.\n/// @param {Number} header-height [$md-data-table-header-height] - The height for the table's header. If this is `null`,\n///     this table should *not* have a fixed header.\n/// @param {Number} footer-height [$md-data-table-column-height] - The height for the table's footer. If this is `null`,\n///     the table should *not* have a fixed footer.\n/// @param {Number} toolbar-height [null] - An optional height of the toolbar to exclude when making the max-height of the\n///     table.\n@mixin react-md-make-fixed-table($height, $header-height: $md-data-table-header-height, $footer-height: $md-data-table-column-height, $toolbar-height: null) {\n  @if $height == true {\n    .md-data-table__scroll-wrapper {\n      $wrapper-height: 0;\n      @if $md-data-table-fixed-include-headers and $header-height != null {\n        $wrapper-height: $wrapper-height + $header-height;\n      }\n\n      @if $md-data-table-fixed-include-footers and $footer-height != null {\n        $wrapper-height: $wrapper-height + $footer-height;\n      }\n\n      @if $toolbar-height != null {\n        $wrapper-height: $wrapper-height + $toolbar-height;\n      }\n\n      max-height: calc(100vh - #{$wrapper-height});\n    }\n  } @else {\n    $wrapper-height: $height;\n    @if $md-data-table-fixed-include-headers and $header-height != null {\n      $wrapper-height: $wrapper-height - $header-height;\n    }\n\n    @if $md-data-table-fixed-include-footers and $footer-height != null {\n      $wrapper-height: $wrapper-height - $footer-height;\n    }\n\n    @if ($wrapper-height != $height) {\n      .md-data-table__scroll-wrapper {\n        max-height: $wrapper-height;\n      }\n    }\n  }\n\n}\n\n/// Creates the styles for the `TableCardHeader` component only. The contextual\n/// header will have a background color of the secondary color's 50 swatch.\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme\n///     the contextual header's background color with.\n@mixin react-md-data-table-card-headers($secondary-color: $md-secondary-color, $fallback-color: $md-data-table-contextual-fallback-color) {\n  .md-table-card-header {\n    position: relative;\n\n    &--no-title {\n      align-items: center;\n      display: flex;\n      height: $md-data-table-card-header-height;\n      padding-right: 2px;\n    }\n\n    .md-card-title {\n      padding-right: 2px;\n\n      &:last-child {\n        padding-bottom: $md-default-padding;\n      }\n    }\n\n    .md-btn--dialog + .md-btn--dialog {\n      margin-left: $md-dialog-btn-padding;\n    }\n  }\n\n  .md-card-title--contextual {\n    background: get-swatch($secondary-color, 50, false, $fallback-color, md-data-table-contextual-fallback-color);\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: $md-data-table-card-header-z-index;\n  }\n\n  .md-card-title--title-contextual {\n    color: $secondary-color;\n    font-size: $md-data-table-card-header-font-size;\n    font-weight: $md-font-medium;\n    line-height: $md-data-table-card-header-height;\n  }\n\n  .md-drop-down-enter {\n    transform: translate3d(0, -100%, 0);\n\n    &.md-drop-down-enter-active {\n      @extend %md-transition--deceleration;\n\n      transform: translate3d(0, 0, 0);\n      transition-duration: $md-transition-time;\n      transition-property: transform;\n    }\n  }\n\n  .md-drop-down-leave {\n    transform: translate3d(0, 0, 0);\n\n    &.md-drop-down-leave-active {\n      @extend %md-transition--acceleration;\n\n      transform: translate3d(0, -100%, 0);\n      transition-duration: $md-transition-time;\n      transition-property: transform;\n    }\n  }\n}\n\n/// A mixin that can shrink the select field in the TablePagination component as well as hide the label\n/// so it displays better on mobile devices. This mixin should usually be used in a media query that uses\n/// the max-width.\n///\n///\n/// @example scss - Example Usage SCSS\n///   @media (max-width: #{$md-tablet-min-width - 1}) {\n///     @include react-md-data-table-paginations-shrink(true, true);\n///   }\n///\n/// @param {Boolean} shrink [$md-data-table-pagination-mobile-shrinking] - Boolean if the select field should shrink by\n///     reducing the font size to 13px and reducing the padding by 75%.\n/// @param {Boolean} hide-label [$md-data-table-pagination-mobile-label-hidden] - Boolean if the pagination label (Rows per page)\n///     should be hidden.\n@mixin react-md-data-table-paginations-shrink($shrink: $md-data-table-pagination-mobile-shrinking, $hide-label: $md-data-table-pagination-mobile-label-hidden) {\n  @if $shrink {\n    .md-table-pagination .md-text-field {\n      font-size: 13px;\n    }\n\n    .md-table-pagination .md-icon-text:first-child {\n      padding-right: $md-default-padding / 4;\n    }\n  }\n\n  @if $hide-label {\n    .md-table-pagination__label {\n      display: none;\n    }\n  }\n}\n","////\n/// @group select-fields\n////\n\n/// The distance that a new value for the select field should drop.\n/// @type Number\n$md-select-field-drop-distance: 6px !default;\n\n/// The transition time that a new value in a select field should drop.\n/// @type Number\n$md-select-field-drop-transition-time: $md-transition-time * 2 !default;\n\n/// The left padding for a select field that has a position of `SelectField.Positions.BELOW`\n/// @type Number\n$md-select-field-left-padding: 24px !default;\n\n/// The right padding for a select field that has a position of `SelectField.Positions.BELOW`\n/// @type Number\n$md-select-field-right-padding: 16px !default;\n\n/// Creates the styles for select fields. Like the `autocompletes`, the `SelectField` component\n/// also depends on the styles for the `TextField`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-select-fields;\n///\n/// @see react-md-text-fields\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries for select fields\n///     should also be included.\n@mixin react-md-select-fields($include-media: $md-media-included) {\n  .md-select-field {\n    cursor: inherit;\n    display: flex;\n    flex-wrap: wrap;\n    user-select: none;\n\n    .md-divider {\n      width: 100%;\n    }\n\n    &__toggle {\n      position: relative;\n    }\n  }\n\n  // To override text field padding\n  .md-select-field--btn.md-select-field--btn {\n    padding-bottom: $md-default-padding;\n    padding-left: $md-select-field-left-padding;\n    padding-right: $md-select-field-right-padding;\n    padding-top: $md-default-padding;\n  }\n\n  .md-select-field--text-field {\n    // without this, mobile safari will not bubble the click event up to the toggle element so the\n    // options never appear.\n    pointer-events: none;\n  }\n\n  @include react-md-select-fields-drop-transition;\n\n  @if $include-media {\n    @include react-md-select-fields-media;\n  }\n}\n\n/// Creates the styles for select fields on a mobile device. This should\n/// _normally_ be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-select-fields-mobile;\n///   }\n///\n/// @group select-fields, media-queries\n@mixin react-md-select-fields-mobile {\n  .md-select-field--btn {\n    height: $md-text-field-mobile-height;\n  }\n\n  .md-select-field--text-field {\n    height: 18px;\n  }\n}\n\n/// Creates the styles for select fields on a desktop screen. This should\n/// _normally_ be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-select-fields-desktop;\n///   }\n///\n/// @group select-fields, media-queries\n@mixin react-md-select-fields-desktop {\n  .md-select-field--btn {\n    height: $md-text-field-desktop-height;\n  }\n\n  .md-select-field--text-field {\n    height: 15px;\n  }\n}\n\n/// Creates the media queries and styles for select fields on mobile devices and\n/// desktop screens.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-select-fields-media;\n/// @group select-fields, media-queries\n@mixin react-md-select-fields-media {\n  @media #{$md-mobile-media} {\n    @include react-md-select-fields-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-select-fields-desktop;\n  }\n}\n\n/// Creates the drop down transition for a new value appearing in the select field. This is included\n/// in the `react-md-select-fields` mixin, so it _might_ not be used on its own.\n@mixin react-md-select-fields-drop-transition {\n  .md-drop-enter {\n    transform: translate3d(0, -$md-select-field-drop-distance, 0);\n\n    &.md-drop-enter-active {\n      transform: translate3d(0, 0, 0);\n      transition-duration: $md-select-field-drop-transition-time;\n      transition-property: transform;\n    }\n  }\n}\n","////\n/// @group dialogs\n////\n\n\n/// Boolean if the dialog should use a flexbox based approach of centering a non-full page\n/// dialog instead of the old transform + left/top centering \"hack\". This will solve the\n/// weird blur issues in webkit browsers for text, but make positioning in the page a bit\n/// harder. When this is enabled, you can move the dialog's position by setting margin instead\n/// of top/right/bottom/left\n///\n/// Note: The next major release will have this enabled by default and remove the old functionality\n/// @type Boolean\n$md-dialog-use-flex-positioning: false !default;\n\n/// The transition time for the dialogs to enter or leave.\n/// @type Number\n$md-dialog-transition-time: $md-transition-time * 2 !default;\n\n/// The z index for a dialog's overlay.\n/// type Number\n/// @see md-btn-fixed-z-index\n/// @see md-dialog-full-page-z-index\n/// @see md-menu-z-index\n/// @see md-overlay-z-index\n/// @see md-picker-inline-z-index\n/// @see md-snackbar-z-index\n/// @see md-toolbar-z-index\n/// @group dialogs, z-indexes\n$md-dialog-overlay-z-index: 20 !default;\n\n/// The distance that the dialog should move downwards when entering\n/// and leaving.\n/// @type Number\n$md-dialog-translate-distance: -30px !default;\n\n/// The z-index to use for full page dialogs. This should be the biggest z-index\n/// in the application.\n/// @type Number\n/// @see md-dialog-overlay-z-index\n/// @see md-btn-fixed-z-index\n/// @see md-menu-z-index\n/// @see md-overlay-z-index\n/// @see md-picker-inline-z-index\n/// @see md-snackbar-z-index\n/// @see md-toolbar-z-index\n/// @group dialogs, z-indexes\n$md-dialog-full-page-z-index: 110 !default;\n\n\n/// The height of a button in a dialog.\n/// @type Number\n$md-dialog-btn-height: 36px !default;\n\n/// The min width for a button in a dialog.\n$md-dialog-btn-min-width: 64px !default;\n\n/// The padding for a button in a dialog.\n/// @type Number\n$md-dialog-btn-padding: 8px !default;\n\n/// The default padding to apply to the content in a dialog.\n/// @type Number\n$md-dialog-padding: 24px !default;\n\n/// The padding bottom to apply to a dialog's title.\n/// @type Number\n$md-dialog-title-padding-bottom: 20px !default;\n\n/// A dialog can not be less than this distance from the top / and bottom of the page.\n/// @type Number\n$md-dialog-vertical-keyline: 24px !default;\n\n/// A dialog can not be less than this distance from the left / right of the page.\n/// @type Number\n$md-dialog-horizontal-keyline: 40px !default;\n\n\n/// Includes the styles for dialogs\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-dialogs;\n@mixin react-md-dialogs {\n  .md-dialog-container.md-overlay {\n    transition-duration: $md-dialog-transition-time;\n    z-index: $md-dialog-overlay-z-index;\n\n    @if $md-dialog-use-flex-positioning {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n    }\n  }\n\n  .md-dialog {\n    @include react-md-dialog-width;\n\n    cursor: auto;\n    position: fixed;\n  }\n\n  .md-dialog--centered {\n    @if not $md-dialog-use-flex-positioning {\n      left: 50%;\n      top: 50%;\n      transform: translate3d(-50%, -50%, 0);\n    }\n\n    max-height: calc(100% - #{$md-dialog-vertical-keyline * 2});\n    max-width: calc(100% - #{$md-dialog-horizontal-keyline * 2});\n\n    .md-list {\n      padding-bottom: $md-dialog-padding - $md-default-padding;\n      padding-top: 0;\n    }\n\n    .md-list-tile {\n      height: auto;\n      padding: $md-default-padding $md-dialog-padding;\n    }\n\n    .md-tile-text--primary {\n      white-space: normal;\n    }\n  }\n\n  .md-dialog--centered-enter {\n    @if $md-dialog-use-flex-positioning {\n      transform: translate3d(0, $md-dialog-translate-distance, 0);\n    } @else {\n      transform: translate3d(-50%, calc(-50% + #{$md-dialog-translate-distance}), 0);\n    }\n\n    &.md-dialog--centered-enter-active {\n      @if $md-dialog-use-flex-positioning {\n        transform: translate3d(0, 0, 0);\n      } @else {\n        transform: translate3d(-50%, -50%, 0);\n      }\n\n      transition-duration: $md-dialog-transition-time;\n      transition-property: transform;\n    }\n  }\n\n  .md-dialog--centered-leave {\n    @if $md-dialog-use-flex-positioning {\n      transform: translate3d(0, 0, 0);\n    } @else {\n      transform: translate3d(-50%, -50%, 0);\n    }\n\n    &.md-dialog--centered-leave-active {\n      @if $md-dialog-use-flex-positioning {\n        transform: translate3d(0, $md-dialog-translate-distance, 0);\n      } @else {\n        transform: translate3d(-50%, calc(-50% + #{$md-dialog-translate-distance}), 0);\n      }\n\n      transition-duration: $md-dialog-transition-time;\n      transition-property: transform;\n    }\n  }\n\n  .md-dialog--full-page {\n    // Don't add scroll momentum here since it'll make fixed toolbars buggy.\n    bottom: 0;\n    left: 0;\n    overflow: auto;\n    top: 0;\n    width: 100vw;\n    z-index: $md-dialog-full-page-z-index;\n  }\n\n  .md-dialog--full-page-enter {\n    transform: scale(0);\n\n    &.md-dialog--full-page-enter-active {\n      transform: scale(1);\n      transition-duration: $md-dialog-transition-time;\n      transition-property: transform;\n    }\n  }\n\n  .md-dialog--full-page-leave {\n    transform: scale(1);\n\n    &.md-dialog--full-page-leave-active {\n      transform: scale(0);\n      transition-duration: $md-dialog-transition-time;\n      transition-property: transform;\n    }\n  }\n\n  @include react-md-dialogs-header;\n  @include react-md-dialogs-content;\n  @include react-md-dialogs-footer;\n}\n\n/// Includes the styles for the header content for dialogs only.\n@mixin react-md-dialogs-header {\n  .md-title--dialog {\n    margin-bottom: 0;\n    padding: $md-dialog-padding;\n    padding-bottom: $md-dialog-title-padding-bottom;\n    white-space: normal;\n  }\n}\n\n\n/// Includes the styles for the content in dialogs only.\n@mixin react-md-dialogs-content {\n  .md-dialog-content {\n    @include md-ios-scroll-momentum;\n\n    overflow: auto;\n  }\n\n  .md-dialog-content--padded {\n    padding: $md-dialog-padding;\n\n    &:not(:first-child) {\n      padding-top: 0;\n    }\n  }\n}\n\n/// This includes the styles for the footer in dialogs. It also creates an additional\n/// button class name for buttons in dialogs. This is generally used in the `md-react-md-dialogs`\n/// mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-dialogs-footer;\n@mixin react-md-dialogs-footer {\n  .md-dialog-footer {\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .md-dialog-footer--inline {\n    padding: $md-dialog-btn-padding;\n\n    .md-btn--dialog + .md-btn--dialog {\n      margin-left: $md-dialog-btn-padding;\n    }\n  }\n\n  .md-dialog-footer--stacked {\n    align-items: flex-end;\n    flex-direction: column;\n    padding-bottom: $md-dialog-btn-padding;\n    padding-right: $md-dialog-btn-padding;\n\n    .md-btn--dialog {\n      $margin: (48px - $md-dialog-btn-height) / 2;\n\n      margin-bottom: $margin;\n      margin-top: $margin;\n    }\n  }\n\n  .md-btn--dialog {\n    height: $md-dialog-btn-height;\n    min-width: $md-dialog-btn-min-width;\n    padding-left: $md-dialog-btn-padding;\n    padding-right: $md-dialog-btn-padding;\n  }\n}\n\n/// A simple mixin to set the width for a dialog.\n///\n/// @example scss - Example Usage SCSS\n///   .md-dialog--big {\n///      @include react-md-dialog-width(10);\n///   }\n///\n/// @param {Number} units [5] - The number of units for the dialog's width to be.\n///     this will be multiplied by `56px` since it is a single unit on a dialog.\n@mixin react-md-dialog-width($units: 5) {\n  width: $units * 56px;\n}\n","////\n/// @group dividers\n////\n\n\n/// Boolean if the base classes for divider borders should be included.\n/// @type Boolean\n$md-divider-include-borders: true !default;\n\n/// The height for a Divider\n/// @type Number\n$md-divider-height: 1px !default;\n\n/// Includes the Divider styles\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-dividers;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n@mixin react-md-dividers($light-theme: $md-light-theme, $include-borders: $md-divider-include-borders) {\n  .md-divider {\n    background: get-color('divider', $light-theme);\n    border: 0;\n    content: '';\n    display: block;\n    height: $md-divider-height;\n    margin: 0;\n  }\n\n  .md-divider--vertical {\n    height: 100%;\n    width: $md-divider-height;\n  }\n\n  .md-divider--inset {\n    margin-left: $md-list-left-padding;\n  }\n\n  @if $include-borders {\n    @include react-md-divider-borders($light-theme);\n  }\n}\n\n/// Includes the styles and class names for creating a divider through\n/// the border property. This will create the following class names:\n///\n/// - md-divider-border\n///   - the base class that applies the color and border style.\n/// - md-divider-border--top\n///   - only includes a border above the element.\n/// - md-divider-border--right\n///   - only includes a border to the right of the element.\n/// - md-divider-border--bottom\n///   - only includes a border below the element.\n/// - md-divider-border--left\n///   - only includes a border to the left of the element.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-divider-borders;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the borders should\n///     be styled for the light theme.\n/// @see {Mixin} react-md-theme-divider-borders\n@mixin react-md-divider-borders($light-theme: $md-light-theme) {\n  .md-divider-border {\n    border-color: get-color('divider', $light-theme);\n    border-style: solid;\n    border-width: 0;\n  }\n\n  .md-divider-border--top {\n    border-top-width: 1px;\n  }\n\n  .md-divider-border--right {\n    border-right-width: 1px;\n  }\n\n  .md-divider-border--bottom {\n    border-bottom-width: 1px;\n  }\n\n  .md-divider-border--left {\n    border-left-width: 1px;\n  }\n}\n\n/// Updates the background color of dividers ONLY if the `$light-theme` does\n/// not equal the `$md-light-theme`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-dividers;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @group dividers, themes\n@mixin react-md-theme-dividers($light-theme: $md-light-theme, $include-borders: $md-divider-include-borders) {\n  @if $light-theme != $md-light-theme {\n    .md-divider {\n      background: get-color('divider', $light-theme);\n    }\n  }\n\n  @if $include-borders {\n    @include react-md-theme-divider-borders($light-theme);\n  }\n}\n\n/// Themes only the divider borders if the `$light-theme` does not equal the `$md-light-theme`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-divider-borders(!$md-light-theme);\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.\n/// @group dividers, themes\n@mixin react-md-theme-divider-borders($light-theme: $md-light-theme) {\n  @if $light-theme != $md-light-theme {\n    .md-divider-border {\n      border-color: get-color('divider', $light-theme);\n    }\n  }\n}\n","////\n/// @group drawers\n////\n\n/// The z-index to use for fixed navigation drawers.\n/// @type Number\n/// @see md-btn-fixed-z-index\n/// @see md-dialog-full-page-z-index\n/// @see md-dialog-overlay-z-index\n/// @see md-menu-z-index\n/// @see md-overlay-z-index\n/// @see md-picker-inline-z-index\n/// @see md-snackbar-z-index\n/// @see md-toolbar-z-index\n/// @group drawers, z-indexes\n$md-drawer-z-index: 17 !default;\n\n/// The transition time for the drawer to enter or leave the view.\n/// @type Number\n$md-drawer-transition-time: $md-transition-time * 2 !default;\n\n/// The drawer's max width on mobile devices when positioned to the left of the screen.\n/// @type Number\n$md-drawer-mobile-max-width: 320px !default;\n\n/// The margin for the drawer on mobile devices when positioned to the left of the screen.\n/// @type Number\n$md-drawer-mobile-margin: 56px !default;\n\n/// The width for a mini drawer on mobile devices.\n/// @type Number\n$md-drawer-mobile-mini-width: $md-font-icon-size + 24px !default;\n\n/// The drawer's default width on tablet devices when positioned to the left of the screen.\n/// @type Number\n$md-drawer-tablet-width: 256px !default;\n\n/// The drawer's default width on desktop screens when positioned to the left of the screen.\n/// @type Number\n$md-drawer-desktop-width: $md-drawer-tablet-width !default;\n\n/// The drawer's max width on desktop screens when positioned to the left of the screen.\n$md-drawer-desktop-left-max-width: 400px !default;\n\n/// The mini drawer width on desktops and tablets.\n/// @type Number\n$md-drawer-desktop-mini-width: $md-font-icon-size + (24px * 2) !default;\n\n/// This is the amount of padding to apply to the left and right of a mini nav item on mobile devices.\n/// This is mostly used to center the item in the mini drawer.\n/// @type Number\n$md-drawer-mobile-mini-item-padding: ($md-drawer-mobile-mini-width - $md-font-icon-size) / 2 !default;\n\n/// This is the amount of padding to apply to the left and right of a mini nav item on desktop screens.\n/// This is mostly used to center the item in the mini drawer.\n/// @type Number\n$md-drawer-desktop-mini-item-padding: ($md-drawer-desktop-mini-width - if($md-font-icon-include-dense, $md-font-icon-dense-size, $md-font-icon-size)) / 2 !default;\n\n\n/// Includes the styles for drawers.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-drawers;\n///\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should\n///   be included.\n@mixin react-md-drawers($include-media: $md-media-included) {\n  @if $include-media {\n    @include react-md-drawers-media;\n  }\n\n  .md-drawer {\n    transition-duration: $md-drawer-transition-time;\n    transition-property: transform;\n\n    &--fixed {\n      bottom: 0;\n      position: fixed;\n      top: 0;\n      z-index: $md-drawer-z-index;\n    }\n\n    &--inline {\n      display: inline-block;\n      height: 100%;\n    }\n\n    &--left {\n      left: 0;\n    }\n\n    &--right {\n      right: 0;\n    }\n\n    &--active {\n      transform: translate3d(0, 0, 0);\n    }\n\n    &--mini {\n      z-index: $md-drawer-z-index - 1;\n    }\n  }\n\n  .md-list--drawer {\n    @include md-ios-scroll-momentum;\n\n    height: 100%;\n    overflow-y: auto;\n  }\n\n  .md-overlay--drawer.md-overlay--drawer {\n    transition-duration: $md-drawer-transition-time;\n  }\n}\n\n/// Includes the styles for drawers on mobile devices.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-drawers-mobile;\n///   }\n///\n/// @group drawers, media-queries\n@mixin react-md-drawers-mobile {\n  .md-drawer {\n\n    &--left {\n      max-width: $md-drawer-mobile-max-width;\n      transform: translate3d(-100%, 0, 0);\n      width: calc(100vw - #{$md-drawer-mobile-margin});\n    }\n\n    &--right {\n      left: 0;\n      transform: translate3d(100%, 0, 0);\n    }\n\n    &--mini.md-drawer--mini {\n      width: $md-drawer-mobile-mini-width;\n    }\n  }\n\n  .md-list-tile--mini.md-list-tile--mini {\n    padding-left: $md-drawer-mobile-mini-item-padding;\n    padding-right: $md-drawer-mobile-mini-item-padding;\n  }\n\n  .md-drawer-relative--mini.md-drawer-relative--mini {\n    margin-left: $md-drawer-mobile-mini-width;\n  }\n\n  .md-toolbar ~ .md-list--drawer {\n    height: calc(100% - #{$md-toolbar-mobile-portrait-height});\n  }\n}\n\n\n/// Includes the styles for drawers on mobile landscape devices.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-landscape-media} {\n///     @include react-md-drawers-mobile-landscape;\n///   }\n///\n/// @group drawers, media-queries\n@mixin react-md-drawers-mobile-landscape {\n  .md-toolbar ~ .md-list--drawer {\n    height: calc(100% - #{$md-toolbar-mobile-landscape-height});\n  }\n}\n\n\n/// Includes the styles for drawers on tablets.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-tablet-media} {\n///     @include react-md-drawers-tablet;\n///   }\n///\n/// @group drawers, media-queries\n@mixin react-md-drawers-tablet {\n  .md-drawer {\n\n    &--left {\n      max-width: $md-drawer-desktop-left-max-width;\n      transform: translate3d(-$md-drawer-desktop-width, 0, 0);\n      width: $md-drawer-tablet-width;\n    }\n\n    &--right {\n      transform: translate3d(100%, 0, 0);\n    }\n\n    &--mini.md-drawer--mini {\n      width: $md-drawer-desktop-mini-width;\n    }\n  }\n\n  .md-list-tile--mini.md-list-tile--mini {\n    padding-left: $md-drawer-desktop-mini-item-padding;\n    padding-right: $md-drawer-desktop-mini-item-padding;\n  }\n\n  .md-drawer-relative {\n    margin-left: $md-drawer-tablet-width;\n  }\n\n  .md-drawer-relative--mini.md-drawer-relative--mini {\n    margin-left: $md-drawer-desktop-mini-width;\n  }\n\n  .md-toolbar ~ .md-list--drawer {\n    height: calc(100% - #{$md-toolbar-tablet-height});\n  }\n}\n\n\n/// Includes the styles for drawers on desktop screens.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-drawers-desktop;\n///   }\n///\n/// @group drawers, media-queries\n@mixin react-md-drawers-desktop {\n  $diff-width: $md-drawer-tablet-width != $md-drawer-desktop-width;\n\n  .md-drawer {\n    @if $diff-width {\n      width: $md-drawer-desktop-width;\n    }\n  }\n\n  @if $diff-width {\n    .md-drawer-relative {\n      margin-left: $md-drawer-desktop-width;\n    }\n  }\n}\n\n/// Includes the media queries and styles for drawers.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-drawers-media;\n///\n/// @group drawers, media-queries\n@mixin react-md-drawers-media {\n  @media #{$md-mobile-media} and (max-width: #{$md-desktop-min-width - 1}) {\n    @include react-md-drawers-mobile;\n  }\n\n  @media #{$md-mobile-landscape-media} {\n    @include react-md-drawers-mobile-landscape;\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-drawers-tablet;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-drawers-desktop;\n  }\n}\n","////\n/// @group file-inputs\n////\n\n\n/// Includes the styles for file inputs. This really depends on the styles\n/// for `flat` or `raised` buttons.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-file-inputs;\n/// @see react-md-buttons\n/// @see md-btn-include-flat\n/// @see md-btn-include-raised\n@mixin react-md-file-inputs {\n  .md-file-input {\n    height: 0;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    width: 0;\n  }\n\n  .md-file-input-container {\n    position: relative;\n\n    .md-btn {\n      display: block;\n    }\n  }\n}\n","////\n/// @group inks\n////\n\n\n/// Boolean if the ink should pulse by default. This is basically what will happen\n/// while the inked item has focus.\n/// @type Boolean\n$md-ink-include-pulse: false !default;\n\n/// The transition time for an ink to fully appear.\n/// @type Number\n$md-ink-enter-transition-time: .45s !default;\n\n/// The transition time for an ink to fully disappear.\n/// @type Number\n$md-ink-leave-transition-time: .3s !default;\n\n/// The animation time for the ink's pulsing.\n/// @type Number\n$md-ink-pulse-time: 1.5s !default;\n\n/// This is the scale that an ink should take once it has been fully\n/// created. It gets applied into `scale`.\n/// @type Number\n$md-ink-expanded-scale: 1 !default;\n\n/// The border radius for ink.\n/// @type Number\n$md-ink-border-radius: 50% !default;\n\n/// Creates the styles for material design ink.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-inks;\n///\n/// @param {Boolean} $light-theme [$md-light-theme] - Boolean if the ink should be styled\n///     for the light theme.\n/// @param {Boolean} $pulse [$md-ink-include-pulse] - Boolean if the pulse effect should be included.\n@mixin react-md-inks($light-theme: $md-light-theme, $pulse: $md-ink-include-pulse) {\n  .md-ink-container {\n    border-radius: inherit;\n    height: 100%;\n    left: 0;\n    overflow: hidden;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 1;\n  }\n\n  .md-ink-container--2x {\n    height: 200%;\n    left: -50%;\n    top: -50%;\n    width: 200%;\n  }\n\n  .md-ink {\n    background: get-color('divider', $light-theme);\n    border-radius: $md-ink-border-radius;\n    display: block;\n    opacity: 1;\n    position: absolute;\n    transform: scale(0);\n    z-index: -1;\n  }\n\n  .md-ink--active {\n    transition-duration: $md-ink-enter-transition-time;\n    transition-property: opacity, transform;\n    transition-timing-function: $md-transition-acceleration;\n  }\n\n  .md-ink--expanded {\n    transform: scale($md-ink-expanded-scale);\n  }\n\n  @if $pulse {\n    .md-ink--pulsing {\n      animation-duration: $md-ink-pulse-time;\n      animation-iteration-count: infinite;\n      animation-name: md-ink-pulse;\n      animation-timing-function: $md-transition-standard;\n    }\n\n    @keyframes md-ink-pulse {\n      0% {\n        transform: scale($md-ink-expanded-scale);\n      }\n\n      66% {\n        transform: scale(.85);\n      }\n\n      100% {\n        transform: scale($md-ink-expanded-scale);\n      }\n    }\n  }\n\n  .md-ink--leaving {\n    opacity: 0;\n    transition-duration: .3s;\n    transition-timing-function: $md-transition-deceleration;\n  }\n\n}\n\n/// Themes the ink color for the given theme ONLY if the `$light-theme` does not equal the\n/// `$md-light-theme`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-inks(!$md-light-theme);\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling to the light theme.\n/// @group inks, themes\n@mixin react-md-theme-inks($light-theme: $md-light-theme) {\n  @if $light-theme != $md-light-theme {\n    .md-ink {\n      background: get-color('divider', $light-theme);\n    }\n  }\n}\n","////\n/// @group icons\n////\n\n/// Boolean if the icon separator styles should be included by default.\n/// @type Boolean\n$md-font-icon-include-separators: true !default;\n\n/// Boolean if the dense spec for icons should be included. This will\n/// update the size for icons to be smaller on desktop displays.\n/// @type Boolean\n$md-font-icon-include-dense: true !default;\n\n/// Boolean if the font icons should be \"fixed\" for usage with material-icons.\n/// If the fonts are loaded after the styles of `react-md`, the created stylesheet\n/// will override the `md-icon` styles for creating dense icons. Enabling this\n/// boolean will manually update the styles so that `md-icon` has precedence.\n///\n/// @type Boolean\n$md-font-icon-include-dense-material-icons: $md-font-icon-include-dense !default;\n\n/// The amount of padding to put between an icon and any text.\n/// @type Number\n$md-font-icon-separator-padding: $md-default-padding !default;\n\n/// The light theme's disabled color for icons. This is actually not used. Use the\n/// `$md-light-theme-colors` Sass map instead.\n/// @type Color\n/// @deprecated\n/// @see md-light-theme-colors\n$md-font-icon-light-theme-disabled-color: rgba($md-black-base, .26) !default;\n\n/// The dark theme's disabled color for icons. This is actually not used. Use the\n/// `$md-dark-theme-colors` Sass map instead.\n/// @type Color\n/// @deprecated\n$md-font-icon-dark-theme-disabled-color: rgba($md-white-base, .3) !default;\n\n/// Includes the CSS for using `md-icon`.\n///\n/// @param {Boolean} $light-theme [$md-light-theme] - Boolean if the application is using the\n///     light-theme or not.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries for icons\n///     should also be included. This also relies on the `include-dense` param.\n/// @param {Boolean} include-separators [$md-font-icon-include-separators] - Boolean if the styles\n///     for separating content and an icon should be included.\n/// @param {Boolean} include-dense [$md-font-icon-include-dense] - Boolean if the dense spec for icons\n///     should be included.\n/// @param {Boolean} include-dense-material-icons [$md-font-icon-include-dense-material-icons] - Boolean if\n///     the dense spec of font icons should also be force applied to the material-icons library. This can\n///     be set to false if you import the fonts before the `react-md` styles.\n@mixin react-md-icons(\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-separators: $md-font-icon-include-separators,\n  $include-dense: $md-font-icon-include-dense,\n  $include-dense-material-icons: $md-font-icon-include-dense-material-icons\n) {\n  .md-icon {\n    color: get-color('icon', $light-theme);\n    font-size: $md-font-icon-size;\n    text-align: center;\n    transition-duration: $md-transition-time;\n    transition-property: color;\n    user-select: none;\n  }\n\n  // scss-lint:disable QualifyingElement\n  svg.md-icon {\n    fill: currentColor;\n    height: $md-font-icon-size;\n    width: $md-font-icon-size;\n  }\n  // scss-lint:enable QualifyingElement\n\n  @if $include-separators {\n    @include react-md-icon-separators;\n  }\n\n  @if $include-media {\n    @include react-md-icons-media($include-dense, $include-dense-material-icons);\n  }\n}\n\n/// Updates the styles for an icon to use the dense font size. This should really only\n/// be used within a media query.\n///\n/// @param {Boolean} include-dense-material-icons [$md-font-icon-include-dense-material-icons] - Boolean if\n///   the material-icons font icon library should be adjusted to support dense icons.\n@mixin react-md-icons-dense($include-dense-material-icons: $md-font-icon-include-dense-material-icons) {\n  $prefix: if($include-dense-material-icons, '.material-icons', '');\n\n  #{$prefix}.md-icon {\n    font-size: $md-font-icon-dense-size;\n  }\n\n  // scss-lint:disable QualifyingElement\n  svg.md-icon {\n    height: $md-font-icon-dense-size;\n    width: $md-font-icon-dense-size;\n  }\n  // scss-lint:enable QualifyingElement\n}\n\n/// Creates the media queries for icons. This really only is used for the dense\n/// spec of icons.\n///\n/// @param {Boolean} include-dense [$md-font-icon-include-dense] - Boolean if the dense\n///   specs for icons should be included.\n/// @param {Boolean} include-dense-material-icons [$md-font-icon-include-dense-material-icons] - Boolean if\n///   the material-icons font icon library should be adjusted to support dense icons.\n/// @group media-queries, icons\n@mixin react-md-icons-media($include-dense: $md-font-icon-include-dense, $include-dense-material-icons: $md-font-icon-include-dense-material-icons) {\n  @if $include-dense {\n    @media #{$md-desktop-media} {\n      @include react-md-icons-dense($include-dense-material-icons);\n    }\n  }\n}\n\n\n/// Updates the color of the base `md-icon` if the `$light-theme` parameter\n/// does not equal the global `$md-light-theme`.\n/// @param {Boolean} $light-theme [$md-light-theme] - Boolean if using the\n///     light theme.\n/// @group icons, themes\n@mixin react-md-theme-icons($light-theme: $md-light-theme) {\n  $md-icon-color: if($light-theme, $md-light-theme-secondary-text-color, $md-dark-theme-secondary-text-color);\n\n  @if $light-theme != $md-light-theme {\n    .md-icon {\n      color: $md-icon-color;\n    }\n  }\n}\n\n/// Includes the styles for the `IconSeparator` component.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-icon-separators;\n@mixin react-md-icon-separators {\n  .md-icon-separator {\n    align-items: center;\n    display: flex;\n    font-weight: inherit;\n    text-align: left;\n\n    .md-icon {\n      flex-grow: 0;\n      flex-shrink: 0;\n    }\n  }\n\n  .md-icon-text {\n    flex-grow: 1;\n    flex-shrink: 0;\n    font-weight: inherit;\n    line-height: inherit;\n\n    &:first-child {\n      padding-right: $md-font-icon-separator-padding;\n    }\n\n    &:last-child {\n      padding-left: $md-font-icon-separator-padding;\n    }\n  }\n}\n","////\n/// @group layovers\n////\n\n\n/// Boolean if the minimal styles for the simple layovers should be included.\n/// These styles are required if the `simplified` prop is enabled on the `Layover`\n/// @type Boolean\n$md-layover-include-simplified: true !default;\n\n/// The transition time for a layover's child to appear or disappear.\n/// @type Number\n$md-layover-transition-time: .2s !default;\n\n/// The z-index for the layover's child.\n/// @type Number\n/// @group layovers, z-indexes\n$md-layover-child-z-index: 100 !default;\n\n/// A Map of the available child positions for a layover. It is a mapping of the suffix\n/// to apply and a transform-origin to apply when animating.\n/// @type Map\n$md-layover-child-positions: (\n  tl: '0 0',\n  tr: '100% 0',\n  bl: '0 100%',\n  br: '100% 100%',\n  below: '50% 0',\n) !default;\n\n/// Creates the styles for layovers\n@mixin react-md-layovers($include-simplified: $md-layover-include-simplified) {\n  .md-layover-enter {\n    transform: scale(0);\n\n    &.md-layover-enter-active {\n      transform: scale(1);\n      transition-duration: $md-layover-transition-time;\n      transition-property: transform;\n      transition-timing-function: $md-transition-deceleration;\n    }\n  }\n\n  .md-layover-leave {\n    opacity: 1;\n\n    &.md-layover-leave-active {\n      opacity: 0;\n      transition-duration: $md-layover-transition-time;\n      transition-property: opacity;\n      transition-timing-function: $md-transition-acceleration;\n    }\n  }\n\n  .md-layover-child {\n    position: fixed;\n    z-index: $md-layover-child-z-index;\n\n    @each $position, $origin in $md-layover-child-positions {\n      &--#{$position} {\n        transform-origin: unquote($origin);\n\n        @if $position == 'below' {\n          &.md-layover-enter {\n            transform: scaleY(0);\n\n            // scss-lint:disable NestingDepth, SelectorDepth\n            &.md-layover-enter-active {\n              transform: scaleY(1);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @if $include-simplified {\n    .md-layover--simplified {\n      position: relative;\n    }\n\n    .md-layover-child--simplified {\n      position: absolute;\n    }\n  }\n}\n","////\n/// @group menus\n////\n\n/// Boolean if the cascading menu styles should be included. This will update the\n/// collapser icon to be rotated to the side.\n///\n/// @type Boolean\n/// @see md-menu-include-cascading-styles\n$md-menu-include-cascading: true !default;\n\n/// Boolean if the additional styles for cascading menus should be included. I'm not\n/// really sure why these styles are part of the spec.\n///\n/// @type Boolean\n/// @see md-menu-cascading-font-size\n/// @see md-menu-cascading-height\n/// @see md-menu-cascading-padding\n/// @see md-menu-cascading-list-padding\n$md-menu-include-cascading-styles: true !default;\n\n/// The z-index to use for menus. This is really only if the z-index for a layover\n/// is not preferred.\n/// @type Number\n/// @see md-btn-fixed-z-index\n/// @see md-dialog-full-page-z-index\n/// @see md-dialog-overlay-z-index\n/// @see md-drawer-z-index\n/// @see md-overlay-z-index\n/// @see md-picker-inline-z-index\n/// @see md-snackbar-z-index\n/// @see md-toolbar-z-index\n/// @group menus, z-indexes\n$md-menu-z-index: null !default;\n\n/// The width for a menu's `unit`. I don't really get it myself. It is a part of the material design\n/// specs though.\n/// @type Number\n$md-menu-units-width: 56px !default;\n\n/// The transition time to use for menus\n/// type Number\n/// @deprecated\n$md-menu-transition-time: null !default;\n\n/// The min width to apply to menus. If this value is set, the mobile/desktop values will not be used.\n///\n/// @see md-menu-mobile-min-width\n/// @see md-menu-desktop-min-width\n/// @type Number\n$md-menu-min-width: $md-menu-units-width * 2 !default;\n\n/// The max width to apply to menus. If this value is set, the mobile/desktop values will not be used.\n///\n/// @see md-menu-mobile-max-width\n/// @see md-menu-desktop-max-width\n/// @type Number\n$md-menu-max-width: null !default;\n\n/// The max height to apply to menus. If this value is set, the mobile/desktop values will not be used.\n///\n/// @see md-menu-mobile-max-height\n/// @see md-menu-desktop-max-height\n/// @type Number\n$md-menu-max-height: null !default;\n\n\n/// An optional min width to apply to menus on tablet displays.\n/// @see md-menu-min-width\n/// @type Number\n$md-menu-mobile-min-width: null !default;\n\n/// An optional max width to apply to menus on mobile devices.\n///\n/// @see md-menu-max-width\n/// @type Number\n$md-menu-mobile-max-width: null !default;\n\n/// The max height for menus on mobile devices.\n/// @type Number\n$md-menu-mobile-max-height: $md-height * 5 + $md-height / 3 + $md-list-mobile-padding * 2 !default;\n\n/// An optional min width to apply to menus on desktop displays.\n/// @see md-menu-min-width\n/// @type Number\n$md-menu-desktop-min-width: null !default;\n\n/// An optional max width to apply to menus on desktop screens.\n///\n/// @see md-menu-max-width\n/// @type Number\n$md-menu-desktop-max-width: null !default;\n\n/// The max height for menus on desktop screens.\n/// @type Number\n$md-menu-desktop-max-height: $md-height * 5 + $md-height / 3 + $md-list-desktop-padding * 2 !default;\n\n/// The font size to use for cascading menus.\n/// @type Number\n$md-menu-cascading-font-size: 15px !default;\n\n/// The padding to use for cascading menus.\n/// @type Number\n$md-menu-cascading-padding: 24px !default;\n\n/// The Height to use for each list item in a cascading menu.\n/// @type Number\n$md-menu-cascading-height: 32px !default;\n\n/// The amount of padding to add to the top and bottom of a list in\n/// a cascading menu.\n/// @type Number\n$md-menu-cascading-list-padding: 16px !default;\n\n/// Includes the styles for menus.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-menus;\n///\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries are included\n///     for menus.\n/// @param {Boolean} include-cascading [$md-menu-include-cascading] - Boolean if the desktop cascading\n///     styles for menus should be included.\n@mixin react-md-menus($include-media: $md-media-included, $include-cascading: $md-menu-include-cascading, $include-cascading-styles: $md-menu-include-cascading-styles) {\n  .md-list--menu {\n    max-width: $md-menu-max-width;\n    min-width: $md-menu-min-width;\n    z-index: $md-menu-z-index;\n\n    &-restricted {\n      @include md-ios-scroll-momentum;\n\n      max-height: $md-menu-max-height;\n      overflow-y: auto;\n    }\n\n    &-contained {\n      width: 100%;\n    }\n\n    &-below {\n      left: 0;\n      top: 100%;\n      transform-origin: 50% 0;\n    }\n\n    &-tr {\n      right: 0;\n      top: 0;\n      transform-origin: 100% 0;\n    }\n\n    &-tl {\n      top: 0;\n      transform-origin: 0 0;\n    }\n\n    &-br {\n      right: 0;\n      transform-origin: 100% 100%;\n    }\n\n    &-bl {\n      transform-origin: 0 100%;\n    }\n  }\n\n  @if $include-cascading {\n    @include react-md-menus-cascading($include-cascading-styles);\n  }\n\n  @if $include-media {\n    @include react-md-menus-media;\n  }\n}\n\n/// Creates the styles for cascading menus. This really just rotates the collapser icon to change\n/// from vertical to horizontal.\n///\n/// @param {Boolean} include-cascading-styles [$md-menu-include-cascading-styles] - Boolean if the material design\n///     spec styles should also be included. This changes font-size, padding, and height of the items in a cascading\n///     menu.\n@mixin react-md-menus-cascading($include-cascading-styles: $md-menu-include-cascading-styles) {\n  @media #{$md-desktop-media} {\n    .md-list--menu-cascading {\n      @if $include-cascading-styles {\n        padding-bottom: $md-menu-cascading-list-padding;\n        padding-top: $md-menu-cascading-list-padding;\n\n        .md-list-tile {\n          padding-left: $md-menu-cascading-padding;\n          padding-right: $md-menu-cascading-padding;\n\n          &:not(.md-list-tile--two-lines):not(.md-list-tile--three-lines) {\n            height: $md-menu-cascading-height;\n          }\n        }\n\n        .md-tile-text--primary {\n          font-size: $md-menu-cascading-font-size;\n        }\n      }\n\n      .md-collapser {\n        transform: rotate3d(0, 0, 1, -90deg);\n      }\n\n      .md-collapser--flipped {\n        transform: rotate3d(0, 0, 1, 90deg);\n      }\n    }\n  }\n}\n\n/// Creates the styles for menus on mobile devices. This should _normally_\n/// be used a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-menus-mobile;\n///   }\n/// @group menus, media-queries\n@mixin react-md-menus-mobile {\n  @if $md-menu-max-width == null or $md-menu-min-width == null {\n    .md-list--menu {\n      max-width: if($md-menu-max-width == null, $md-menu-mobile-max-width, null);\n      min-width: if($md-menu-min-width == null, $md-menu-mobile-min-width, null);\n    }\n  }\n\n  @if $md-menu-max-height == null {\n    .md-list--menu-restricted {\n      max-height: $md-menu-mobile-max-height;\n    }\n  }\n}\n\n/// Creates the styles for menus on desktop screens. This should _normally_\n/// be used a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-menus-desktop;\n///   }\n/// @group menus, media-queries\n@mixin react-md-menus-desktop {\n  @if $md-menu-max-width == null or $md-menu-min-width == null {\n    .md-list--menu {\n      max-width: if($md-menu-max-width == null, $md-menu-desktop-max-width, null);\n      min-width: if($md-menu-min-width == null, $md-menu-desktop-min-width, null);\n    }\n  }\n\n  @if $md-menu-max-height == null {\n    .md-list--menu-restricted {\n      max-height: $md-menu-desktop-max-height;\n    }\n  }\n}\n\n/// Includes the media queries for menus on mobile devices and desktop screens.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-menus-media;\n/// @group menus, media-queries\n@mixin react-md-menus-media {\n  @if $md-menu-max-height == null or $md-menu-max-width == null or $md-menu-min-width == null {\n    @media #{$md-mobile-media} {\n      @include react-md-menus-mobile;\n    }\n\n    @media #{$md-desktop-media} {\n      @include react-md-menus-desktop;\n    }\n  }\n}\n","////\n/// @group navigation-drawers\n////\n@import 'drawers';\n@import 'toolbars';\n\n/// Boolean if the navigation drawer's content should use the `height` attribute instead of\n/// the `max-height`. When this is true, only the content will be scrollable instead of the\n/// entire window.\n/// @type Boolean\n$md-navigation-drawer-enforce-height: false !default;\n\n/// Boolean if the `height`/`max-height` should use `vh` instead of `%`. It is recommended to set\n/// this to `false` instead of using `vh` because of the different calculations on devices.\n///\n/// If this is disabled, it is recommended to also add the following styles:\n/// ```scss\n/// html,\n/// body,\n/// #app, // the entry point for the react app\n/// div[react-root] {\n///   height: 100%;\n/// }\n/// ```\n/// This will allow for better height calculations throughout the app and not relying on the buggy `vh`.\n///\n/// @see md-navigation-drawer-enforce-height\n/// @type Boolean\n$md-navigation-drawer-use-view-height: true !default;\n\n/// Boolean if the cross-fade transition should be included. This is used when the content\n/// changes.\n/// @type Boolean\n$md-navigation-drawer-include-cross-fade: true !default;\n\n/// A margin-left that should also get applied to the navigation drawer's title when being\n/// positioned next to a permanent or persistent open drawer.\n/// @type Number\n$md-navigation-drawer-title-offset: 20px !default;\n\n/// The transition time for the cross-fade transition.\n/// @type Number\n$md-cross-fade-transition-time: $md-transition-time * 2 !default;\n\n/// The distance that the new content should move during the cross-fade transition.\n/// @type Number\n$md-cross-fade-distance: 16px !default;\n\n/// Includes the styles for navigation drawers. This really depends on the styles for toolbars and drawers.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-navigation-drawers;\n///\n/// @see react-md-drawers\n/// @see react-md-toolbars\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should be included.\n/// @param {Boolean} include-cross-fade [$md-navigation-drawer-include-cross-fade] - Boolean if the cross\n///   fade transition should be included.\n@mixin react-md-navigation-drawers($include-media: $md-media-included, $include-cross-fade: $md-navigation-drawer-include-cross-fade, $enforce-height: $md-navigation-drawer-enforce-height) {\n  @if $include-media {\n    @include react-md-navigation-drawers-media($enforce-height);\n  }\n\n  .md-toolbar {\n    &.md-toolbar--over-drawer {\n      z-index: $md-drawer-z-index + 2;\n    }\n  }\n\n  .md-title--drawer-active.md-title--drawer-active {\n    transition-duration: $md-drawer-transition-time;\n    transition-property: margin-left;\n  }\n\n  .md-navigation-drawer-content {\n    // main does not display block in IE11. Would normally rely on normalize.css for this\n    display: block;\n\n    @if $md-toolbar-height != null {\n      @include react-md-navigation-drawer-height($md-toolbar-height);\n    }\n\n    &:focus {\n      outline-style: none;\n    }\n\n    @if $md-navigation-drawer-enforce-height {\n      @include md-ios-scroll-momentum;\n\n      overflow-y: auto;\n    }\n\n    &--inactive {\n      margin-left: 0;\n    }\n\n    &--active {\n      transition-duration: $md-drawer-transition-time;\n      transition-property: margin-left;\n    }\n\n    @if $md-toolbar-prominent-height != null {\n      &--prominent-offset {\n        @include react-md-navigation-drawer-height($md-toolbar-prominent-height)\n      }\n    }\n  }\n\n  .md-title.md-title--permanent-offset {\n    margin-left: $md-drawer-tablet-width + $md-navigation-drawer-title-offset;\n  }\n\n  @if $include-cross-fade {\n    .md-cross-fade-enter {\n      opacity: .01;\n      transform: translate3d(0, $md-cross-fade-distance, 0);\n\n      &.md-cross-fade-enter-active {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n        transition-duration: $md-cross-fade-transition-time;\n        transition-property: transform, opacity;\n      }\n    }\n  }\n}\n\n/// Includes the styles for the navigation drawer content on mobile devices.\n/// This should be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-navigation-drawers-portrait;\n///   }\n///\n/// @param {Boolean} enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n///     height should be strictly enforced. This will use the `height` attribute instead of the `max-height`.\n/// @group navigation-drawers, media-queries\n@mixin react-md-navigation-drawers-mobile($enforce-height: $md-navigation-drawer-enforce-height) {\n  .md-navigation-drawer-content {\n    @include react-md-navigation-drawer-height($md-toolbar-mobile-portrait-height, $enforce-height);\n  }\n}\n\n\n/// Includes the styles for the navigation drawer content on mobile landscape devices.\n/// This should be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-landscape-media} {\n///     @include react-md-navigation-drawers-mobile-landscape;\n///   }\n///\n/// @param {Boolean} enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n///     height should be strictly enforced. This will use the `height` attribute instead of the `max-height`.\n/// @group navigation-drawers, media-queries\n@mixin react-md-navigation-drawers-mobile-landscape($enforce-height: $md-navigation-drawer-enforce-height) {\n  @if $md-toolbar-height == null {\n    .md-navigation-drawer-content {\n      @include react-md-navigation-drawer-height($md-toolbar-mobile-landscape-height, $enforce-height);\n    }\n  }\n\n  @if $md-toolbar-prominent-height == null and $md-toolbar-mobile-prominent-height != null {\n    .md-navigation-drawer-content--prominent-offset {\n      @include react-md-navigation-drawer-height($md-toolbar-mobile-prominent-height, $enforce-height);\n    }\n  }\n}\n\n\n/// Includes the styles for the navigation drawer content on tablets.\n/// This should be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-tablet-media} {\n///     @include react-md-navigation-drawers-tablet;\n///   }\n///\n/// @param {Boolean} enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n///     height should be strictly enforced. This will use the `height` attribute instead of the `max-height`.\n/// @group navigation-drawers, media-queries\n@mixin react-md-navigation-drawers-tablet($enforce-height: $md-navigation-drawer-enforce-height) {\n  @if $md-toolbar-height == null {\n    .md-navigation-drawer-content {\n      @include react-md-navigation-drawer-height($md-toolbar-tablet-height, $enforce-height);\n    }\n  }\n\n  @if $md-toolbar-prominent-height == null and $md-toolbar-tablet-prominent-height != null {\n    .md-navigation-drawer-content {\n      @include react-md-navigation-drawer-height($md-toolbar-tablet-prominent-height, $enforce-height);\n    }\n  }\n\n  .md-title.md-title--persistent-offset {\n    margin-left: $md-drawer-tablet-width - $md-btn-icon-size - $md-btn-icon-padding + $md-navigation-drawer-title-offset;\n  }\n}\n\n\n/// Includes the styles for the navigation drawer content on desktop screens.\n/// This should be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-navigation-drawers-desktop;\n///   }\n///\n/// @param {Boolean} enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n///     height should be strictly enforced. This will use the `height` attribute instead of the `max-height`.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense font icons\n///     should be included.\n/// @group navigation-drawers, media-queries\n@mixin react-md-navigation-drawers-desktop($enforce-height: $md-navigation-drawer-enforce-height, $include-dense-icons: $md-font-icon-include-dense) {\n  @if $md-toolbar-height == null and $md-toolbar-desktop-height != null {\n    .md-navigation-drawer-content {\n      @include react-md-navigation-drawer-height($md-toolbar-desktop-height, $enforce-height);\n    }\n  }\n\n  @if $md-toolbar-prominent-height == null and $md-toolbar-desktop-prominent-height != null {\n    .md-navigation-drawer-content {\n      @include react-md-navigation-drawer-height($md-toolbar-desktop-prominent-height, $enforce-height);\n    }\n  }\n\n  @if $include-dense-icons or $md-drawer-tablet-width != $md-drawer-desktop-width {\n    .md-title.md-title--persistent-offset {\n      margin-left: $md-drawer-desktop-width - if($include-dense-icons, $md-btn-icon-dense-size, $md-btn-icon-size) - if($include-dense-icons, $md-btn-icon-dense-padding, $md-btn-icon-padding) + $md-navigation-drawer-title-offset;\n    }\n  }\n}\n\n/// Includes the media queries and styles for navigation drawers.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-navigation-drawers-media;\n///\n/// @param {Boolean} enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the drawer's content\n///     height should be strictly enforced. This will use the `height` attribute instead of the `max-height`.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense font icons\n///     should be included.\n/// @group navigation-drawers, media-queries\n@mixin react-md-navigation-drawers-media($enforce-height: $md-navigation-drawer-enforce-height, $include-dense-icons: $md-font-icon-include-dense) {\n  $defaults-not-set: $md-toolbar-height == null or $md-toolbar-prominent-height == null;\n  @if $defaults-not-set {\n    @media #{$md-mobile-media} {\n      @include react-md-navigation-drawers-mobile($enforce-height);\n    }\n\n    @media #{$md-mobile-landscape-media} {\n      @include react-md-navigation-drawers-mobile-landscape($enforce-height);\n    }\n\n    @media #{$md-tablet-media} {\n      @include react-md-navigation-drawers-tablet($enforce-height);\n    }\n  }\n\n  @if $defaults-not-set or $include-dense-icons or $md-drawer-tablet-width != $md-drawer-desktop-width {\n    @media #{$md-desktop-media} {\n      @include react-md-navigation-drawers-desktop($enforce-height, $include-dense-icons);\n    }\n  }\n}\n\n/// This is mostly an internal mixin for either setting the height or min-height for the navigation drawer's content.\n///\n/// @param {Number} toolbar-height - The current toolbar height.\n/// @param {Boolean} enforce-height [$md-navigation-drawer-enforce-height] - Boolean if the height should be enforced\n///     instead of setting the min-height.\n/// @param {Boolean} use-vh [$md-navigation-drawer-use-view-height] - Boolean if the height should use `vh` instead of `%`.\n@mixin react-md-navigation-drawer-height($toolbar-height, $enforce-height: $md-navigation-drawer-enforce-height, $use-vh: $md-navigation-drawer-use-view-height) {\n  $height: calc(#{'100' + if($use-vh, 'vh', '%')} - #{$toolbar-height});\n\n  @if $enforce-height {\n    height: $height;\n  } @else {\n    min-height: $height;\n  }\n}\n","////\n/// @group overlays\n////\n\n/// The z-index to use for overlays.\n/// @type Number\n/// @see md-btn-fixed-z-index\n/// @see md-dialog-full-page-z-index\n/// @see md-dialog-overlay-z-index\n/// @see md-menu-z-index\n/// @see md-overlay-z-index\n/// @see md-picker-inline-z-index\n/// @see md-snackbar-z-index\n/// @see md-toolbar-z-index\n/// @group overlays, z-indexes\n$md-overlay-z-index: 16 !default;\n\n/// The transition time for the overlay to transition the opacity.\n/// @type Number\n$md-overlay-transition-time: $md-transition-time !default;\n\n/// The default color for overlays.\n/// @type Color\n/// @see md-btn-fixed-z-index\n/// @see md-dialog-full-page-z-index\n/// @see md-dialog-overlay-z-index\n/// @see md-menu-z-index\n/// @see md-picker-inline-z-index\n/// @see md-snackbar-z-index\n/// @see md-toolbar-z-index\n$md-overlay-color: rgba($md-black-base, .4) !default;\n\n/// Creates the styles for overlays\n@mixin react-md-overlays {\n  .md-overlay {\n    background: $md-overlay-color;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    position: fixed;\n    right: 0;\n    top: 0;\n    transition-duration: $md-overlay-transition-time;\n    transition-property: opacity;\n    z-index: $md-overlay-z-index;\n\n    &--active {\n      opacity: 1;\n    }\n  }\n}\n","////\n/// @group pickers\n////\n\n/// Boolean if the date picker styles should be included.\n/// @type Boolean\n$md-picker-include-date: true !default;\n\n/// Boolean if the time picker styles should be included.\n/// @type Boolean\n$md-picker-include-time: true !default;\n\n/// Boolean if the classes to force a certain orientation should be included.\n/// This is not set by default because it is recommended to just allow device\n/// orientation to determine the orientation of the picker.\n/// @type Boolean\n$md-picker-include-forceful-classes: false !default;\n\n/// The z-index for inline pickers.\n/// @type Number\n/// @see md-btn-fixed-z-index\n/// @see md-drawer-z-index\n/// @see md-menu-z-index\n/// @see md-dialog-full-page-z-index\n/// @see md-dialog-overlay-z-index\n/// @see md-overlay-z-index\n/// @see md-snackbar-z-index\n/// @see md-toolbar-z-index\n/// @group pickers, z-indexes\n$md-picker-inline-z-index: 12 !default;\n\n\n/// The width for the picker while portrait.\n/// @type Number\n$md-picker-portrait-width: 330px !default;\n\n/// The height for the picker's content while portrait.\n/// @type Number\n$md-picker-portrait-content-height: 340px !default;\n\n/// The height for the picker's header while portrait.\n/// @type Number\n$md-picker-portrait-header-height: 110px !default;\n\n\n/// The width for the picker while landscape.\n/// @type Number\n$md-picker-landscape-width: 560px !default;\n\n/// The height for the picker's content while landscape.\n/// @type Number\n$md-picker-landscape-content-height: 280px !default;\n\n/// The height for the picker's header while landscape.\n/// @type Number\n$md-picker-landscape-header-width: 190px !default;\n\n/// The minimal about of margin for pickers on mobile devices. This is used when placing\n/// the picker in a dialog. The width and height can be larger than the default allowed\n/// margin for dialogs, so this will update those margins.\n/// @type Number\n$md-picker-mobile-margin: 16px !default;\n\n/// This is an optional fix for devices that have a really small width (iPhone 5). This\n/// will add an additional media query to hack the size of the dialogs to fit the pickers.\n/// If this is null, it will not be included.\n/// @type Number\n$md-picker-mobile-max-size: 320px !default;\n\n\n/// The font size for a date picker's calendar date.\n/// @type Number\n$md-calendar-date-font-size: 13px !default;\n\n/// The font size for a year in the date picker's year picker that has\n/// not been focused or selected.\n/// @type Number\n$md-year-font-size: 16px !default;\n\n/// The font size for a year in the date picker's year picker that has\n/// been focused.\n/// @type Number\n$md-year-focus-font-size: 20px !default;\n\n/// The font size for a year in the date picker's year picker that has\n/// been selected.\n/// @type Number\n$md-year-active-font-size: 24px !default;\n\n/// The transition time to use for the date picker's active date background circle\n/// to appear.\n/// @type Number\n$md-date-picker-transition-time: $md-transition-time * 2 !default;\n\n/// The size for a date in the date picker's calendar while portrait.\n/// @type Number\n$md-date-picker-portrait-date-size: 44px !default;\n\n/// The size for a date's background that has been focused or selected in the date\n/// picker's calendar while portrait.\n/// @type Number\n$md-date-picker-portrait-ball-size: 36px !default;\n\n/// The size for a date in the date picker's calendar while landscape\n/// @type Number\n$md-date-picker-landscape-date-size: 35px !default;\n\n/// The size for a date's background that has been focused or selected in the date\n/// picker's calendar while landscape.\n/// @type Number\n$md-date-picker-landscape-ball-size: 32px !default;\n\n/// The size for the time picker's clock on while portrait.\n/// @type Number\n$md-clock-portrait-size: $md-picker-portrait-width - $md-dialog-padding * 2 !default;\n\n/// The size for the time picker's clock while landscape.\n/// @type Number\n$md-clock-landscape-size: $md-picker-landscape-content-height - $md-dialog-padding - ($md-dialog-padding / 2) !default;\n\n\n/// The size of an hour or minute on the time picker's clock.\n/// @type Number\n$md-clock-time-size: 36px !default;\n\n/// The size for the clock hand's ball. This is the circle the surrounds the current\n/// time.\n/// @type Number\n$md-clock-hand-ball-size: 6px !default;\n\n/// The scale to use for the clock hand's ball when it is currently over a minute that\n/// is not divisible by 5.\n/// @type Number\n$md-clock-hand-ball-scale: .4 !default;\n\n/// The padding from the outside edge of the clock to the edge of one of the\n/// time circles.\n/// @type Number\n$md-clock-padding: 4px !default;\n\n\n/// Includes the styles for date and time pickers. If the `$include-date` and `$include-time`\n/// parameters are both false, no styles will be created.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-pickers;\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should be included.\n/// @param {Boolean} include-date [$md-picker-include-date] - Boolean if the date picker styles should be included.\n/// @param {Boolean} include-time [$md-picker-include-time] - Boolean if the time picker styles should be included.\n/// @param {Boolean} include-forceful-classes [$md-picker-include-forceful-classes] - Boolean if the\n///     `.md-picker--portrait` and `.md-picker--landscape` classes should be included.\n@mixin react-md-pickers(\n  $primary-color: $md-primary-color,\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-date: $md-picker-include-date,\n  $include-time: $md-picker-include-time,\n  $include-forceful-classes: $md-picker-include-forceful-classes\n) {\n  @if $include-date or $include-time {\n    @include react-md-pickers-base($primary-color, $light-theme, $include-forceful-classes);\n\n    @if $include-media {\n      @include react-md-pickers-media($include-date, $include-time);\n    }\n  }\n\n  @if $include-date {\n    @include react-md-pickers-date($primary-color, $light-theme);\n  }\n\n  @if $include-time {\n    @include react-md-pickers-time($primary-color, $light-theme);\n  }\n}\n\n/// Themes the pickers with the new colors only if the `primary-color` does not equal the `md-primary-color`,\n/// or the `light-theme` does not equal the `md-light-theme` and at least one of `include-date` or `include-time`\n/// are true.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-pickers($md-orange-500, true);\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.\n/// @param {Boolean} include-date [$md-picker-include-date] - Boolean if the date picker styles should be included.\n/// @param {Boolean} include-time [$md-picker-include-time] - Boolean if the time picker styles should be included.\n/// @group pickers, themes\n@mixin react-md-theme-pickers($primary-color: $md-primary-color, $light-theme: $md-light-theme, $include-date: $md-picker-include-date, $include-time: $md-picker-include-time) {\n  @if $include-date or $include-time {\n    $themed: $light-theme != $md-light-theme;\n\n    @if $primary-color != $md-primary-color {\n      @if not $light-theme and $themed {\n        .md-picker-header {\n          background: get-color('card', false);\n        }\n      } @else if $light-theme {\n        .md-picker-header {\n          background: $primary-color;\n        }\n      }\n\n      @if $include-date {\n        .md-calendar-date--btn::after {\n          background: $primary-color;\n        }\n      }\n\n      @if $include-time {\n        .md-clock-hand {\n          &::before,\n          &::after {\n            background: $primary-color;\n          }\n        }\n      }\n    }\n\n    @if $themed {\n      .md-picker-content-container {\n        background: if($light-theme, get-color('card', true), get-color('background', false));\n      }\n\n      @if $include-date {\n        .md-calendar-date {\n          color: get-color('secondary', false);\n\n          .md-picker-text--active {\n            color: get-color('background', false);\n          }\n        }\n      }\n\n      @if $include-time {\n        .md-clock-face {\n          background: if($light-theme, $md-grey-100, get-color('card', false));\n        }\n      }\n    }\n  }\n}\n\n/// Includes the base styles for pickers. This is styles that is used for both date and time pickers.\n/// This is normally used within the `react-md-pickers` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-pickers-base;\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.\n/// @param {Boolean} include-forceful-classes [$md-picker-include-forceful-classes] - Boolean if the\n///     `.md-picker--portrait` and `.md-picker--landscape` classes should be included.\n@mixin react-md-pickers-base($primary-color: $md-primary-color, $light-theme: $md-light-theme, $include-forceful-classes: $md-picker-include-forceful-classes) {\n  .md-picker-container {\n    position: relative;\n  }\n\n  .md-picker-content-container {\n    background: if($light-theme, get-color('card', true), get-color('background', false));\n  }\n\n  .md-picker--inline {\n    @include md-box-shadow(3);\n\n    position: absolute;\n    z-index: $md-picker-inline-z-index;\n  }\n\n  .md-picker--inline-icon {\n    left: $md-font-icon-size + $md-default-padding;\n  }\n\n  .md-picker-control {\n    @extend %md-text-left;\n\n    padding: 0;\n  }\n\n  .md-picker-text {\n    color: get-color('secondary', false);\n\n    &.md-picker-text > * {\n      color: inherit;\n    }\n\n    > * {\n      font-weight: inherit;\n      margin: 0;\n      transition-duration: $md-transition-time;\n      transition-property: color, font;\n    }\n  }\n\n  .md-picker-text--active {\n    color: get-color('text', false);\n    font-weight: $md-font-medium;\n  }\n\n  .md-dialog--picker {\n    @include md-ios-scroll-momentum;\n\n    max-height: calc(100% - #{$md-picker-mobile-margin});\n    max-width: calc(100% - #{$md-picker-mobile-margin});\n    overflow: auto;\n    width: auto;\n  }\n\n  .md-dialog-content--picker {\n    padding: 0;\n  }\n\n  .md-picker-header {\n    background: if($light-theme, $primary-color, get-color('card', false));\n    padding: $md-dialog-padding;\n  }\n\n  @if $include-forceful-classes {\n    @include react-md-pickers-force-orientation;\n  }\n}\n\n/// This includes the styles that force a certain orientation. These styles are usually not\n/// included by default because it is best to allow the device's orientation to determine\n/// the orientation of the picker.\n///\n/// You can either update the `$md-pickers-include-forceful-classes` variable before using\n/// the `react-md-everything` / `react-md-pickers` mixins, or manually use this mixin.\n///\n/// @example scss - Example Usage SCSS - Everything\n///   $md-pickers-include-forceful-classes: true;\n///   @include react-md-everything;\n///\n/// @example scss - Example Usage SCSS - Pickers\n///   $md-pickers-include-forceful-classes: true;\n///   @include react-md-pickers;\n///\n/// @example scss - Example Usage SCSS - Pickers Param\n///   @include react-md-pickers($md-primary-color, $md-light-theme, $md-media-included, $md-pickers-include-date, $md-pickers-include-time, true);\n///\n/// @example scss - Example Usage SCSS - Standalone\n///   @include react-md-pickers-force-orientation;\n///\n/// @see $md-picker-include-forceful-classes\n/// @see react-md-pickers\n/// @see react-md-everything\n@mixin react-md-pickers-force-orientation {\n  .md-picker.md-picker--portrait {\n    @include react-md-pickers-make-portrait;\n\n    display: block;\n\n    .md-picker-content {\n      width: $md-picker-portrait-width;\n    }\n\n    &.md-picker--time .md-picker-header {\n      padding-top: $md-dialog-padding;\n    }\n\n    .md-picker-header {\n      width: 100%;\n    }\n  }\n\n  .md-picker.md-picker--landscape {\n    @include react-md-pickers-make-landscape;\n\n    .md-picker-header {\n      height: auto;\n    }\n  }\n}\n\n/// Creates the styles for the date picker only.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-pickers-date;\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.\n@mixin react-md-pickers-date($primary-color: $md-primary-color, $light-theme: $md-light-theme) {\n  .md-picker--date {\n    .md-picker-control {\n      display: block;\n    }\n  }\n\n  .md-picker-content--calendar {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  .md-calendar-controls {\n    align-items: center;\n    display: flex;\n\n    .md-title {\n      flex-grow: 1;\n      font-size: 16px;\n      margin-bottom: 0;\n      text-align: center;\n    }\n  }\n\n  .md-calendar-date {\n    @extend %md-inline-block;\n    @extend %md-text-center;\n\n    @if not $light-theme {\n      color: get-color('secondary', false);\n\n      .md-picker-text--active {\n        color: get-color('background', false);\n      }\n    }\n\n    margin: 0;\n    width: calc(100% / 7);\n  }\n\n  .md-picker-content--year {\n    @include md-ios-scroll-momentum;\n\n    overflow-y: auto;\n  }\n\n  .md-years {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  .md-year {\n    font-size: $md-year-font-size;\n    padding: 12px;\n    transition-duration: $md-transition-time;\n    transition-property: color, font-size;\n\n    &:focus:not(.md-year--active) {\n      font-size: $md-year-focus-font-size;\n    }\n\n    &--active {\n      font-size: $md-year-active-font-size;\n      font-weight: $md-font-medium;\n    }\n  }\n\n  .md-calendar-date--btn {\n\n    &::after {\n      background: $primary-color;\n      border-radius: 50%;\n      content: '';\n      display: block;\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translateX(-50%) translateY(-50%) scale(0);\n      transition-duration: $md-transition-time;\n      transition-property: transform;\n      z-index: 0;\n    }\n  }\n\n  .md-calendar-date--btn-active {\n    font-weight: $md-font-bold;\n\n    &::after {\n      transform: translateX(-50%) translateY(-50%) scale(1);\n    }\n  }\n\n  .md-calendar-date--date {\n    position: relative;\n    z-index: 1;\n  }\n\n  .md-calendar-dow {\n    font-size: $md-calendar-date-font-size;\n    font-weight: $md-font-bold;\n    line-height: $md-line-height;\n  }\n}\n\n\n/// Creates the styles for the time picker only.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-pickers-date;\n///\n/// @param {Color} primary-color [$md-primary-color] - The primary color to style with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if styling with the light theme.\n@mixin react-md-pickers-time($primary-color: $md-primary-color, $light-theme: $md-light-theme) {\n  .md-picker-content--clock {\n    padding: $md-dialog-padding;\n    padding-bottom: $md-dialog-padding / 2;\n  }\n\n  .md-time-periods .md-picker-control {\n    display: block;\n  }\n\n  .md-time-period {\n    font-size: 16em / $md-font-size-base;\n    font-weight: $md-font-medium;\n    margin: 0;\n    padding: 0;\n  }\n\n  .md-clock-face {\n    background: if($light-theme, $md-grey-100, get-color('card', false));\n    border-radius: 50%;\n    position: relative;\n  }\n\n  .md-clock-hand {\n    height: 2px;\n    position: absolute;\n    transform-origin: 0 0;\n    transition-duration: $md-transition-time;\n    transition-property: width;\n    z-index: 1;\n\n    &--active {\n      transition-property: transform, width;\n    }\n\n    &::before,\n    &::after {\n      background: $primary-color;\n      border-radius: 50%;\n      content: '';\n      position: absolute;\n    }\n\n    &::before {\n      height: $md-clock-hand-ball-size;\n      left: -$md-clock-hand-ball-size / 2;\n      // no idea why\n      top: -2px;\n      width: $md-clock-hand-ball-size;\n    }\n\n    &::after {\n      height: $md-clock-time-size;\n      right: -$md-clock-time-size / 2 + $md-clock-padding / 2;\n      top: -$md-clock-time-size / 2;\n      transition-duration: $md-transition-time;\n      transition-property: background, border, transform;\n      width: $md-clock-time-size;\n    }\n\n    &--minute-hover::after {\n      transform: scale($md-clock-hand-ball-scale);\n    }\n  }\n\n  .md-clock-time {\n    align-items: center;\n    display: flex;\n    height: $md-clock-time-size;\n    justify-content: center;\n    position: absolute;\n    width: $md-clock-time-size;\n    z-index: 8;\n\n    &:focus {\n      outline-style: none;\n    }\n  }\n\n  .md-clock-time-value {\n    @extend %md-font-medium;\n  }\n}\n\n/// Includes the media queries for pickers only if `$include-date` or `$include-time` are true.\n/// This is normally used just within the `react-md-pickers` mixin.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-pickers-media;\n///\n/// @see react-md-pickers\n/// @group pickers, media-queries\n@mixin react-md-pickers-media($include-date: $md-picker-include-date, $include-time: $md-picker-include-time, $mobile-max-size: $md-picker-mobile-max-size) {\n  @if $include-date or $include-time {\n    @media (orientation: portrait) {\n      .md-picker {\n        @include react-md-pickers-make-portrait($include-date, $include-time);\n      }\n    }\n\n    @media (orientation: landscape) {\n      .md-picker {\n        @include react-md-pickers-make-landscape($include-date, $include-time);\n      }\n    }\n\n    @if $mobile-max-size {\n      @media (max-width: $mobile-max-size) and (orientation: portrait) {\n        .md-picker {\n          width: $mobile-max-size - $md-picker-mobile-margin;\n        }\n      }\n\n      @media (max-height: $mobile-max-size) and (orientation: landscape) {\n        $md-dialog-footer-height-mobile: 64px;\n\n        .md-picker {\n          .md-picker-content {\n            height: $mobile-max-size - $md-dialog-footer-height-mobile;\n            width: calc(100vw - #{$md-picker-landscape-header-width + $md-picker-mobile-margin});\n          }\n        }\n      }\n    }\n  }\n}\n\n/// Includes the styles for a picker to be displayed in a portrait display.\n///\n/// @example scss - Example Usage SCSS\n///   @media (orientation: portrait) {\n///     .md-picker {\n///       @include react-md-pickers-make-portrait;\n///     }\n///   }\n/// @param {Boolean} include-date [$md-picker-include-date] - Boolean if the date picker styles should be included.\n/// @param {Boolean} include-time [$md-picker-include-time] - Boolean if the time picker styles should be included.\n@mixin react-md-pickers-make-portrait($include-date: $md-picker-include-date, $include-time: $md-picker-include-time) {\n  width: $md-picker-portrait-width;\n\n  .md-picker-header {\n    height: $md-picker-portrait-header-height;\n  }\n\n  .md-time-periods {\n    display: inline-block;\n    padding-left: 1em;\n    padding-right: $md-dialog-padding;\n  }\n\n  .md-picker-content {\n    height: $md-picker-portrait-content-height;\n  }\n\n  .md-display-3 {\n    font-size: 5em;\n    line-height: 1;\n  }\n\n  .md-calendar-dows {\n    padding-bottom: $md-dialog-padding / 2;\n  }\n\n  @if $include-date {\n    &.md-picker--date {\n      .md-display-1 {\n        display: inline-block;\n      }\n    }\n\n    .md-calendar-date--btn {\n      height: $md-date-picker-portrait-date-size;\n\n      &::after {\n        height: $md-date-picker-portrait-ball-size;\n        width: $md-date-picker-portrait-ball-size;\n      }\n    }\n  }\n\n  @if $include-time {\n    .md-clock-face {\n      height: $md-clock-portrait-size;\n      width: $md-clock-portrait-size;\n    }\n\n    .md-clock-hand {\n      width: ($md-clock-portrait-size - $md-clock-padding - $md-clock-time-size) / 2;\n\n      &--inner {\n        width: ($md-clock-portrait-size - $md-clock-padding - $md-clock-time-size * 3) / 2;\n      }\n    }\n  }\n}\n\n\n/// Includes the styles for a picker to be displayed in a landscape display.\n///\n/// @example scss - Example Usage SCSS\n///   @media (orientation: landscape) {\n///     .md-picker {\n///       @include react-md-pickers-make-portrait;\n///     }\n///   }\n/// @param {Boolean} include-date [$md-picker-include-date] - Boolean if the date picker styles should be included.\n/// @param {Boolean} include-time [$md-picker-include-time] - Boolean if the time picker styles should be included.\n@mixin react-md-pickers-make-landscape($include-date: $md-picker-include-date, $include-time: $md-picker-include-time) {\n  display: flex;\n  width: $md-picker-landscape-width;\n\n  .md-picker-header {\n    width: $md-picker-landscape-header-width;\n  }\n\n  .md-picker-content {\n    height: $md-picker-landscape-content-height;\n    width: $md-picker-landscape-width - $md-picker-landscape-header-width;\n  }\n\n  @if $include-date {\n    .md-calendar-date--btn {\n      height: $md-date-picker-landscape-date-size;\n\n      &::after {\n        height: $md-date-picker-landscape-ball-size;\n        width: $md-date-picker-landscape-ball-size;\n      }\n    }\n  }\n\n  @if $include-time {\n    &.md-picker--time .md-picker-header {\n      padding-top: $md-picker-landscape-content-height / 3;\n    }\n\n    .md-clock-face {\n      height: $md-clock-landscape-size;\n      width: $md-clock-landscape-size;\n    }\n\n    .md-clock-hand {\n      width: ($md-clock-landscape-size - $md-clock-padding - $md-clock-time-size) / 2;\n\n      &--inner {\n        width: ($md-clock-landscape-size - $md-clock-padding - $md-clock-time-size * 3) / 2;\n      }\n    }\n\n    .md-time-periods {\n      margin-left: auto;\n      margin-right: 2.5em;\n      width: 35px;\n    }\n\n    .md-display-3 {\n      font-size: 3.25em;\n    }\n  }\n}\n","////\n/// @group progress\n////\n\n/// Boolean if the circular progress bars should be included.\n/// @type Boolean\n$md-progress-include-circular: true !default;\n\n/// Boolean if the linear progress bars should be included.\n/// @type Boolean\n$md-progress-include-linear: true !default;\n\n/// The top and bottom margin to apply to the circular and linear progress.\n/// @type Number\n$md-progress-margin: 1em !default;\n\n/// The duration for one cycle of the circular progress animation.\n/// @type Number\n$md-progress-duration: 2.4s !default;\n\n/// The initial stroke-dasharray for the indeterminate progress.\n/// I have no idea how this stuff works.. So change have fun changing that.\n///\n/// @type Number\n$md-circular-progress-stroke-dasharray: 187px !default;\n\n/// The linear progress's bar height.\n/// @type Number\n$md-linear-progress-height: 3px !default;\n\n/// The amount of time the animation should delay for linear progress bars.\n/// @type Number\n$md-linear-progress-delay: 1.15s !default;\n\n/// The default swatch to use for the default linear progress bar background.\n/// This should be either: 100, 200, 400, or 700.\n/// @type Number\n$md-linear-progress-swatch: 100 !default;\n\n/// An optional fallback color to use for the linear progress's background. This is only\n/// required when the `$md-secondary-color` is not a valid material design color.\n/// @type Color\n/// @see get-swatch\n/// @group progress, themes\n$md-linear-progress-fallback-color: null !default;\n\n\n\n/// Includes the styles for progress bars if either `$include-circular` and/or `$include-linear`\n/// are `true`.\n///\n/// Progress bars are always styled with the `secondary-color`. When using a `linear` progress bar,\n/// the default background will be a swatch that is lighter than the `secondary-color`.\n///\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme progress\n///     bars with.\n/// @param {Number} linear-swatch [$md-linear-progress-swatch] - The swatch number to use for\n///     a linear progress bar's default background. This should be either 100, 200, 400, or 700.\n/// @param {Boolean} include-circular [$md-progress-include-circular] - Boolean if the circular\n///     progress styles should be included.\n/// @param {Boolean} include-linear [$md-progress-include-linear] - Boolean if the linear\n///     progress styles should be included.\n@mixin react-md-progress($secondary-color: $md-secondary-color, $linear-swatch: $md-linear-progress-swatch, $include-circular: $md-progress-include-circular, $include-linear: $md-progress-include-linear) {\n  @if $include-circular or $include-linear {\n    .md-progress {\n      display: block;\n      margin-bottom: $md-progress-margin;\n      margin-top: $md-progress-margin;\n    }\n  }\n\n  @if $include-circular {\n    @include react-md-progress-circular($secondary-color);\n  }\n\n  @if $include-linear {\n    @include react-md-progress-linear($secondary-color);\n  }\n}\n\n/// Creates the styles for a circular progress bar.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-progress-circular;\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme with.\n@mixin react-md-progress-circular($secondary-color: $md-secondary-color) {\n  .md-progress--circular-determinate {\n    transition-duration: $md-transition-time;\n    transition-property: transform;\n  }\n\n  .md-progress--circular-indeterminate {\n    animation-duration: $md-progress-duration;\n    animation-iteration-count: infinite;\n    animation-name: md-circular-progress;\n    animation-timing-function: linear;\n  }\n\n  .md-circular-progress-path {\n    fill: none;\n    stroke: $secondary-color;\n    stroke-dasharray: $md-circular-progress-stroke-dasharray;\n  }\n\n  .md-circular-progress-path--animated {\n    animation-duration: $md-progress-duration;\n    animation-iteration-count: infinite;\n    animation-name: md-circular-progress-dash;\n    animation-timing-function: ease-ine-out;\n    stroke-dashoffset: 0;\n  }\n\n  @keyframes md-circular-progress {\n    0% { transform: rotate(0deg); }\n\n    50% { transform: rotate(135deg); }\n\n    75% { transform: rotate(450deg); }\n\n    100% { transform: rotate(720deg); }\n  }\n\n  @keyframes md-circular-progress-dash {\n    0% {\n      stroke-dashoffset: $md-circular-progress-stroke-dasharray;\n    }\n\n    50% {\n      stroke-dashoffset: $md-circular-progress-stroke-dasharray / 4;\n    }\n\n    100% {\n      stroke-dashoffset: $md-circular-progress-stroke-dasharray;\n    }\n  }\n}\n\n/// Creates the styles for a linear progress bar.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-progress-linear;\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme with.\n/// @param {Number} swatch [$md-linear-progress-swatch] - The swatch to use for the unmoving\n///     background.\n/// @param {Color} fallback-color [$md-linear-progress] - An optional fallback color to use when the secondary color\n///     is not a valid material design color.\n@mixin react-md-progress-linear($secondary-color: $md-secondary-color, $swatch: $md-linear-progress-swatch, $fallback-color: $md-linear-progress-fallback-color) {\n  .md-progress--linear {\n    background: get-swatch($secondary-color, $swatch, true, $fallback-color, md-linear-progress-fallback-color);\n    height: $md-linear-progress-height;\n    overflow: hidden;\n    position: relative;\n    width: 100%;\n  }\n\n  .md-progress--linear-active {\n    background: $secondary-color;\n  }\n\n  .md-progress--linear-determinate {\n    height: 100%;\n    position: absolute;\n    z-index: 1;\n  }\n\n  .md-progress--linear-indeterminate {\n    &::before,\n    &::after {\n      background: inherit;\n      bottom: 0;\n      content: '';\n      position: absolute;\n      top: 0;\n      will-change: left, right;\n      z-index: 1;\n    }\n\n    &::before {\n      animation-duration: $md-progress-duration;\n      animation-iteration-count: infinite;\n      animation-name: md-linear-indeterminate;\n      animation-timing-function: $md-transition-standard;\n    }\n\n    &::after {\n      animation-delay: $md-linear-progress-delay;\n      animation-duration: $md-progress-duration;\n      animation-iteration-count: infinite;\n      animation-name: md-linear-indeterminate-short;\n      animation-timing-function: $md-transition-acceleration;\n    }\n  }\n\n  .md-progress--linear-query {\n    &::before,\n    &::after {\n      animation-direction: reverse;\n    }\n  }\n\n\n  @keyframes md-linear-indeterminate {\n    0% {\n      left: -35%;\n      right: 100%;\n    }\n\n    60% {\n      left: 100%;\n      right: -90%;\n    }\n\n    100% {\n      left: 100%;\n      right: -90%;\n    }\n  }\n\n  @keyframes md-linear-indeterminate-short {\n    0% {\n      left: -200%;\n      right: 100%;\n    }\n\n    60% {\n      left: 107%;\n      right: -8%;\n    }\n\n    100% {\n      left: 107%;\n      right: -8%;\n    }\n  }\n}\n\n/// Updates the theme for progress bars.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-progress($md-deep-orange-a-700, 200);\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme progress\n///     bars with.\n/// @param {Number} linear-swatch [$md-linear-progress-swatch] - The swatch number to use for\n///     a linear progress bar's default background. This should be either 100, 200, 400, or 700.\n/// @param {Boolean} include-circular [$md-progress-include-circular] - Boolean if the circular\n///     progress styles should be included.\n/// @param {Boolean} include-linear [$md-progress-include-linear] - Boolean if the linear\n///     progress styles should be included.\n/// @param {Color} fallback-color [$md-linear-progress] - An optional fallback color to use when the secondary color\n///     is not a valid material design color.\n/// @group progress, themes\n@mixin react-md-theme-progress($secondary-color: $md-secondary-color, $linear-swatch: $md-linear-progress-swatch, $include-circular: $md-progress-include-circular, $include-linear: $md-progress-include-linear, $fallback-color: $md-linear-progress-fallback-color) {\n  @if $include-circular {\n    @include react-md-theme-progress-circular($secondary-color);\n  }\n\n  @if $include-linear {\n    @include react-md-theme-progress-linear($secondary-color, $linear-swatch, $fallback-color);\n  }\n}\n\n/// Themes the circular progress bars only when the `$secondary-color` does not equal\n/// the `$md-secondary-color`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-progress-circular($md-orange-a-700);\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme progress\n///     bars with.\n/// @group progress, themes\n@mixin react-md-theme-progress-circular($secondary-color: $md-secondary-color) {\n  @if $secondary-color != $md-secondary-color {\n    .md-circular-progress-path {\n      stroke: $secondary-color;\n    }\n  }\n}\n\n/// Themes only the linear progress bars when the `$secondary-color` does not equal\n/// the `$md-secondary-color` OR the `$swatch` does not equal the `$md-linear-progress-swatch`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-progress-linear($md-orange-a-700, 200);\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme progress\n///     bars with.\n/// @param {Number} swatch [$md-linear-progress-swatch] - The swatch number to use for\n///     a linear progress bar's default background. This should be either 100, 200, 400, or 700.\n/// @param {Color} fallback-color [$md-linear-progress] - An optional fallback color to use when the secondary color\n///     is not a valid material design color.\n/// @group progress, themes\n@mixin react-md-theme-progress-linear($secondary-color: $md-secondary-color, $swatch: $md-linear-progress-swatch, $fallback-color: $md-linear-progress-fallback-color) {\n  @if $secondary-color != $md-secondary-color {\n    .md-progress--linear-active {\n      background: $secondary-color;\n    }\n  }\n\n  @if $secondary-color != $md-secondary-color or $swatch != $md-linear-progress-swatch or $md-linear-progress-fallback-color != $fallback-color {\n    .md-progress--linear {\n      background: get-swatch($secondary-color, $swatch, true, $fallback-color, md-linear-progress-fallback-color);\n    }\n  }\n}\n","////\n/// @group selection-controls\n////\n\n@import 'buttons';\n@import 'text-fields';\n\n\n/// Boolean if the very minimal styles for the `.md-select-field-group` should be included.\n/// @type Boolean\n$md-selection-controls-include-group: true !default;\n\n/// Boolean if the switch styles should be included.\n/// @type Boolean\n$md-selection-controls-include-switches: true !default;\n\n/// The height for the switch's track.\n/// @type Number\n$md-switch-track-height: 16px !default;\n\n/// The width for the switch's track.\n/// @type Number\n$md-switch-track-width: 40px !default;\n\n/// The size for the switch's thumb.\n/// @type Number\n$md-switch-thumb-size: $md-font-icon-size !default;\n\n\n\n/// The height for the switch\n/// @type Number\n/// @access private\n$md-switch-height: $md-height !default;\n\n/// The radius for the switch's track\n/// @type Number\n/// @access private\n$md-switch-track-radius: $md-switch-track-height / 2 !default;\n\n/// The distance that the switch's thumb should be offset from the left or\n/// right of the switch's track.\n/// @type Number\n/// @access private\n$md-switch-thumb-offset: $md-switch-track-height / 4 !default;\n\n/// The switch's thumb's background color when it has been toggled off in the light theme.\n/// @type Color\n$md-switch-light-theme-thumb-off: $md-grey-50 !default;\n\n/// The switch's track's background color when it has been toggled off in the light theme.\n/// @type Color\n$md-switch-light-theme-track-off: rgba($md-black-base, .38) !default;\n\n/// The switch's thumb's background color when it is disabled in the light theme.\n/// @type Color\n$md-switch-light-theme-thumb-disabled: $md-grey-400 !default;\n\n/// The switch's track's background color when it is disabled in the light theme.\n/// @type Color\n$md-switch-light-theme-track-disabled: rgba($md-black-base, .12) !default;\n\n/// The switch's thumb's background color when it has been toggled off in the light theme.\n/// @type Color\n$md-switch-dark-theme-thumb-off: $md-grey-400 !default;\n\n/// The switch's track's background color when it has been toggled off in the light theme.\n/// @type Color\n$md-switch-dark-theme-track-off: rgba($md-white-base, .30) !default;\n\n/// The switch's thumb's background color when it is disabled in the light theme.\n/// @type Color\n$md-switch-dark-theme-thumb-disabled: $md-grey-800 !default;\n\n/// The switch's track's background color when it is disabled in the light theme.\n/// @type Color\n$md-switch-dark-theme-track-disabled: rgba($md-white-base, .1) !default;\n\n/// An optional fallback color to use for the switch's ball when the `$md-secondary-color` is not\n/// a material design color.\n/// @type Color\n/// @see get-swatch\n/// @group selection-controls, themes\n$md-switch-ball-fallback-color: null !default;\n\n/// Includes the styles for the Selection Controls.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-selection-controls;\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to use\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the selection controls should be\n///     styled using the light theme.\n/// @param {Boolean} include-group [$md-selection-controls-include-group] - Boolean if the minimal\n///     styles for the `.md-selection-controls-group` should be included.\n/// @param {Boolean} include-switches [$md-selection-controls-include-switches] - Boolean if the\n///     styles for switches should be included.\n/// @param {boolean} include-dense-icons [$md-font-icon-include-dense] - boolean if the checkbox and radio\n///     controls should be updated for the dense icon spec.\n@mixin react-md-selection-controls(\n  $secondary-color: $md-secondary-color,\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-group: $md-selection-controls-include-group,\n  $include-switches: $md-selection-controls-include-switches,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n\n  .md-selection-control-container--inline {\n    display: inline-block;\n  }\n\n  .md-selection-control-input {\n    height: 0;\n    position: absolute;\n    visibility: hidden;\n    width: 0;\n  }\n\n  .md-selection-control-label {\n    align-items: center;\n    display: inline-flex;\n  }\n\n  @if $include-group {\n    .md-selection-control-group {\n      border: 0;\n    }\n  }\n\n  @if $include-switches {\n    @include react-md-selection-controls-switch($secondary-color, $light-theme);\n  }\n\n  @if $include-media {\n    @include react-md-selection-controls-media($include-dense-icons);\n  }\n}\n\n/// Includes the styles for the Selection Controls' switch only. The `$secondary-color` will\n/// automatically be switched to the `-500` swatch in light themes and the `-200` swatch\n/// in dark themes.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-selection-controls-switch;\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to use to theme\n///     the switches with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the switch should be styled for the\n///     light theme.\n/// @param {Color} fallback-color [$md-switch-ball-fallback-color] - The fallback color to use for the\n///     switch's ball when the `$md-secondary-color` is not a material design color.\n@mixin react-md-selection-controls-switch($secondary-color: $md-secondary-color, $light-theme: $md-light-theme, $fallback-color: $md-switch-ball-fallback-color) {\n  $swatch: get-swatch($secondary-color, if($light-theme, 500, 200), false, $fallback-color, md-switch-ball-fallback-color);\n\n  .md-switch-container {\n    align-items: center;\n    display: flex;\n    height: $md-switch-height;\n\n    &.md-selection-control-container--inline {\n      display: inline-flex;\n    }\n  }\n\n  .md-switch-track {\n    border-radius: $md-switch-track-radius;\n    flex-shrink: 0;\n    height: $md-switch-track-height;\n    margin-left: 12px;\n    margin-right: 12px;\n    position: relative;\n    width: $md-switch-track-width;\n  }\n\n  .md-switch-track--on {\n    background: rgba($swatch, .5);\n  }\n\n  .md-switch-track--off {\n    background: if($light-theme, $md-switch-light-theme-track-off, $md-switch-dark-theme-track-off);\n  }\n\n  .md-switch-track--disabled {\n    background: if($light-theme, $md-switch-light-theme-track-disabled, $md-switch-dark-theme-track-disabled);\n  }\n\n  .md-switch-thumb {\n    @include md-box-shadow(1);\n\n    border-radius: 50%;\n    content: '';\n    display: block;\n    height: $md-switch-thumb-size;\n    position: absolute;\n    transition-duration: $md-transition-time;\n    transition-property: background, transform;\n    width: $md-switch-thumb-size;\n  }\n\n  .md-switch-thumb--on {\n    background: $swatch;\n    transform: translate3d(#{$md-switch-track-width - $md-switch-thumb-size + $md-switch-thumb-offset}, -$md-switch-thumb-offset, 0);\n  }\n\n  .md-switch-thumb--off {\n    background: if($light-theme, $md-switch-light-theme-thumb-off, $md-switch-dark-theme-thumb-off);\n    transform: translate3d(-$md-switch-thumb-offset, -$md-switch-thumb-offset, 0);\n  }\n\n  .md-switch-thumb--disabled {\n    background: if($light-theme, $md-switch-light-theme-thumb-disabled, $md-switch-dark-theme-thumb-disabled);\n  }\n}\n\n/// Themes the selection controls with the new theme variables. It really only modifies the\n/// `switch` styles, so if `$include-switches` param is false, it does nothing.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-selection-control($md-blue-a-200, true);\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if updating the theme type to light.\n/// @param {Boolean} include-switches [$md-selection-controls-include-switches] - Boolean if the switches\n///     should be included.\n/// @param {Color} fallback-color [$md-switch-ball-fallback-color] - The fallback color to use for the\n///     switch's ball when the `$md-secondary-color` is not a material design color.\n/// @group selection-controls, themes\n@mixin react-md-theme-selection-controls($secondary-color: $md-secondary-color, $light-theme: $md-light-theme, $include-switches: $md-selection-controls-include-switches, $fallback-color: $md-switch-ball-fallback-color) {\n  @if $include-switches {\n    @include react-md-theme-selection-controls-switch($secondary-color, $light-theme, $fallback-color);\n  }\n}\n\n/// Updates the styles for switches ONLY if\n/// - the `$secondary-color` does not equal the `$md-secondary-color`\n/// - the `$light-theme` does not equal the `$md-light-theme`\n///\n/// The `$secondary-color` will automatically be updated to be a swatch of `-500` for light themes\n/// and a swatch of `-200` for dark themes.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-selection-controls-switch($md-blue-a-200, true);\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary color to theme with.\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if updating the theme type to light.\n/// @param {Color} fallback-color [$md-switch-ball-fallback-color] - The fallback color to use for the\n///     switch's ball when the `$md-secondary-color` is not a material design color.\n/// @group selection-controls, themes\n@mixin react-md-theme-selection-controls-switch($secondary-color: $md-secondary-color, $light-theme: $md-light-theme, $fallback-color: $md-switch-ball-fallback-color) {\n  @if $secondary-color != $md-secondary-color or $fallback-color != $md-switch-ball-fallback-color {\n    $swatch: get-swatch($secondary-color, if($light-theme, 500, 200), false, $fallback-color, md-switch-ball-fallback-color);\n\n    .md-switch-track--on {\n      background: rgba($swatch, .5);\n    }\n\n    .md-switch-thumb--on {\n      background: $swatch;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    .md-switch-track--off {\n      background: if($light-theme, $md-switch-light-theme-track-off, $md-switch-dark-theme-track-off);\n    }\n\n    .md-switch-track--disabled {\n      background: if($light-theme, $md-switch-light-theme-track-disabled, $md-switch-dark-theme-track-disabled);\n    }\n\n    .md-switch-thumb--off {\n      background: if($light-theme, $md-switch-light-theme-thumb-off, $md-switch-dark-theme-thumb-off);\n    }\n\n    .md-switch-thumb--disabled {\n      background: if($light-theme, $md-switch-light-theme-thumb-disabled, $md-switch-dark-theme-thumb-disabled);\n    }\n  }\n}\n\n/// Creates the styles for selection controls on mobile devices.\n/// @group selection-controls, media-queries\n@mixin react-md-selection-controls-mobile {\n  .md-selection-control-label {\n    font-size: $md-text-field-mobile-font-size;\n  }\n}\n\n/// Creates the styles for selection controls on desktop displays.\n///\n/// @param {boolean} include-dense-icons [$md-font-icon-include-dense] - boolean if the checkbox and radio\n///     controls should be updated for the dense icon spec.\n/// @group selection-controls, media-queries\n@mixin react-md-selection-controls-desktop($include-dense-icons: $md-font-icon-include-dense) {\n  .md-selection-control-label {\n    font-size: $md-text-field-desktop-font-size;\n  }\n\n  @if $include-dense-icons {\n    .md-selection-control-container {\n      height: $md-btn-icon-dense-size;\n    }\n  }\n}\n\n/// Creates the media queries for selection controls for mobile and desktop.\n///\n/// @param {boolean} include-dense-icons [$md-font-icon-include-dense] - boolean if the checkbox and radio\n///     controls should be updated for the dense icon spec.\n/// @group selection-controls, media-queries\n@mixin react-md-selection-controls-media($include-dense-icons: $md-font-icon-include-dense) {\n  @media #{$md-mobile-media} {\n    @include react-md-selection-controls-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-selection-controls-desktop($include-dense-icons);\n  }\n}\n","////\n/// @group sliders\n////\n\n\n/// Boolean if the styles for discrete sliders should be included.\n/// @type Boolean\n$md-slider-include-discrete: true !default;\n\n/// Boolean if an editable slider's style should be included.\n/// @type Boolean\n$md-slider-include-editor: true !default;\n\n/// Boolean if the styles for displaying indicators and icons with a slider\n/// should be included\n/// @type Boolean\n$md-slider-include-indicators: true !default;\n\n/// The Side of the Thumb for the Slider.\n/// @type Number\n/// @access private\n$md-slider-thumb-size: 14px !default;\n\n/// The default height for the Slider's container.\n/// @type Number\n$md-slider-height: $md-height !default;\n\n/// The default height for the Slider's track.\n/// @type Number\n/// @access private\n$md-slider-track-height: 2px !default;\n\n/// The z-index for the Slider's thumb.\n/// @type Number\n$md-slider-thumb-z-index: 5 !default;\n\n/// The scale to use when the slider is active. This will be applied\n/// to the `scale` transform on the thumb.\n/// @type Number\n$md-slider-thumb-active-scale: 1.5 !default;\n\n/// The scale to use when the slider is disabled. This will be applied\n/// to the `scale` transform on the thumb.\n/// @type Number\n$md-slider-thumb-disabled-scale: .75 !default;\n\n\n/// The height for a Discrete Slider's tick.\n/// @type Number\n$md-slider-discrete-tick-height: $md-slider-track-height !default;\n\n\n/// The transition time to use for the Discrete Slider's ink appearance\n/// when the user focuses with the keyboard.\n/// @type Number\n$md-slider-discrete-ink-transition-time: $md-transition-time * 2 !default;\n\n/// The opacity to use for the Slider's thumb ink. This will appear when the user\n/// focuses with the keyboard or touches the slider on a mobile device.\n///\n/// This opacity will be applied to the `$primary-color`.\n/// @type Number\n$md-slider-mask-ink-opacity: .15 !default;\n\n/// The opacity to use for the discrete Slider's thumb ink. This will appear when the user\n/// focuses with the keyboard.\n///\n/// This opacity will be applied to the `$primary-color`.\n/// @type Number\n$md-slider-discrete-mask-ink-opacity: .3 !default;\n\n/// The off color to use for the Slider when using the light theme.\n/// @type Color\n$md-slider-light-theme-off-color: rgba($md-black-base, .26) !default;\n\n/// The off color to use for the Slider when using the dark theme.\n/// @type Color\n$md-slider-dark-theme-off-color: rgba($md-white-base, .3) !default;\n\n/// Boolean if the sliders should warn when not using a correct swatch. This warning will\n/// only occur when using the dark theme and the primary color does not have a -200 suffix.\n/// APPARENTLY this is a requirement for Material Design. Feel free to disable this warning.\n/// @type Boolean\n/// @see validate-slider-primary-color\n$md-slider-warn-md: true !default;\n\n\n/// This includes the react-md Sliders Component scss.\n///\n/// @param {Color} $primary-color [$md-primary-color] - The primary color to use for the\n///     slider. This will be the non-disabled track's fill color and the non-disabled thumb's\n///     color. If you are using the `dark-theme`, This value should be the primary color with\n///     a `-200` suffix.\n/// @param {Boolean} $light-theme [$md-light-theme] - A boolean if the application using the\n///     light theme.\n/// @param {Boolean} $include-media [$md-media-included] - Boolean if the media queries should be included.\n/// @param {Boolean} $include-discrete [$md-slider-include-discrete] - A boolean if the discrete slider's scss should be included.\n/// @param {Boolean} $include-editor [$md-slider-include-editor] - A boolean if the editable slider's scss should be included.\n/// @param {Boolean} $include-indicators [$md-slider-include-indicators] - A boolean if the small scss for displaying indicators/icons\n///     with the slider should be included.\n@mixin react-md-sliders(\n  $primary-color: $md-primary-color,\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-discrete: $md-slider-include-discrete,\n  $include-editor: $md-slider-include-editor,\n  $include-indicators: $md-slider-include-indicators\n) {\n  @if $md-colors-warn-md and $md-slider-warn-md {\n    $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n  }\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n  $md-slider-mask-ink-color: rgba($primary-color, $md-slider-mask-ink-opacity);\n\n  .md-slider-container {\n    display: flex;\n    flex-wrap: wrap;\n    text-align: left;\n  }\n\n  .md-slider-label {\n    display: block;\n    width: 100%;\n  }\n\n  .md-slider-input {\n    height: 0;\n    position: absolute;\n    visibility: hidden;\n    width: 0;\n  }\n\n  .md-slider-track {\n    $center: ($md-slider-height / 2) - ($md-slider-track-height / 2);\n    background: $md-slider-off-color;\n    content: '';\n    display: block;\n    flex-grow: 1;\n    flex-shrink: 0;\n    height: $md-slider-track-height;\n    margin-bottom: $center;\n    margin-top: $center;\n    position: relative;\n  }\n\n  .md-slider-track-fill {\n    background: $md-slider-on-color;\n    border: 0;\n    height: $md-slider-track-height;\n    left: 0;\n    margin: 0;\n    position: absolute;\n    top: 0;\n    transition-duration: $md-transition-time;\n    transition-property: width;\n  }\n\n  .md-slider-track-fill--dragging {\n    transition-property: none;\n  }\n\n  .md-slider-thumb {\n    border-radius: 50%;\n    content: '';\n    display: inline-block;\n    height: $md-slider-thumb-size;\n    position: absolute;\n    top: -(($md-slider-thumb-size / 2) - ($md-slider-track-height / 2));\n    transition-duration: $md-transition-time;\n    transition-property: left, transform, background;\n    width: $md-slider-thumb-size;\n    z-index: $md-slider-thumb-z-index;\n\n    &:focus {\n      outline-style: none;\n    }\n  }\n\n  .md-slider-thumb--on {\n    background: $md-slider-on-color;\n  }\n\n  .md-slider-thumb--active {\n    transform: scale($md-slider-thumb-active-scale);\n    transform-origin: center;\n  }\n\n  .md-slider-thumb--dragging {\n    transition-property: transform, background;\n  }\n\n  .md-slider-thumb--disabled {\n    background: $md-slider-off-color;\n    transform: scale($md-slider-thumb-disabled-scale);\n  }\n\n  .md-slider-thumb--continuous-off {\n    background: $bg-color;\n    border: 2px solid;\n    border-color: $md-slider-off-color;\n    position: relative;\n  }\n\n  .md-slider-thumb--mask {\n    transform: scale(1);\n  }\n\n  .md-slider-thumb--mask-inked {\n    background: $md-slider-mask-ink-color;\n    transform: scale(3.5);\n    z-index: $md-slider-thumb-z-index - 1;\n  }\n\n  .md-slider-thumb--mask-disabled {\n    background: $bg-color;\n    border-radius: 0;\n    transform: scale(1.1);\n    z-index: $md-slider-thumb-z-index - 1;\n  }\n\n  @if $include-discrete {\n    @include react-md-discrete-slider($primary-color, $light-theme);\n  }\n\n  @if $include-editor {\n    @include react-md-editable-slider;\n  }\n\n  @if $include-indicators {\n    @include react-md-slider-indicators($include-media);\n  }\n}\n\n/// This will include the styles for a discrete Slider.\n///\n/// @param {Color} $primary-color [$md-primary-color] - The primary color to style the Slider with.\n/// @param {Boolean} $light-theme [$md-light-theme] - A boolean if the slider should be styled for\n///     the light or dark theme.\n@mixin react-md-discrete-slider($primary-color: $md-primary-color, $light-theme: $md-light-theme) {\n  @if $md-colors-warn-md and $md-slider-warn-md {\n    $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n  }\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n  $md-slider-discrete-mask-ink-color: rgba($primary-color, $md-slider-discrete-mask-ink-opacity);\n\n  .md-slider-thumb--discrete {\n    &::after {\n      border-left: 7px solid transparent;\n      border-right: 7px solid transparent;\n      border-top: 7px solid transparent;\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n      content: '';\n      height: 0;\n      left: 0;\n      position: absolute;\n      top: 10px;\n      transition-duration: $md-transition-time;\n      transition-property: border-top-color, transform;\n      width: 0;\n    }\n\n    &-active {\n      top: 0;\n      transform: scale(2) translate3d(0, -18px, 0);\n    }\n\n    &-on::after {\n      border-top-color: $md-slider-on-color;\n    }\n\n    &-off {\n      background: if($light-theme, $md-black-base, $md-white-base);\n    }\n\n    &-active-off {\n      background: $md-grey-400;\n\n      &::after {\n        border-top-color: $md-grey-400;\n      }\n    }\n\n    &-mask-inked {\n      transform: scale(2.5);\n      transition-duration: $md-slider-discrete-ink-transition-time;\n    }\n\n    &-mask-leaving {\n      background: $md-slider-discrete-mask-ink-color;\n      transition-duration: $md-slider-discrete-ink-transition-time;\n      z-index: $md-slider-thumb-z-index - 1;\n    }\n  }\n\n  .md-slider-discrete-value {\n    align-items: center;\n    color: $md-white-base;\n    display: flex;\n    font-size: 12px;\n    height: $md-slider-thumb-size * 2;\n    justify-content: center;\n    position: absolute;\n    text-align: center;\n    transform: translate3d(-7px, -43px, 0);\n    transition-duration: $md-transition-time;\n    transition-property: left;\n    width: $md-slider-thumb-size * 2;\n    z-index: $md-slider-thumb-z-index + 1;\n  }\n\n  .md-slider-discrete-tick {\n    background: if($light-theme, $md-black-base, $md-white-base);\n    content: '';\n    height: $md-slider-discrete-tick-height;\n    position: absolute;\n    top: -(($md-slider-discrete-tick-height / 2) - ($md-slider-track-height / 2));\n    z-index: $md-slider-thumb-z-index - 1;\n  }\n\n  .md-slider-discrete-value--dragging {\n    transition-property: none;\n  }\n}\n\n/// This includes the small scss for displaying an editable slider.\n@mixin react-md-editable-slider {\n  .md-slider-editor {\n    text-align: right;\n  }\n\n  .md-slider-container {\n    .md-text-field-container {\n      margin-left: 4px;\n      padding-right: 0;\n    }\n  }\n}\n\n/// This includes the small scss for displaying `.md-icon` or indicators with a Slider.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries\n///     should be included.\n@mixin react-md-slider-indicators($include-media: $md-media-included) {\n  @if $include-media {\n    @include react-md-slider-indicators-media;\n  }\n\n  .md-slider-container {\n    .md-icon {\n      $margin: ($md-slider-height - $md-font-icon-size) / 2;\n\n      margin-bottom: $margin;\n      margin-top: $margin;\n    }\n  }\n\n  .md-slider-ind {\n    display: block;\n    text-align: center;\n  }\n\n  .md-slider-track--ind-left {\n    margin-left: $md-default-padding;\n  }\n\n  .md-slider-track--ind-right {\n    margin-right: $md-default-padding;\n  }\n}\n\n/// Creates the CSS for the slider indicators on mobile devices. This should most likely\n/// be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-slider-indicators-mobile;\n///   }\n/// @group sliders, media-queries\n@mixin react-md-slider-indicators-mobile {\n  .md-slider-ind {\n    font-size: $md-text-field-mobile-font-size;\n    margin-top: 14px;\n  }\n}\n\n/// Creates the CSS for the slider indicators on desktop screens. This should most likely\n/// be used within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-slider-indicators-desktop;\n///   }\n/// @group sliders, media-queries\n@mixin react-md-slider-indicators-desktop {\n  .md-slider-ind {\n    font-size: $md-text-field-desktop-font-size;\n    margin-top: 16px;\n  }\n}\n\n/// Includes the mobile and desktop media queries for the slider indicators.\n///\n/// @example scss - Basic Usage SCSS\n///   @include react-md-slider-indicators-media;\n/// @group sliders, media-queries\n@mixin react-md-slider-indicators-media {\n  @media #{$md-mobile-media} {\n    @include react-md-slider-indicators-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-slider-indicators-desktop;\n  }\n}\n\n\n/// This will theme the Slider component with an updated `primary-color` and\n/// optionally a switch in themes.\n///\n/// @param {Color} $primary-color [$md-primary-color] - The primary color to use for the\n///     slider. This will be the non-disabled track's fill color and the non-disabled thumb's\n///     color. If you are using the `dark-theme`, This value should be the primary color with\n///     a `-200` suffix.\n/// @param {Boolean} $light-theme [$md-light-theme] - A boolean if the application using the\n///     light theme.\n/// @param {Boolean} $include-discrete [$md-slider-include-discrete] - A boolean if the discrete Slider scss should be\n///     themed as well.\n/// @group sliders, themes\n@mixin react-md-theme-sliders($primary-color: $md-primary-color, $light-theme: $md-light-theme, $include-discrete: $md-slider-include-discrete) {\n  @if $md-colors-warn-md and $md-slider-warn-md {\n    $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n  }\n\n  $md-slider-on-color: $primary-color;\n  $md-slider-off-color: if($light-theme, $md-slider-light-theme-off-color, $md-slider-dark-theme-off-color);\n  $bg-color: if($light-theme, $md-white-base, $md-dark-theme-background-color);\n\n  @if $md-slider-on-color != $md-primary-color {\n    .md-slider-thumb--on,\n    .md-slider-track-fill {\n      background: $md-slider-on-color;\n    }\n  }\n\n  @if $light-theme != $md-light-theme {\n    @if not $light-theme {\n      .md-background--card {\n        .md-slider-thumb--mask-disabled {\n          background: get-color('card', false);\n        }\n      }\n    }\n\n    .md-slider-track,\n    .md-slider-thumb--disabled {\n      background: $md-slider-off-color;\n    }\n\n    .md-slider-thumb--continuous-off,\n    .md-slider-thumb--disabled-mask {\n      background: $bg-color;\n    }\n\n    .md-slider-thumb--off {\n      border-color: $md-slider-off-color;\n    }\n  }\n\n  @if $include-discrete {\n    @include react-md-theme-discrete-slider($primary-color, $light-theme);\n  }\n}\n\n/// This will update the discrete Slider with the new `$primary-color`.\n///\n/// @param {Color} $primary-color [$md-primary-color] - The primary color to\n///     theme the discrete Slider with.\n/// @param {Boolean} $light-theme [$md-light-theme] - Boolean if the discrete Slider\n///     should be themed for the light or dark theme.\n/// @group sliders, themes\n@mixin react-md-theme-discrete-slider($primary-color: $md-primary-color, $light-theme: $md-light-theme) {\n  @if $md-colors-warn-md and $md-slider-warn-md {\n    $invalid-color: validate-slider-primary-color($primary-color, $light-theme);\n  }\n\n  $md-slider-on-color: $primary-color;\n\n  @if $md-slider-on-color != $md-primary-color {\n    .md-slider-thumb--discrete-on {\n      &::after {\n        border-top-color: $md-slider-on-color;\n      }\n    }\n  }\n\n  @if $light-theme != $md-light-theme and not $light-theme {\n    .md-slider-discrete-tick {\n      background: get-color('card', true);\n    }\n  }\n}\n\n/// A helper function to validate that a `$primary-color` has a `-200` suffix when\n/// using the dark theme. It doesn't actually output anything with sass-loader atm\n/// though. :/\n///\n/// @param {Color} $primary-color - The primary color to validate.\n/// @param {Boolean} $light-theme - Boolean if the current theme is the light theme.\n/// @return {Boolean} true if the primary color is valid or false if it is invalid.\n@function validate-slider-primary-color($primary-color, $light-theme) {\n  @if $light-theme {\n    @return true;\n  }\n\n  $found: false;\n  @each $name, $color in $md-color-map {\n    @if str-index($name, '-200') != null and str-index($name, '-a-200') == null and $color == $primary-color {\n      @return true;\n    }\n  }\n\n  $msg: \"The current primary-color: '#{$primary-color}' is not a valid '-200' suffix for a dark-themed slider.\";\n  $msg: \"#{$msg} This warning can be disabled by setting the '$md-slider-warn-md' or '$md-colors-warn-md' to 'false'.\";\n  @warn \"#{$msg} See https://react-md.mlaursen.com/sassdoc/#sliders-variable-md-slider-warn-md for more information.\";\n\n  @return false;\n}\n","////\n/// @group subheaders\n////\n\n/// The height of a subheader.\n/// @type Number\n$md-subheader-height: 48px !default;\n\n/// The font size for a subheader.\n/// @type Number\n$md-subheader-font-size: 14px !default;\n\n/// Includes the styles for the subheaders.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-subheaders;\n@mixin react-md-subheaders {\n  .md-subheader {\n    font-size: $md-subheader-font-size;\n    font-weight: $md-font-medium;\n    height: $md-subheader-height;\n    line-height: $md-subheader-height;\n    padding-left: $md-default-padding;\n    padding-right: $md-default-padding;\n  }\n}\n","////\n/// @group snackbars\n////\n\n/// The z-index to use for snackbars.\n/// @type Number\n/// @see md-btn-fixed-z-index\n/// @see md-drawer-z-index\n/// @see md-dialog-full-page-z-index\n/// @see md-dialog-overlay-z-index\n/// @see md-menu-z-index\n/// @see md-overlay-z-index\n/// @see md-picker-inline-z-index\n/// @see md-toolbar-z-index\n/// @group snackbars, z-indexes\n$md-snackbar-z-index: 20 !default;\n\n/// The default transition time for the snackbar to appear and disappear\n$md-snackbar-transition-time: $md-transition-time * 2 !default;\n\n/// The background color for the snackbar.\n/// @type Color\n$md-snackbar-color: #323232 !default;\n\n/// The horizontal padding in a snackbar.\n/// @type Number\n$md-snackbar-horizontal-padding: 24px !default;\n\n/// The vertical padding for a single line snackbar.\n/// @type Number\n$md-snackbar-vertical-padding: 14px !default;\n\n/// The vertical padding for a multi-line snackbar.\n/// @type Number\n$md-snackbar-vertical-multiline-padding: 24px !default;\n\n/// The margin between the snackbar's text and action on mobile devices.\n/// @type Number\n$md-snackbar-mobile-button-left-margin: 24px !default;\n\n/// The height of a single line snackbar on mobile devices.\n/// @type Number\n$md-snackbar-mobile-height: 48px !default;\n\n/// The height of a multi-line snackbar on mobile devices.\n/// @type Number\n$md-snackbar-mobile-multiline-height: 80px !default;\n\n/// The border radius for snackbars on desktop screens.\n/// @type Number\n$md-snackbar-desktop-border-radius: 2px !default;\n\n/// The margin between a snackbar's text and action on desktop screens.\n/// @type Number\n$md-snackbar-desktop-button-left-margin: 48px !default;\n\n/// The min width for a snackbar on desktop screens.\n/// @type Number\n$md-snackbar-desktop-min-width: 288px !default;\n\n/// The max width for a snackbar on desktop screens.\n/// @type Number\n$md-snackbar-desktop-max-width: 568px !default;\n\n\n/// Creates the styles for snackbars\n///\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should\n///   be included by default.\n@mixin react-md-snackbars($include-media: $md-media-included) {\n  .md-snackbar-container {\n    position: absolute;\n  }\n\n  .md-snackbar {\n    align-items: center;\n    background: $md-snackbar-color;\n    bottom: 0;\n    display: flex;\n    height: $md-snackbar-mobile-height;\n    justify-content: space-between;\n    position: fixed;\n    transform-origin: 0 100%;\n    z-index: $md-snackbar-z-index;\n  }\n\n  .md-snackbar--multiline {\n    height: $md-snackbar-mobile-multiline-height;\n  }\n\n  .md-snackbar--toast {\n    color: $md-white-base;\n    margin-bottom: 0;\n    padding-left: $md-snackbar-horizontal-padding;\n    padding-right: $md-snackbar-horizontal-padding;\n  }\n\n  .md-snackbar-enter-active,\n  .md-snackbar-leave-active {\n    transition-duration: $md-snackbar-transition-time;\n    transition-property: transform;\n\n    * {\n      transition-duration: $md-snackbar-transition-time;\n      transition-property: opacity;\n    }\n  }\n\n  .md-snackbar-enter.md-snackbar-enter-active {\n    transition-timing-function: $md-transition-deceleration;\n  }\n\n  .md-snackbar-leave.md-snackbar-leave-active {\n    transition-timing-function: $md-transition-acceleration;\n  }\n\n  .md-snackbar-enter,\n  .md-snackbar-leave.md-snackbar-leave-active {\n    * {\n      opacity: 0;\n    }\n  }\n\n  .md-snackbar-enter.md-snackbar-enter-active,\n  .md-snackbar-leave {\n    * {\n      opacity: 1;\n    }\n  }\n\n  .md-btn--snackbar {\n    padding-left: $md-snackbar-horizontal-padding;\n    padding-right: $md-snackbar-horizontal-padding;\n  }\n\n  @if $include-media {\n    @include react-md-snackbars-media;\n  }\n}\n\n/// Creates the styles for snackbars on mobile devices. This should _normally_ be used\n/// in a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-snackbars-mobile;\n///   }\n///\n/// @group snackbars, media-queries\n@mixin react-md-snackbars-mobile {\n  .md-snackbar {\n    left: 0;\n    right: 0;\n  }\n\n  .md-snackbar-enter,\n  .md-snackbar-leave.md-snackbar-leave-active {\n    transform: translate3d(0, 100%, 0);\n  }\n\n  .md-snackbar-enter.md-snackbar-enter-active,\n  .md-snackbar-leave {\n    transform: translate3d(0, 0, 0);\n  }\n\n  .md-snackbar--action {\n    padding-right: 0;\n  }\n\n  .md-btn--snackbar-floating {\n    transition: bottom $md-snackbar-transition-time, background $md-transition-time, box-shadow $md-transition-time, color $md-transition-time;\n    will-change: bottom;\n  }\n\n  .md-btn--snackbar-floating-adjust {\n    bottom: $md-btn-mobile-floating-margin + $md-snackbar-mobile-height;\n  }\n\n  .md-btn--snackbar-floating-multiline-adjust {\n    bottom: $md-btn-mobile-floating-margin + $md-snackbar-mobile-multiline-height;\n  }\n}\n\n/// Creates the styles for snackbars on desktop screens. This should _normally_ be used\n/// in a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-snackbars-desktop;\n///   }\n///\n/// @group snackbars, media-queries\n@mixin react-md-snackbars-desktop {\n  .md-snackbar {\n    border-radius: $md-snackbar-desktop-border-radius;\n    left: 50%;\n    max-width: $md-snackbar-desktop-max-width;\n    min-width: $md-snackbar-desktop-min-width;\n    right: auto;\n    transform: translate3d(-50%, 0, 0);\n  }\n\n  .md-snackbar-enter,\n  .md-snackbar-leave.md-snackbar-leave-active {\n    transform: translate3d(-50%, 100%, 0);\n  }\n\n  .md-snackbar-enter.md-snackbar-enter-active,\n  .md-snackbar-leave {\n    transform: translate3d(-50%, 0, 0);\n  }\n\n  .md-snackbar--action {\n    padding-right: $md-snackbar-horizontal-padding;\n  }\n\n  .md-btn--snackbar-floating-adjust {\n    bottom: $md-btn-desktop-floating-margin;\n  }\n\n  .md-btn--snackbar-floating-multiline-adjust {\n    bottom: $md-btn-desktop-floating-margin;\n  }\n}\n\n/// Creates the media queries and styles for snackbars on both mobile devices and\n/// desktop screens.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-snackbars-media;\n///\n/// @group snackbars, media-queries\n@mixin react-md-snackbars-media {\n  @media #{$md-mobile-media} {\n    @include react-md-snackbars-mobile;\n  }\n\n  @media #{$md-tablet-media} {\n    @include react-md-snackbars-desktop;\n  }\n}\n","////\n/// @group tabs\n////\n\n@import 'toolbars';\n\n/// Boolean if the styles for tabs with a label and an icon should be included.\n/// @type Boolean\n$md-tab-include-icons: true !default;\n\n/// Boolean if the styles for wrapping a toolbar and tabs together should be included.\n/// @type Boolean\n/// @see react-md-tabbed-toolbars\n$md-tab-include-toolbars: true !default;\n\n/// Boolean if the styles for offsetting content from a prominent toolbar and tabs\n/// should be included.\n/// @type Boolean\n$md-tab-include-prominent-toolbars: $md-toolbar-include-prominent !default;\n\n/// Boolean if the styles for a pagination tab overflow on desktop screens should\n/// be included.\n/// @type Boolean\n$md-tab-include-pagination-overflow: true !default;\n\n/// Boolean if the styles for a menu tab overflow on desktop screens should be included.\n/// @type Boolean\n$md-tab-include-menu-overflow: true !default;\n\n/// Boolean if the mobile swipeable styles should be included.\n/// @type Boolean\n$md-tab-include-swipeable: true !default;\n\n/// The height for a tab with only a label or only an icon.\n/// @type Number\n$md-tab-height: 48px !default;\n\n/// The height for a tab with a label and an icon.\n/// @type Number\n$md-tab-icon-height: 72px !default;\n\n/// The absolute maximum width for a tab. A tab's width is either the view's width - 56px\n/// or this value; whichever is smaller.\n/// @type Number\n$md-tab-max-width: 264px !default;\n\n/// The height for the active tab indicator.\n/// @type Number\n$md-tab-indicator-height: 2px !default;\n\n/// The font size for a tab that spans multiple lines.\n/// @type Number\n$md-tab-multiline-font-size: 12px !default;\n\n/// The left and right padding for a tab.\n/// @type Number\n$md-tab-padding: 12px !default;\n\n/// The bottom padding for a tab that only spans one line.\n/// @type Number\n$md-tab-single-line-padding-bottom: 20px !default;\n\n/// The padding bottom for a tab that has both a label and an icon.\n/// @type Number\n$md-tab-icon-padding-bottom: 16px !default;\n\n/// The margin bottom for an icon in a tab.\n/// @type Number\n$md-tab-icon-margin-bottom: 10px !default;\n\n/// The min width for a tab on mobile devices.\n/// @type Number\n$md-tab-mobile-min-width: 72px !default;\n\n/// The font size for a tab on mobile devices.\n/// @type Number\n$md-tab-mobile-font-size: 14px !default;\n\n/// The font size for a tab on desktop screens.\n/// @type Number\n$md-tab-desktop-font-size: 13px !default;\n\n/// The min width for a tab on desktop screens.\n/// @type Number\n$md-tab-desktop-min-width: 160px !default;\n\n/// The left and right padding for a tab on desktop screens.\n/// @type Number\n$md-tab-desktop-padding: 24px !default;\n\n\n\n/// Includes the stiles for tabs.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-tabs;\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The app's secondary color. This is used\n///   to style the active tab indicator.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries should be included\n///   with this mixin.\n/// @param {Boolean} include-icons [$md-tab-include-icons] - Boolean if the styles for a tab with a label\n///   and an icon should be included.\n/// @param {Boolean} include-toolbars [$md-tab-include-toolbars] - Boolean if the styles for a simple container\n///   holding a toolbar and tabs should be included.\n/// @param {Boolean} include-prominent-toolbars [$md-tab-include-prominent-toolbars] - Boolean if the styles\n///   for the simple container holding a toolbar and tabs should include the prominent toolbar styles.\n/// @param {Boolean} include-pagination-overflow [$md-tab-include-pagination-overflow] - Boolean if the styles\n///   for desktop pagination overflow should be included.\n/// @param {Boolean} include-menu-overflow [$md-tab-include-menu-overflow] - Boolean if the styles for a drop down menu\n///   tab overflow on desktop screens should be included.\n/// @param {Boolean} include-swipeable [$md-tab-include-swipeable] - Boolean if the styles for swiping the tab\n///   content on mobile devices should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense spec for icons should\n///   be included for tabs.\n@mixin react-md-tabs(\n  $secondary-color: $md-secondary-color,\n  $include-media: $md-media-included,\n  $include-icons: $md-tab-include-icons,\n  $include-toolbars: $md-tab-include-toolbars,\n  $include-prominent-toolbars: $md-tab-include-prominent-toolbars,\n  $include-pagination-overflow: $md-tab-include-pagination-overflow,\n  $include-menu-overflow: $md-tab-include-menu-overflow,\n  $include-swipeable: $md-tab-include-swipeable,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  .md-tabs {\n    @extend %md-list-unstyled;\n\n    display: flex;\n    position: relative;\n\n    &.md-background--primary {\n      .md-ink {\n        background: rgba($md-white-base, .12);\n      }\n    }\n\n    &--centered {\n      justify-content: center;\n\n      .md-tab {\n        flex-grow: 0;\n      }\n    }\n\n    @if $include-pagination-overflow {\n      &--pagination {\n        .md-tab {\n          flex-grow: 0;\n        }\n      }\n    }\n  }\n\n  @include react-md-tabs-tab($include-icons);\n  @include react-md-tabs-indicator($secondary-color);\n  @include react-md-tabs-overflow($include-pagination-overflow, $include-menu-overflow);\n\n  @if $include-icons {\n    @include react-md-tabs-icon;\n  }\n\n  @if $include-toolbars {\n    @include react-md-tabbed-toolbars;\n  }\n\n  @if $include-swipeable {\n    @include react-md-tabs-swipeable;\n  }\n\n  @include react-md-tabs-content(\n    $md-toolbar-height,\n    if($include-prominent-toolbars, $md-toolbar-prominent-height, null),\n    $include-icons,\n    $include-toolbars,\n    $include-swipeable\n  );\n\n  @if $include-media {\n    @include react-md-tabs-media($include-icons, $include-toolbars, $include-prominent-toolbars, $include-swipeable, $include-dense-icons);\n  }\n}\n\n/// Updates the theme for tabs only if the `$secondary-color` does not equal the `$md-secondary-color`.\n/// This really changes the color of the tab indicator.\n///\n/// @example scss - Example Usage SCSS\n///   .theme-a-red {\n///     @include react-md-theme-tabs($md-red-a-200);\n///   }\n///\n/// @param {Color} secondary-color [$md-secondary-color] - The secondary app color to theme with.\n/// @group tabs, themes\n@mixin react-md-theme-tabs($secondary-color: $md-secondary-color) {\n  @if $secondary-color != $md-secondary-color {\n    .md-tab-indicator {\n      background: $secondary-color;\n    }\n  }\n}\n\n/// Includes the styles for a tab only. This should probably not be used since it\n/// is included in the `react-md-tabs` mixin.\n///\n/// @see react-md-tabs\n/// @param {Boolean} include-icons [$md-tab-include-icons] - Boolean if the styles for a tab\n///     with a label and icon should be included.\n@mixin react-md-tabs-tab($include-icons: $md-tab-include-icons) {\n  .md-tab {\n    align-items: center;\n    color: inherit;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    flex-shrink: 0;\n    height: $md-tab-height;\n    justify-content: flex-end;\n    overflow: hidden;\n    padding-bottom: $md-tab-single-line-padding-bottom;\n    padding-left: $md-tab-padding;\n    padding-right: $md-tab-padding;\n    position: relative;\n    text-align: center;\n    text-decoration: none;\n    text-transform: uppercase;\n\n    &--multiline {\n      font-size: $md-tab-multiline-font-size;\n      padding-bottom: $md-tab-padding;\n    }\n\n    @if $include-icons {\n      &--icon {\n        height: $md-tab-icon-height;\n        padding-bottom: $md-tab-icon-padding-bottom;\n      }\n    }\n\n    &--inactive {\n      color: get-color('secondary', false);\n    }\n  }\n}\n\n/// Includes the styles for the tab indicator only. This should probably\n/// not be used since it is included in the `react-md-tabs` mixin.\n///\n/// @see react-md-tabs\n/// @param {Color} secondary-color [$md-secondary-color] - The app's secondary color\n///     to theme with.\n@mixin react-md-tabs-indicator($secondary-color: $md-secondary-color) {\n  .md-tab-indicator {\n    background: $secondary-color;\n    bottom: 0;\n    content: '';\n    height: $md-tab-indicator-height;\n    left: 0;\n    position: absolute;\n  }\n}\n\n/// Includes the styles for toolbars that have tabs as well.\n@mixin react-md-tabbed-toolbars {\n  .md-tab-toolbar {\n    width: 100%;\n  }\n}\n\n/// Includes the styles for desktop tab overflow.\n///\n/// @param {Boolean} include-pagination-overflow [$md-tab-include-pagination-overflow] - Boolean if the styles\n///   for desktop pagination overflow should be included.\n/// @param {Boolean} include-menu-overflow [$md-tab-include-menu-overflow] - Boolean if the styles for a drop down menu\n///   tab overflow on desktop screens should be included.\n@mixin react-md-tabs-overflow($include-pagination-overflow: $md-tab-include-pagination-overflow, $include-menu-overflow: $md-tab-include-menu-overflow) {\n  @if $include-pagination-overflow {\n    .md-btn--tab-overflow {\n      bottom: 2px;\n      position: absolute;\n\n      &--icon {\n        bottom: 8px;\n      }\n\n      &-left {\n        left: 6px;\n        z-index: 3;\n      }\n\n      &-right {\n        right: 12px;\n      }\n    }\n  }\n\n  @if $include-menu-overflow {\n    .md-menu--tab {\n      margin-right: 100%;\n\n      .md-icon {\n        color: inherit;\n      }\n\n      .md-tab {\n        padding-top: 12px;\n      }\n    }\n  }\n}\n\n/// Includes the styles for the swipeable views as well as some offset classes for\n/// positioning the tabs content.\n@mixin react-md-tabs-swipeable {\n  .md-tabs-fixed-container {\n    left: 0;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: $md-toolbar-z-index;\n  }\n\n  .md-tabs-content {\n    &--offset {\n      margin-top: $md-tab-height;\n\n      &-icon {\n        margin-top: $md-tab-icon-height;\n      }\n    }\n  }\n}\n\n/// Includes the styles for an icon in the tabs.\n@mixin react-md-tabs-icon {\n  .md-icon--tab {\n    color: inherit;\n    margin-bottom: $md-tab-icon-margin-bottom;\n  }\n}\n\n/// Includes the styles for tabs on mobile devices.\n/// @group tabs, media-queries\n@mixin react-md-tabs-mobile {\n  .md-toolbar ~ .md-tabs {\n    // No idea why :/\n    margin-top: -1px;\n  }\n\n  .md-tabs {\n    @include md-ios-scroll-momentum;\n\n    overflow-x: auto;\n  }\n\n  .md-tab {\n    max-width: calc(100vw - 56px);\n    min-width: $md-tab-mobile-min-width;\n  }\n\n  .md-tab-label {\n    font-size: $md-tab-mobile-font-size;\n    font-weight: $md-font-medium;\n    line-height: $md-tab-mobile-font-size;\n  }\n}\n\n/// This is mostly an internal mixin for tabs. It will create the tabs content offset class names\n/// related to the current parameters.\n///\n/// @param {Number} toolbar-height - The current toolbar height.\n/// @param {Number} prominent-toolbar-height - The current prominent toolbar height.\n/// @param {Boolean} include-icons [$md-tab-include-icons] - Boolean if the icon styles for tabs should\n///     also be included.\n/// @param {Boolean} include-toolbars [$md-tab-include-toolbars] - Boolean if the toolbar styles should\n///     be included.\n/// @param {Boolean} include-swipeable [$md-tab-include-swipeable] - Boolean if the swipeable styles should\n///     be included.\n@mixin react-md-tabs-content(\n  $toolbar-height,\n  $prominent-toolbar-height,\n  $include-icons: $md-tab-include-icons,\n  $include-toolbars: $md-tab-include-toolbars,\n  $include-swipeable: $md-tab-include-swipeable\n) {\n  @if $include-toolbars and $include-swipeable {\n    @if $toolbar-height != null {\n      .md-tabs-content--offset-toolbar {\n        margin-top: $md-tab-height + $toolbar-height;\n\n        @if $include-icons {\n          &-icon {\n            margin-top: $md-tab-icon-height + $toolbar-height;\n          }\n        }\n      }\n    }\n\n    @if $prominent-toolbar-height != null {\n      .md-tabs-content--offset-toolbar-prominent {\n        margin-top: $md-tab-height + $prominent-toolbar-height;\n\n        @if $include-icons {\n          &-icon {\n            margin-top: $md-tab-icon-height + $prominent-toolbar-height;\n          }\n        }\n      }\n    }\n  }\n}\n\n/// Includes the styles for tabs on mobile devices that are portrait.\n/// This really only adds styles for offsetting the tabs content when there is\n/// a toolbar. No styles will be included if the `$include-toolbars` or `$include-swipeable`\n/// params are `false`.\n///\n/// This mixin will define some offset class names to position the tabs content.\n/// - `.md-tabs-content--offset-toolbar`\n/// - `.md-tabs-content--offset-toolbar-icon`\n/// - `.md-tabs-content--offset-toolbar-prominent`\n///\n/// @param {Boolean} include-icons [$md-tab-include-icons] - Boolean if the styles for offsetting the\n///     tabs content when there is a tab with both a label and an icon.\n/// @param {Boolean} include-toolbars [$md-tab-include-toolbars] - Boolean if the styles for offsetting\n///     the tabs content when there is a `.md-tabs-container` containing both a toolbar and tabs.\n/// @param {Boolean} include-prominent-toolbars [$md-tab-include-prominent-toolbars] - Boolean if the styles\n///   for offsetting the tabs content when there is a `.md-tabs-container` containing both a prominent toolbar\n///   and tabs.\n/// @param {Boolean} include-swipeable [$md-tab-include-swipeable] - Boolean if the tab's content is swipeable.\n/// @group tabs, media-queries\n@mixin react-md-tabs-mobile-portrait(\n  $include-icons: $md-tab-include-icons,\n  $include-toolbars: $md-tab-include-toolbars,\n  $include-prominent-toolbars: $md-tab-include-prominent-toolbars,\n  $include-swipeable: $md-tab-include-swipeable\n) {\n  $toolbar-height: if($md-toolbar-height == null, $md-toolbar-mobile-portrait-height, null);\n  $prominent-toolbar-height: if($include-prominent-toolbars, if($md-toolbar-prominent-height == null, $md-toolbar-mobile-prominent-height, null), null);\n\n  @include react-md-tabs-content($toolbar-height, $prominent-toolbar-height, $include-icons, $include-toolbars, $include-swipeable);\n}\n\n/// Includes the styles for tabs on mobile devices that are landscape.\n/// This really only adds styles for offsetting the tabs content when there is\n/// a toolbar. No styles will be included if the `$include-toolbars` or `$include-swipeable`\n/// params are `false`.\n///\n/// This mixin will define some offset class names to position the tabs content.\n/// - `.md-tabs-content--offset-toolbar`\n/// - `.md-tabs-content--offset-toolbar-icon`\n///\n/// @param {Boolean} include-icons [$md-tab-include-icons] - Boolean if the styles for offsetting the\n///     tabs content when there is a tab with both a label and an icon.\n/// @param {Boolean} include-toolbars [$md-tab-include-toolbars] - Boolean if the styles for offsetting\n///     the tabs content when there is a `.md-tabs-container` containing both a toolbar and tabs.\n/// @param {Boolean} include-swipeable [$md-tab-include-swipeable] - Boolean if the tab's content is swipeable.\n/// @group tabs, media-queries\n@mixin react-md-tabs-mobile-landscape(\n  $include-icons: $md-tab-include-icons,\n  $include-toolbars: $md-tab-include-toolbars,\n  $include-swipeable: $md-tab-include-swipeable\n) {\n  $toolbar-height: if($md-toolbar-height == null, $md-toolbar-mobile-landscape-height, null);\n\n  @include react-md-tabs-content($toolbar-height, null, $include-icons, $include-toolbars, $include-swipeable);\n}\n\n/// Includes the styles for tabs on tablet devices. This really only adds styles for offsetting\n/// the tabs content when there is a toolbar. No styles will be included if the `$include-toolbars`\n/// or `$include-swipeable` params are `false`.\n///\n/// This mixin will define some offset class names to position the tabs content.\n/// - `.md-tabs-content--offset-toolbar`\n/// - `.md-tabs-content--offset-toolbar-icon`\n///\n/// @param {Boolean} include-icons [$md-tab-include-icons] - Boolean if the styles for offsetting the\n///     tabs content when there is a tab with both a label and an icon.\n/// @param {Boolean} include-toolbars [$md-tab-include-toolbars] - Boolean if the styles for offsetting\n///     the tabs content when there is a `.md-tabs-container` containing both a toolbar and tabs.\n/// @param {Boolean} include-prominent-toolbars [$md-tab-include-prominent-toolbars] - Boolean if the styles\n///   for offsetting the tabs content when there is a `.md-tabs-container` containing both a prominent toolbar\n///   and tabs.\n/// @param {Boolean} include-swipeable [$md-tab-include-swipeable] - Boolean if the tab's content is swipeable.\n/// @group tabs, media-queries\n@mixin react-md-tabs-tablet(\n  $include-icons: $md-tab-include-icons,\n  $include-toolbars: $md-tab-include-toolbars,\n  $include-prominent-toolbars: $md-tab-include-prominent-toolbars,\n  $include-swipeable: $md-tab-include-swipeable\n) {\n  $toolbar-height: if($md-toolbar-height == null, $md-toolbar-tablet-height, null);\n  $prominent-toolbar-height: if($include-prominent-toolbars, if($md-toolbar-prominent-height == null, $md-toolbar-tablet-prominent-height, null), null);\n\n  @include react-md-tabs-content($toolbar-height, $prominent-toolbar-height, $include-icons, $include-toolbars, $include-swipeable);\n}\n\n/// Includes the styles for tabs on desktop screens.\n///\n/// @param {Boolean} include-icons [$md-tab-include-icons] - Boolean if the styles for a tab with a label\n///   and an icon should be included.\n/// @param {Boolean} include-toolbars [$md-tab-include-toolbars] - Boolean if the styles for a simple container\n///   holding a toolbar and tabs should be included.\n/// @param {Boolean} include-prominent-toolbars [$md-tab-include-prominent-toolbars] - Boolean if the styles\n///   for the simple container holding a toolbar and tabs should include the prominent toolbar styles.\n/// @param {Boolean} include-swipeable [$md-tab-include-swipeable] - Boolean if the styles for swiping the tab\n///   content on mobile devices should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense spec for icons\n///   should be used for the tabs.\n/// @group tabs, media-queries\n@mixin react-md-tabs-desktop(\n  $include-icons: $md-tab-include-icons,\n  $include-toolbars: $md-tab-include-toolbars,\n  $include-prominent-toolbars: $md-tab-include-prominent-toolbars,\n  $include-swipeable: $md-tab-include-swipeable,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  .md-toolbar ~ .md-tabs {\n    margin-top: 0;\n  }\n\n  .md-tabs {\n    overflow: visible;\n  }\n\n  .md-tab {\n    max-width: $md-tab-max-width;\n    min-width: $md-tab-desktop-min-width;\n    padding-left: $md-tab-desktop-padding;\n    padding-right: $md-tab-desktop-padding;\n  }\n\n  .md-tab-label {\n    font-size: $md-tab-desktop-font-size;\n    line-height: $md-tab-desktop-font-size;\n  }\n\n  @if $include-icons and $include-dense-icons {\n    $margin: ($md-font-icon-size - $md-font-icon-dense-size) / 2;\n\n    .md-icon--tab {\n      margin-bottom: $md-tab-icon-margin-bottom + $margin;\n      margin-top: $margin;\n    }\n  }\n\n  @if ($md-toolbar-height == null and $md-toolbar-desktop-height != null) or ($include-prominent-toolbars and $md-toolbar-prominent-height == null and $md-toolbar-desktop-prominent-height != null) {\n    @include react-md-tabs-content(\n      $md-desktop-toolbar-height,\n      if($include-prominent-toolbars, $md-toolbar-desktop-prominent-height),\n      $include-icons,\n      $include-toolbars,\n      $include-swipeable\n    );\n  }\n}\n\n/// Creates all the styles for tabs at different media sizes.\n///\n/// @param {Boolean} include-icons [$md-tab-include-icons] - Boolean if the styles for a tab with a label\n///   and an icon should be included.\n/// @param {Boolean} include-toolbars [$md-tab-include-toolbars] - Boolean if the styles for a simple container\n///   holding a toolbar and tabs should be included.\n/// @param {Boolean} include-prominent-toolbars [$md-tab-include-prominent-toolbars] - Boolean if the styles\n///   for the simple container holding a toolbar and tabs should include the prominent toolbar styles.\n/// @param {Boolean} include-swipeable [$md-tab-include-swipeable] - Boolean if the styles for swiping the tab\n///   content on mobile devices should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense spec for icons\n///   should be used for the tabs.\n/// @group tabs, media-queries\n@mixin react-md-tabs-media(\n  $include-icons: $md-tab-include-icons,\n  $include-toolbars: $md-tab-include-toolbars,\n  $include-prominent-toolbars: $md-tab-include-prominent-toolbars,\n  $include-swipeable: $md-tab-include-swipeable,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  @media #{$md-mobile-media} {\n    @include react-md-tabs-mobile;\n  }\n\n  @if $include-toolbars and $include-swipeable and ($md-toolbar-height == null or $md-toolbar-prominent-height == null) {\n    @media #{$md-mobile-portrait-media} {\n      @include react-md-tabs-mobile-portrait($include-icons, $include-toolbars, $include-prominent-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-mobile-landscape-media} {\n      @include react-md-tabs-mobile-landscape($include-icons, $include-toolbars, $include-swipeable);\n    }\n\n    @media #{$md-tablet-media} {\n      @include react-md-tabs-tablet($include-icons, $include-toolbars, $include-swipeable);\n    }\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tabs-desktop($include-icons, $include-toolbars, $include-prominent-toolbars, $include-swipeable, $include-dense-icons);\n  }\n}\n","////\n/// @group toolbars\n////\n\n/// Boolean if the themed toolbars should be included. A themed toolbar\n/// just has a different background color based on the `$md-light-theme`.\n/// @type Boolean\n$md-toolbar-include-themed: true !default;\n\n/// Boolean if the prominent styles should be included for toolbars. This\n/// really just makes a toolbar with a bigger height.\n/// @type Boolean\n$md-toolbar-include-prominent: true !default;\n\n/// Boolean if the very small styles for flat or raised buttons in toolbars\n/// should be included.\n/// @type Boolean\n$md-toolbar-include-btn-text: true !default;\n\n/// Boolean if the styling for text fields in toolbars should be included.\n/// @type Boolean\n$md-toolbar-include-text-fields: true !default;\n\n/// Boolean if the styles for autocompletes in toolbars should be included.\n/// This really just updates the autocomplete's menu to span the entire viewport\n/// on mobile devices.\n/// @type Boolean\n$md-toolbar-include-autocompletes: true !default;\n\n/// Boolean if the select field styling in toolbars should be included.\n/// @type Boolean\n$md-toolbar-include-select-fields: true !default;\n\n/// Boolean if two additional class names should be included for positioning toolbar relatives with `padding` instead of `margin`.\n/// Creates `.md-toolbar-relative--padded` and `md-toolbar-relative--prominent-padded`\n///\n/// > NOTE: If `$md-toolbar-relative-padding` is `true`, these classes will still not be created. In addition,\n/// if `$md-toolbar-include-prominent` is `false`, the prominent class name will not be created.\n/// @type Boolean\n$md-toolbar-include-relative-padding-class-names: true !default;\n\n/// Boolean if the `.md-toolbar-relative` and `.md-toolbar-relative--prominent` should use `padding` instead of `margin`\n/// for positioning.\n/// @type Boolean\n/// @see  md-toolbar-include-relative-padding-class-names\n$md-toolbar-relative-padding: false !default;\n\n/// The amount of margin for an inset toolbar.\n/// @type Number\n$md-toolbar-inset-margin: 8px !default;\n\n/// The z-index for a `fixed` toolbar.\n/// @type Number\n/// @see md-btn-fixed-z-index\n/// @see md-dialog-full-page-z-index\n/// @see md-dialog-overlay-z-index\n/// @see md-drawer-z-index\n/// @see md-menu-z-index\n/// @see md-overlay-z-index\n/// @see md-picker-inline-z-index\n/// @see md-snackbar-z-index\n/// @group toolbars, z-indexes\n$md-toolbar-z-index: 15 !default;\n\n/// The toolbar's prominent title font size. This will only be included if it does not equal the\n/// `$md-title-font-size` variable.\n/// @type Number\n$md-toolbar-prominent-title-font-size: $md-title-font-size !default;\n\n/// The height of a toolbar on mobile portrait devices.\n/// @type Number\n$md-toolbar-mobile-portrait-height: 56px !default;\n\n/// The height of a toolbar on mobile landscape devices.\n/// @type Number\n$md-toolbar-mobile-landscape-height: 48px !default;\n\n/// The height of a prominent toolbar on mobile devices and any media above.\n/// @type Number\n$md-toolbar-mobile-prominent-height: null !default;\n\n/// The keyline to use for the main nav button in the toolbar for mobile devices.\n/// @type Number\n$md-toolbar-mobile-btn-keyline: 16px !default;\n\n/// The keyline to use for the main title in the toolbar for mobile devices.\n/// @type Number\n$md-toolbar-mobile-title-keyline: 72px !default;\n\n/// The top and bottom padding to apply to select fields that appear in toolbars.\n///\n/// @see md-toolbar-select-field-margin\n/// @type Number\n$md-toolbar-mobile-select-field-margin: 6px !default;\n\n/// The height of a toolbar for tablets and desktop displays.\n/// @type Number\n$md-toolbar-tablet-height: 64px !default;\n\n/// The prominent height for a toolbar on tablet displays.\n///\n/// @see md-toolbar-prominent-height\n/// @type Number\n$md-toolbar-tablet-prominent-height: null !default;\n\n/// The keyline to use for the main nav button in toolbars on tablets and desktop displays.\n/// @type Number\n$md-toolbar-tablet-btn-keyline: 24px !default;\n\n/// The keyline to use for the main title in a toolbar for tablets and desktop displays.\n/// @type Number\n$md-toolbar-tablet-title-keyline: 80px !default;\n\n/// The top and bottom padding to apply to select fields that appear in toolbars.\n///\n/// @see md-toolbar-select-field-margin\n/// @type Number\n$md-toolbar-tablet-select-field-margin: 10px !default;\n\n/// The top and bottom padding to apply to select fields that appear in landscape toolbars.\n///\n/// @see md-toolbar-select-field-margin\n/// @type Number\n$md-toolbar-tablet-landscape-select-field-margin: 12px !default;\n\n/// An optional height to apply to toolbars only on desktop displays.\n///\n/// @see md-toolbar-height\n/// @see md-toolbar-tablet-height\n/// @type Number\n$md-toolbar-desktop-height: null !default;\n\n/// An optional height to apply to prominent toolbars on desktop displays.\n///\n/// @see md-toolbar-prominent-height\n/// @see md-toolbar-tablet-prominent-height\n/// @type Number\n$md-toolbar-desktop-prominent-height: null !default;\n\n/// An optional keyline to apply to the action buttons and main navigation in toolbars on desktop\n/// displays. If this is `null`, it will inherit the keyline from tablets.\n///\n/// @see md-toolbar-btn-keyline\n/// @see md-toolbar-tablet-btn-keyline\n/// @type Number\n$md-toolbar-desktop-btn-keyline: null !default;\n\n/// An optional keyline to apply to the toolbar's title on desktop displays. If this is `null`, it will\n/// inherit the keyline from tablets.\n///\n/// @see md-toolbar-title-keyline\n/// @see md-toolbar-tablet-title-keyline\n/// @type Number\n$md-toolbar-desktop-title-keyline: null !default;\n\n/// An optional margin to apply to select fields that appear in toolbars on desktop displays. If this is `null`,\n/// it will inherit the margins from tablets.\n///\n/// @see md-toolbar-select-field-margin\n/// @see md-toolbar-tablet-select-field-margin\n/// @type Number\n$md-toolbar-desktop-select-field-margin: null !default;\n\n/// A height to use for the toolbar on all screen sizes. This value will have precedence over the mobile/tablet/desktop\n/// variables.\n///\n/// @see md-toolbar-mobile-portrait-height\n/// @see md-toolbar-mobile-landscape-height\n/// @see md-toolbar-tablet-height\n/// @see md-toolbar-desktop-height\n/// @type Number\n$md-toolbar-height: null !default;\n\n/// A height to use for prominent toolbars on all screen sizes. This value will have precedence over the mobile/tablet/desktop\n/// variables.\n///\n/// @see md-toolbar-mobile-prominent-height\n/// @see md-toolbar-tablet-prominent-height\n/// @see md-toolbar-desktop-prominent-height\n/// @type Number\n$md-toolbar-prominent-height: if($md-toolbar-height != null, $md-toolbar-height * 2, 128px) !default;\n\n/// A title keyline to use for toolbars on all screen sizes. This value will have precedence over the mobile/tablet/desktop\n/// variables.\n///\n/// @see md-toolbar-mobile-title-keyline\n/// @see md-toolbar-tablet-title-keyline\n/// @see md-toolbar-desktop-title-keyline\n/// @type Number\n$md-toolbar-title-keyline: null !default;\n\n/// The keyline to use for the main navigation and action buttons in the toolbar. This value will have precedence over the\n/// mobile/tablet/desktop variables.\n///\n/// @see md-toolbar-mobile-btn-keyline\n/// @see md-toolbar-tablet-btn-keyline\n/// @see md-toolbar-desktop-btn-keyline\n/// @type Number\n$md-toolbar-btn-keyline: null !default;\n\n/// The margin to apply to the top and bottom of a select field that appears in a toolbar.\n///\n/// @see md-toolbar-mobile-select-field-margin\n/// @see md-toolbar-tablet-select-field-margin\n/// @see md-toolbar-desktop-select-field-margin\n/// @type Number\n$md-toolbar-select-field-margin: null !default;\n\n/// Includes the styles for toolbars.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-toolbars;\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the toolbars should be themed\n///     for the light theme.\n/// @param {Boolean} include-media [$md-media-included] - Boolean if the toolbar media queries\n///     should be included.\n/// @param {Boolean} include-themed [$md-toolbar-include-themed] - Boolean if the themed toolbars\n///     should be included.\n/// @param {Boolean} include-prominent [$md-toolbar-include-prominent] - Boolean if the prominent\n///     toolbar styles should be included.\n/// @param {Boolean} include-btn-text [$md-toolbar-include-btn-text] - Boolean if the flat or raised\n///     button styles in toolbars should be included.\n/// @param {Boolean} include-text-fields [$md-toolbar-include-text-fields] - Boolean if the styles for\n///     text fields in toolbars should be included. If the params `include-autocomplete` or `include-select-fields`\n///     are `true`, this will always be included.\n/// @param {Boolean} include-autocompletes [$md-toolbar-include-autocompletes] - Boolean if the styles\n///     for autocompletes in toolbars should be included.\n/// @param {Boolean} include-select-fields [$md-toolbar-include-select-fields] - Boolean if the styles\n///     for select fields in toolbars should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense spec for icons/buttons\n///   should be included.\n/// @param {Boolean} include-relative-padding-class-names [$md-toolbar-include-relative-padding-class-names] - Boolean if the\n///     relative padding class names should be included.\n/// @param {Boolean} relative-padding [$md-toolbar-relative-padding] - Boolean if the `.md-toolbar-relative` class names\n///     should use padding instead of margin.\n@mixin react-md-toolbars(\n  $light-theme: $md-light-theme,\n  $include-media: $md-media-included,\n  $include-themed: $md-toolbar-include-themed,\n  $include-prominent: $md-toolbar-include-prominent,\n  $include-btn-text: $md-toolbar-include-btn-text,\n  $include-text-fields: $md-toolbar-include-text-fields,\n  $include-autocompletes: $md-toolbar-include-autocompletes,\n  $include-select-fields: $md-toolbar-include-select-fields,\n  $include-dense-icons: $md-font-icon-include-dense,\n  $include-relative-padding-class-names: $md-toolbar-include-relative-padding-class-names,\n  $relative-padding: $md-toolbar-relative-padding\n) {\n  @if $include-media {\n    @include react-md-toolbars-media(\n      $include-prominent,\n      $include-btn-text,\n      $include-select-fields,\n      $include-dense-icons,\n      $include-relative-padding-class-names,\n      $relative-padding\n    );\n  }\n\n  .md-toolbar {\n    display: flex;\n    height: $md-toolbar-height;\n\n    &--fixed {\n      left: 0;\n      position: fixed;\n      right: 0;\n      top: 0;\n      z-index: $md-toolbar-z-index;\n    }\n\n    &--inset {\n      margin: $md-toolbar-inset-margin;\n      max-width: calc(100vw - #{$md-toolbar-inset-margin * 2});\n    }\n\n    &--text-white {\n      color: $md-white-base;\n\n      $selectors: ('btn' 'icon' 'title--toolbar');\n      @if $include-text-fields or $include-autocompletes {\n        $selectors: append($selectors, 'text-field');\n      }\n\n      @if $include-select-fields {\n        $selectors: append($selectors, 'select-field');\n      }\n\n      $color-selector: '';\n\n      @each $selector in $selectors {\n        $color-selector: $color-selector + if($color-selector != '', ', ', '');\n        $color-selector: $color-selector + '.md-#{$selector}';\n      }\n\n      #{$color-selector} {\n        color: inherit;\n      }\n\n      @if $include-text-fields or $include-autocompletes {\n        @include react-md-theme-placeholders(get-color('secondary', false));\n      }\n    }\n\n    @if $include-themed {\n      &--themed {\n        background: get-color('toolbar', $light-theme);\n\n        .md-title--toolbar {\n          color: if($light-theme, get-color('text', $light-theme), $md-white-base);\n        }\n      }\n    }\n\n    @if $include-prominent and $md-toolbar-prominent-height != null {\n      &--prominent {\n        height: $md-toolbar-prominent-height;\n      }\n    }\n  }\n\n  .md-title--toolbar {\n    color: if($light-theme, get-color('text', $light-theme), $md-white-base);\n    line-height: $md-toolbar-height;\n    margin-bottom: 0;\n    transition-duration: $md-transition-time;\n    transition-property: transform;\n\n    @if $include-prominent {\n      &-prominent {\n        position: absolute;\n\n        @if $md-toolbar-prominent-height != null {\n          $height: if($md-toolbar-height == null, $md-toolbar-mobile-portrait-height, $md-toolbar-height);\n          $y: $height + (($md-toolbar-prominent-height - $height * 2) / 2);\n\n          transform: translate3d(0, $y, 0);\n        }\n\n        @if $md-toolbar-prominent-title-font-size != $md-title-font-size {\n          font-size: $md-toolbar-prominent-title-font-size;\n        }\n      }\n    }\n  }\n\n  @include react-md-toolbar-relative($md-toolbar-height, $md-toolbar-prominent-height, $include-prominent, $include-relative-padding-class-names, $relative-padding);\n  @include react-md-toolbar-buttons($md-toolbar-height, $md-btn-icon-size, $md-btn-mobile-height, $include-btn-text);\n\n  $margin: 0;\n  @if $md-toolbar-btn-keyline != null {\n    $margin: $md-toolbar-btn-keyline - $md-btn-icon-padding;\n  }\n\n  @include react-md-toolbar-actions($margin);\n  @include react-md-toolbar-titles($md-toolbar-height, $md-toolbar-title-keyline, $md-btn-icon-size, $margin);\n\n\n  @if $include-select-fields and $md-toolbar-select-field-margin != null {\n    .md-select-field--toolbar {\n      margin-bottom: $md-toolbar-select-field-margin;\n      margin-top: $md-toolbar-select-field-margin;\n    }\n  }\n\n  @if $include-text-fields or $include-autocompletes {\n    .md-toolbar {\n      .md-text-field-container {\n        padding-bottom: 0;\n        padding-top: 0;\n      }\n\n      .md-text-field--toolbar {\n        font-size: $md-title-font-size;\n      }\n    }\n  }\n\n  @if $include-autocompletes {\n    .md-toolbar {\n      .md-autocomplete-container,\n      .md-autocomplete {\n        height: 100%;\n      }\n    }\n  }\n}\n\n/// Updates the toolbar's `themed` color ONLY if the `$light-theme` does not equal the\n/// `$md-light-theme` and the `$include-themed` param is `true`.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-theme-toolbars(false);\n///\n/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the toolbars should be themed\n///     for the light theme.\n/// @param {Boolean} include-themed [$md-toolbar-include-themed] - Boolean if the themed toolbars\n///     should be included.\n/// @group toolbars, themes\n@mixin react-md-theme-toolbars($light-theme: $md-light-theme, $include-themed: $md-toolbar-include-themed) {\n  @if $light-theme != $md-light-theme {\n    @if $include-themed {\n      .md-toolbar--themed {\n        background: get-color('toolbar', $light-theme);\n\n        .md-title {\n          color: if($light-theme, get-color('text', $light-theme), $md-white-base);\n        }\n      }\n    }\n  }\n}\n\n/// A simple mixin that will either create padding-top or margin-top for the given value depending\n/// on if $padded is true.\n/// @access private\n@mixin margin-or-padding($val, $padded) {\n  @if $padded {\n    padding-top: $val;\n  } @else {\n    margin-top: $val;\n  }\n}\n\n/// This is a utility mixin for creating the relative class names for toolbars. This should normally just be used within the `react-md-toolbars`\n/// mixin. It will optionally create the following class names:\n///\n/// - `md-toolbar-relative`\n/// - `md-toolbar-relative--padding`\n/// - `md-toolbar-relative--prominent`\n/// - `md-toolbar-relative--prominent-padding`\n///\n/// The class names will only be created if the related height is not null.\n///\n/// @param {Number} toolbar-height - The current height of the toolbar. This is used to create the offset.\n/// @param {number} prominent-toolbar-height - The current height of a prominent toolbar.\n/// @param {Boolean} include-prominent - Boolean if the prominent styles for toolbars should be created.\n/// @param {Boolean} include-relative-padding-class-names - Boolean if the `padding` suffix class names should also be created.\n/// @param {Boolean} relative-padding - Boolean if the class names use padding by default instead of margin.\n@mixin react-md-toolbar-relative($toolbar-height, $prominent-toolbar-height, $include-prominent, $include-relative-padding-class-names, $relative-padding) {\n  @if $toolbar-height != null {\n    .md-toolbar-relative {\n      @include margin-or-padding($toolbar-height, $relative-padding);\n\n      @if not $relative-padding and $include-relative-padding-class-names {\n        &--padding {\n          padding-top: $toolbar-height;\n        }\n      }\n    }\n  }\n\n  @if $include-prominent and $prominent-toolbar-height != null {\n    .md-toolbar-relative--prominent {\n      @include margin-or-padding($prominent-toolbar-height, $relative-padding);\n\n      @if not $relative-padding and $include-relative-padding-class-names {\n        &-padding {\n          padding-top: $prominent-toolbar-height;\n        }\n      }\n    }\n  }\n}\n\n/// A mixin that is mostly for internal use. It will create the toolbar action left/right styles\n///\n/// @param {Number} margin - the current margin for the actions.\n@mixin react-md-toolbar-actions($margin) {\n  @if $margin != 0 {\n    .md-toolbar {\n      &--action-left {\n        margin-left: $margin;\n      }\n\n      &--action-right {\n        margin-right: $margin;\n      }\n    }\n  }\n}\n\n/// A mixin that is mostly for internal use. It will apply additional margins to buttons that appear in toolbars\n/// based on the given parameters.\n///\n/// @param {Number} toolbar-height - The current toolbar height.\n/// @param {Number} icon-btn-size - The current icon button size.\n/// @param {Number} text-btn-size - The current text button size.\n/// @param {Boolean} include-btn-text - Boolean if text buttons should be included.\n@mixin react-md-toolbar-buttons($toolbar-height, $icon-btn-size, $text-btn-size, $include-btn-text) {\n  @if $toolbar-height != null {\n    $margin: ($toolbar-height - $icon-btn-size) / 2;\n\n    @if $margin != 0 {\n      .md-btn--toolbar {\n        margin-bottom: $margin;\n        margin-top: $margin;\n      }\n    }\n\n    @if $include-btn-text {\n      $text-margin: ($toolbar-height - $text-btn-size) / 2;\n      @if $margin != 0 {\n        .md-toolbar .md-btn--text {\n          margin-bottom: $text-margin;\n          margin-top: $text-margin;\n        }\n      }\n    }\n  }\n}\n\n/// A mixin that is mostly for internal use. It will apply additional styles for titles that appear in toolbars\n/// based on the given parameters.\n///\n/// @param {Number} toolbar-height - The current toolbar height\n/// @param {Number} title-keyline - The current title's keyline to use.\n/// @param {Number} btn-size - The current icon button's size.\n/// @param {Number} btn-margin - The current margin for the icon button.\n@mixin react-md-toolbar-titles($toolbar-height, $title-keyline, $btn-size, $btn-margin) {\n  @if $title-keyline != null {\n    .md-title--toolbar {\n      @if $toolbar-height != $md-toolbar-height {\n        line-height: $toolbar-height;\n      }\n\n      @if $btn-margin != 0 {\n        margin-left: $title-keyline - $btn-size - $btn-margin;\n      }\n\n      &-offset {\n        margin-left: $title-keyline;\n      }\n    }\n  }\n}\n\n/// Includes the styles for toolbars on mobile devices. This should normally be used in a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///      @include react-md-toolbars-mobile;\n///   }\n///\n/// @param {Boolean} include-prominent [$md-toolbar-include-prominent] - Boolean if the prominent\n///     toolbar styles should be included.\n/// @param {Boolean} include-btn-text [$md-toolbar-include-btn-text] - Boolean if the flat or raised\n///     button styles in toolbars should be included.\n/// @param {Boolean} include-select-fields [$md-toolbar-include-select-fields] - Boolean if the styles\n///     for select fields in toolbars should be included.\n/// @param {Boolean} include-relative-padding-class-names [$md-toolbar-include-relative-padding-class-names] - Boolean if the\n///     relative padding class names should be included.\n/// @param {Boolean} relative-padding [$md-toolbar-relative-padding] - Boolean if the `.md-toolbar-relative` class names\n///     should use padding instead of margin.\n/// @group toolbars, media-queries\n@mixin react-md-toolbars-mobile(\n  $include-prominent: $md-toolbar-include-prominent,\n  $include-btn-text: $md-toolbar-include-btn-text,\n  $include-select-fields: $md-toolbar-include-select-fields,\n  $include-relative-padding-class-names: $md-toolbar-include-relative-padding-class-names,\n  $relative-padding: $md-toolbar-relative-padding\n) {\n  $toolbar-height: if($md-toolbar-height != null, null, $md-toolbar-mobile-portrait-height);\n  $prominent-toolbar-height: if($md-toolbar-prominent-height != null, null, $md-toolbar-mobile-prominent-height);\n\n  @include react-md-toolbar-relative(\n    $toolbar-height,\n    $prominent-toolbar-height,\n    $include-prominent,\n    $include-relative-padding-class-names,\n    $relative-padding\n  );\n\n  @if $toolbar-height != null {\n    .md-toolbar {\n      height: $toolbar-height;\n    }\n  }\n\n  @if $prominent-toolbar-height != null {\n    .md-toolbar--prominent {\n      height: $prominent-toolbar-height;\n    }\n  }\n\n  @include react-md-toolbar-buttons($toolbar-height, $md-btn-icon-size, $md-btn-mobile-height, $include-btn-text);\n\n  $margin: 0;\n  @if $md-toolbar-btn-keyline == null {\n    $margin: $md-toolbar-mobile-btn-keyline - $md-btn-icon-padding;\n  }\n\n  @include react-md-toolbar-actions($margin);\n  @include react-md-toolbar-titles($toolbar-height, $md-toolbar-mobile-title-keyline, $md-btn-icon-size, $margin);\n\n  @if $include-select-fields and $md-toolbar-select-field-margin == null {\n    .md-select-field--toolbar.md-select-field--toolbar {\n      margin-bottom: $md-toolbar-mobile-select-field-margin;\n      margin-top: $md-toolbar-mobile-select-field-margin;\n    }\n  }\n}\n\n/// Includes the styles for toolbars on landscape mobile devices. This should normally be\n/// used in a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-landscape-media} {\n///      @include react-md-toolbars-mobile-landscape;\n///   }\n///\n/// @param {Boolean} include-prominent [$md-toolbar-include-prominent] - Boolean if the prominent\n///     toolbar styles should be included.\n/// @param {Boolean} include-btn-text [$md-toolbar-include-btn-text] - Boolean if the flat or raised\n///     button styles in toolbars should be included.\n/// @param {Boolean} include-select-fields [$md-toolbar-include-select-fields] - Boolean if the styles\n///     for select fields in toolbars should be included.\n/// @param {Boolean} include-relative-padding-class-names [$md-toolbar-include-relative-padding-class-names] - Boolean if the\n///     relative padding class names should be included.\n/// @param {Boolean} relative-padding [$md-toolbar-relative-padding] - Boolean if the `.md-toolbar-relative` class names\n///     should use padding instead of margin.\n/// @group toolbars, media-queries\n@mixin react-md-toolbars-mobile-landscape(\n  $include-prominent: $md-toolbar-include-prominent,\n  $include-btn-text: $md-toolbar-include-btn-text,\n  $include-select-fields: $md-toolbar-include-select-fields,\n  $include-relative-padding-class-names: $md-toolbar-include-relative-padding-class-names,\n  $relative-padding: $md-toolbar-relative-padding\n) {\n  $toolbar-height: if($md-toolbar-height != null, null, $md-toolbar-mobile-landscape-height);\n\n  @include react-md-toolbar-relative(\n    $toolbar-height,\n    null,\n    $include-prominent,\n    $include-relative-padding-class-names,\n    $relative-padding\n  );\n\n  @if $toolbar-height != null {\n    .md-toolbar {\n      height: $toolbar-height;\n    }\n  }\n\n  @include react-md-toolbar-buttons($toolbar-height, $md-btn-icon-size, $md-btn-mobile-height, $include-btn-text);\n\n  $margin: 0;\n  @if $md-toolbar-btn-keyline == null {\n    $margin: $md-toolbar-mobile-btn-keyline - $md-btn-icon-padding;\n  }\n\n  @include react-md-toolbar-actions($margin);\n  @include react-md-toolbar-titles($toolbar-height, $md-toolbar-mobile-title-keyline, $md-btn-icon-size, $margin);\n}\n\n/// Includes the styles for toolbars on tablets and desktop screens. This should usually be used\n/// within a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-tablet-media} {\n///      @include react-md-toolbars-tablet;\n///   }\n///\n/// @param {Boolean} include-prominent [$md-toolbar-include-prominent] - Boolean if the prominent\n///     toolbar styles should be included.\n/// @param {Boolean} include-btn-text [$md-toolbar-include-btn-text] - Boolean if the flat or raised\n///     button styles in toolbars should be included.\n/// @param {Boolean} include-select-fields [$md-toolbar-include-select-fields] - Boolean if the styles\n///     for select fields in toolbars should be included.\n/// @param {Boolean} include-relative-padding-class-names [$md-toolbar-include-relative-padding-class-names] - Boolean if the\n///     relative padding class names should be included.\n/// @param {Boolean} relative-padding [$md-toolbar-relative-padding] - Boolean if the `.md-toolbar-relative` class names\n///     should use padding instead of margin.\n/// @group toolbars, media-queries\n@mixin react-md-toolbars-tablet(\n  $include-prominent: $md-toolbar-include-prominent,\n  $include-btn-text: $md-toolbar-include-btn-text,\n  $include-select-fields: $md-toolbar-include-select-fields,\n  $include-relative-padding-class-names: $md-toolbar-include-relative-padding-class-names,\n  $relative-padding: $md-toolbar-relative-padding\n) {\n  $toolbar-height: if($md-toolbar-height != null, null, $md-toolbar-tablet-height);\n  $prominent-toolbar-height: if($md-toolbar-prominent-height != null, null, $md-toolbar-tablet-prominent-height);\n\n  @include react-md-toolbar-relative(\n    $toolbar-height,\n    $prominent-toolbar-height,\n    $include-prominent,\n    $include-relative-padding-class-names,\n    $relative-padding\n  );\n\n  @if $toolbar-height != null {\n    .md-toolbar {\n      height: $toolbar-height;\n    }\n  }\n\n  @if $prominent-toolbar-height != null {\n    .md-toolbar--prominent {\n      height: $prominent-toolbar-height;\n    }\n  }\n\n  @include react-md-toolbar-buttons($toolbar-height, $md-btn-icon-size, $md-btn-mobile-height, $include-btn-text);\n\n  $margin: 0;\n  @if $md-toolbar-btn-keyline == null {\n    $margin: $md-toolbar-tablet-btn-keyline - $md-btn-icon-padding;\n  }\n\n  @include react-md-toolbar-actions($margin);\n  @include react-md-toolbar-titles($toolbar-height, $md-toolbar-tablet-title-keyline, $md-btn-icon-size, $margin);\n\n  @if $include-select-fields and $md-toolbar-select-field-margin == null {\n    .md-select-field--toolbar.md-select-field--toolbar {\n      margin-bottom: $md-toolbar-tablet-select-field-margin;\n      margin-top: $md-toolbar-tablet-select-field-margin;\n    }\n  }\n}\n\n/// Includes the styles for toolbars for a landscape tablet. This should be used\n/// within a media query. This will really only generate styles if the `include-text-fields`\n/// param is `true`.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-tablet-landscape-media} {\n///     @include react-md-toolbars-tablet-landscape;\n///   }\n///\n/// @group toolbars, media-queries\n/// @param {Boolean} include-select-fields [$md-toolbar-include-select-fields] - Boolean if the styles for\n///   select fields in toolbars should be included.\n@mixin react-md-toolbars-tablet-landscape($include-select-fields: $md-toolbar-include-select-fields) {\n  @if $include-select-fields {\n    .md-select-field--toolbar.md-select-field--toolbar {\n      margin-bottom: $md-toolbar-tablet-landscape-select-field-margin;\n      margin-top: $md-toolbar-tablet-landscape-select-field-margin;\n    }\n  }\n}\n\n/// Includes the styles for toolbars for a desktop display. This should be used\n/// within a media query. This will really only generate styles if the `include-text-fields`\n/// param is `true`.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-tablet-desktop} {\n///     @include react-md-toolbars-desktop;\n///   }\n///\n/// @param {Boolean} include-prominent [$md-toolbar-include-prominent] - Boolean if the prominent\n///     toolbar styles should be included.\n/// @param {Boolean} include-btn-text [$md-toolbar-include-btn-text] - Boolean if the flat or raised\n///     button styles in toolbars should be included.\n/// @param {Boolean} include-select-fields [$md-toolbar-include-select-fields] - Boolean if the styles\n///     for select fields in toolbars should be included.\n/// @param {Boolean} include-relative-padding-class-names [$md-toolbar-include-relative-padding-class-names] - Boolean if the\n///     relative padding class names should be included.\n/// @param {Boolean} relative-padding [$md-toolbar-relative-padding] - Boolean if the `.md-toolbar-relative` class names\n///     should use padding instead of margin.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense spec for icons/buttons\n///   should be included.\n/// @group toolbars, media-queries\n@mixin react-md-toolbars-desktop(\n  $include-prominent: $md-toolbar-include-prominent,\n  $include-btn-text: $md-toolbar-include-btn-text,\n  $include-select-fields: $md-toolbar-include-select-fields,\n  $include-relative-padding-class-names: $md-toolbar-include-relative-padding-class-names,\n  $relative-padding: $md-toolbar-relative-padding,\n  $include-dense-icons: $md-font-icon-include-dense\n) {\n  $toolbar-height: if($md-toolbar-height != null, null, $md-toolbar-desktop-height);\n  $prominent-toolbar-height: if($md-toolbar-prominent-height != null, null, $md-toolbar-desktop-prominent-height);\n  @include react-md-toolbar-relative(\n    $toolbar-height,\n    $prominent-toolbar-height,\n    $include-prominent,\n    $include-relative-padding-class-names,\n    $relative-padding\n  );\n\n  @if $toolbar-height != null {\n    .md-toolbar {\n      height: $toolbar-height;\n    }\n  }\n\n  @if $prominent-toolbar-height != null {\n    .md-toolbar--prominent {\n      height: $prominent-toolbar-height;\n    }\n  }\n\n  $btn-size: if($include-dense-icons, $md-btn-icon-dense-size, $md-btn-icon-size);\n  $btn-padding: if($include-dense-icons, $md-btn-icon-dense-padding, $md-btn-icon-padding);\n  $btn-keyline: if($md-toolbar-desktop-btn-keyline == null, $md-toolbar-tablet-btn-keyline, $md-toolbar-desktop-btn-keyline);\n  $title-keyline: if($md-toolbar-desktop-title-keyline == null, $md-toolbar-tablet-title-keyline, $md-toolbar-desktop-title-keyline);\n\n  $margin: 0;\n  @if $md-toolbar-btn-keyline != null and $include-dense-icons {\n    $margin: $md-toolbar-btn-keyline - $btn-padding;\n  } @else if $md-toolbar-btn-keyline == null and ($include-dense-icons or $btn-keyline != $md-toolbar-tablet-btn-keyline) {\n    $margin: $btn-keyline - $btn-padding;\n  }\n\n  @include react-md-toolbar-actions($margin);\n  @include react-md-toolbar-titles($toolbar-height, $title-keyline, $btn-size, $margin);\n\n  @if $toolbar-height == null and $include-dense-icons {\n    $toolbar-height: $md-toolbar-tablet-height;\n  }\n\n  @include react-md-toolbar-buttons($toolbar-height, $btn-size, $md-btn-desktop-height, $include-btn-text);\n\n  @if $include-select-fields and $md-toolbar-desktop-select-field-margin != null {\n    .md-select-field--toolbar.md-select-field--toolbar {\n      margin-bottom: $md-toolbar-desktop-select-field-margin;\n      margin-top: $md-toolbar-desktop-select-field-margin;\n    }\n  }\n}\n\n/// Includes the media queries for toolbars.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-toolbars-media;\n///\n/// @param {Boolean} include-prominent [$md-toolbar-include-prominent] - Boolean if the prominent\n///     toolbar styles should be included.\n/// @param {Boolean} include-btn-text [$md-toolbar-include-btn-text] - Boolean if the flat or raised\n///     button styles in toolbars should be included.\n/// @param {Boolean} include-select-fields [$md-toolbar-include-select-fields] - Boolean if the styles\n///     for select fields in toolbars should be included.\n/// @param {Boolean} include-dense-icons [$md-font-icon-include-dense] - Boolean if the dense spec for icons/buttons\n///   should be included.\n/// @param {Boolean} include-relative-padding-class-names [$md-toolbar-include-relative-padding-class-names] - Boolean if the\n///     relative padding class names should be included.\n/// @param {Boolean} relative-padding [$md-toolbar-relative-padding] - Boolean if the `.md-toolbar-relative` class names\n///     should use padding instead of margin.\n/// @group toolbars, media-queries\n@mixin react-md-toolbars-media(\n  $include-prominent: $md-toolbar-include-prominent,\n  $include-btn-text: $md-toolbar-include-btn-text,\n  $include-select-fields: $md-toolbar-include-select-fields,\n  $include-dense-icons: $md-font-icon-include-dense,\n  $include-relative-padding-class-names: $md-toolbar-include-relative-padding-class-names,\n  $relative-padding: $md-toolbar-relative-padding\n) {\n  $defaults-not-set: $md-toolbar-height == null or $md-toolbar-prominent-height == null or $md-toolbar-title-keyline == null or $md-toolbar-btn-keyline == null;\n\n  @if $defaults-not-set {\n    @media #{$md-mobile-media} {\n      @include react-md-toolbars-mobile(\n        $include-prominent,\n        $include-btn-text,\n        $include-select-fields,\n        $include-relative-padding-class-names,\n        $relative-padding\n      );\n    }\n\n    @media #{$md-mobile-landscape-media} {\n      @include react-md-toolbars-mobile-landscape(\n        $include-prominent,\n        $include-btn-text,\n        $include-select-fields,\n        $include-relative-padding-class-names,\n        $relative-padding\n      );\n    }\n\n    @media #{$md-tablet-media} {\n      @include react-md-toolbars-tablet(\n        $include-prominent,\n        $include-btn-text,\n        $include-select-fields,\n        $include-relative-padding-class-names,\n        $relative-padding\n      );\n    }\n\n    @if $include-select-fields {\n      @media #{$md-tablet-landscape-media} {\n        @include react-md-toolbars-tablet-landscape($include-select-fields);\n      }\n    }\n  }\n\n  @if $defaults-not-set or $include-dense-icons {\n    @media #{$md-desktop-media} {\n      @include react-md-toolbars-desktop(\n        $include-prominent,\n        $include-btn-text,\n        $include-select-fields,\n        $include-relative-padding-class-names,\n        $relative-padding,\n        $include-dense-icons\n      );\n    }\n  }\n}\n","////\n/// @group tooltips\n////\n\n/// The font size for tooltips on mobile devices.\n/// @type Number\n$md-tooltip-mobile-font-size: 14px !default;\n\n/// The height of the tooltip on mobile devices.\n/// @type Number\n$md-tooltip-mobile-tile-height: 32px !default;\n\n/// The left and right padding for a tooltip on mobile devices.\n/// @type Number\n$md-tooltip-mobile-lr-padding: 16px !default;\n\n/// The top and bottom padding for tooltips on mobile devices.\n/// @type Number\n$md-tooltip-mobile-tb-padding: ($md-tooltip-mobile-tile-height - $md-tooltip-mobile-font-size) / 2 !default;\n\n/// The margin between a tooltip and its corresponding element on mobile devices.\n/// @type Number\n$md-tooltip-mobile-top-margin: 24px !default;\n\n/// The font size for tooltip son desktop screens.\n/// @type Number\n$md-tooltip-desktop-font-size: 10px !default;\n\n/// The height for tooltips on desktop screens.\n/// @type Number\n$md-tooltip-desktop-tile-height: 22px !default;\n\n/// The left and right padding for tooltips on desktop screens.\n/// @type Number\n$md-tooltip-desktop-lr-padding: 8px !default;\n\n/// The top and bottom padding for tooltips on desktop screens.\n/// @type Number\n$md-tooltip-desktop-tb-padding: ($md-tooltip-desktop-tile-height - $md-tooltip-desktop-font-size) / 2 !default;\n\n/// The margin between a tooltip and its corresponding element on desktop screens.\n/// @type Number\n$md-tooltip-desktop-top-margin: 14px !default;\n\n/// The background color for tooltips.\n/// @type Color\n$md-tooltip-color: $md-grey-700 !default;\n\n/// The overall opacity to apply to tooltips.\n/// @type Number\n$md-tooltip-opacity: .9 !default;\n\n/// Creates the styles for tooltips.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-tooltips;\n///\n/// @param {Boolean} media-included [$md-media-included] - Boolean if the\n///     media queries should be included.\n@mixin react-md-tooltips($media-included: $md-media-included) {\n  @if $media-included {\n    @include react-md-tooltips-media;\n  }\n\n  .md-tooltip-container {\n    height: 100%;\n    left: 0;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    user-select: none;\n    width: 100%;\n    z-index: 1;\n  }\n\n  .md-tooltip {\n    background: $md-tooltip-color;\n    color: $md-white-base;\n    display: block;\n    font-weight: $md-font-medium;\n    opacity: $md-tooltip-opacity;\n    outline-style: none;\n    position: absolute;\n    white-space: nowrap;\n\n    &--active {\n      transition-duration: $md-transition-time;\n      transition-property: opacity, transform;\n    }\n\n    &--enter,\n    &--leave-active {\n      opacity: 0;\n    }\n\n    &--enter-active {\n      opacity: $md-tooltip-opacity;\n      transition-timing-function: $md-transition-deceleration;\n    }\n\n    &--leave-active {\n      transition-timing-function: $md-transition-acceleration;\n    }\n\n    &--horizontal {\n      left: 50%;\n      transform: translate3d(-50%, 0, 0);\n    }\n\n    &--vertical {\n      top: 50%;\n      transform: translate3d(0, -50%, 0);\n    }\n\n    &--top-active {\n      transform: translate3d(-50%, -100%, 0);\n    }\n\n    &--right-active {\n      transform: translate3d(100%, -50%, 0);\n    }\n\n    &--bottom-active {\n      transform: translate3d(-50%, 100%, 0);\n    }\n\n    &--left-active {\n      transform: translate3d(-100%, -50%, 0);\n    }\n  }\n}\n\n/// Creates the styles for tooltips on mobile devices. This should _normally_\n/// be used in a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-mobile-media} {\n///     @include react-md-tooltips-mobile;\n///   }\n/// @group tooltips, media-queries\n@mixin react-md-tooltips-mobile {\n  .md-tooltip {\n    font-size: $md-tooltip-mobile-font-size;\n    padding: $md-tooltip-mobile-tb-padding $md-tooltip-mobile-lr-padding;\n\n    &--top {\n      top: -$md-tooltip-mobile-top-margin;\n    }\n\n    &--right {\n      right: -$md-tooltip-mobile-top-margin;\n    }\n\n    &--bottom {\n      bottom: -$md-tooltip-mobile-top-margin;\n    }\n\n    &--left {\n      left: -$md-tooltip-mobile-top-margin;\n    }\n  }\n}\n\n/// Creates the styles for tooltips on desktop screens. This should _normally_\n/// be used in a media query.\n///\n/// @example scss - Example Usage SCSS\n///   @media #{$md-desktop-media} {\n///     @include react-md-tooltips-desktop;\n///   }\n/// @group tooltips, media-queries\n@mixin react-md-tooltips-desktop {\n  .md-tooltip {\n    font-size: $md-tooltip-desktop-font-size;\n    padding: $md-tooltip-desktop-tb-padding $md-tooltip-desktop-lr-padding;\n\n    &--top {\n      top: -$md-tooltip-desktop-top-margin;\n    }\n\n    &--right {\n      right: -$md-tooltip-desktop-top-margin;\n    }\n\n    &--bottom {\n      bottom: -$md-tooltip-desktop-top-margin;\n    }\n\n    &--left {\n      left: -$md-tooltip-desktop-top-margin;\n    }\n  }\n}\n\n/// Includes the media queries for tooltips on mobile devices and desktop\n/// screens.\n///\n/// @example scss - Example Usage SCSS\n///   @include react-md-tooltips-media;\n/// @group tooltips, media-queries\n@mixin react-md-tooltips-media {\n  @media #{$md-mobile-media} {\n    @include react-md-tooltips-mobile;\n  }\n\n  @media #{$md-desktop-media} {\n    @include react-md-tooltips-desktop;\n  }\n}\n","@import 'globals';\n\n@include react-md-everything;\n\n body {\n   margin: 0;\n   padding: 0;\n   font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n     \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n     sans-serif;\n   -webkit-font-smoothing: antialiased;\n   -moz-osx-font-smoothing: grayscale;\n }\n \n code {\n   font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n     monospace;\n }\n"]}