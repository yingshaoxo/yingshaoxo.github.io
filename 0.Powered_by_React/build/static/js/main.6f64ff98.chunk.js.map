{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["My_Paragraph","Component","props","_this3","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","children","react_default","a","createElement","Paragraph","size","marginBottom","Icon_Container","style","margin","onClick","Introduction","display","flexDirection","justifyContent","alignItems","height","App_My_Paragraph","App_Icon_Container","window","open","TwitterIcon","toaster","success","duration","EmailIcon","TelegramIcon","Page_Center","_this4","show_sheet","_this5","dist","SideSheet","isShown","onCloseComplete","setState","App_Introduction","Dialog","title","confirmLabel","hasCancel","Pane","Avatar","src","name","fontFamily","marginTop","Button","appearance","intent","setTimeout","styles","tabs","background","slide","padding","minHeight","color","slide1","backgroundColor","slide2","slide3","Top_Tabs","index","handleChange","event","value","_this6","handleChangeIndex","Tabs_default","fullWidth","onChange","Tab_default","label","lib_default","onChangeIndex","assign","className","App_Page_Center","React","App","App_Top_Tabs","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f64ff98.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\nimport { Dialog, Text, Avatar, Paragraph, Pane } from 'evergreen-ui'\nimport { Button, toaster } from 'evergreen-ui'\nimport { TextInput, Autocomplete } from 'evergreen-ui'\nimport { SideSheet } from 'evergreen-ui'\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\n\nimport {\n    TwitterIcon,\n    TelegramIcon,\n    EmailIcon,\n} from 'react-share';\n\nimport { Link } from 'evergreen-ui'\n\nclass Hello_Component extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isShown: true,\n        }\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    display: 'flex',  \n                    justifyContent:'center', \n                    alignItems:'center', \n                    height: '10vh'\n                }}\n            >\n                <Dialog\n                isShown={this.state.isShown}\n                title=\"A msg from yingshaoxo\"\n                onCloseComplete={() => this.setState({ isShown: false })}\n                confirmLabel=\"Nice to see you\"\n                hasCancel={false}\n                >\n                    <Text size={900}>Hello, welcome to my world!</Text>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nclass Search_Bar extends Component {\n    render() {\n        return (\n            <div>\n                <Autocomplete\n                title=\"Fruits\"\n                onChange={(changedItem) => console.log(changedItem)}\n                items={['Diary', 'Posts', 'QQ Number']}\n                >\n                {(props) => {\n                    const { getInputProps, getRef, inputValue } = props\n                    return (\n                    <TextInput\n                        height={32}\n                        width=\"30vw\"\n                        placeholder=\"Tweets\"\n                        value={inputValue}\n                        innerRef={getRef}\n                        {...getInputProps()}\n                    />\n                    )\n                }}\n                </Autocomplete>\n            </div>\n        )\n    }\n}\n\n\nclass My_Paragraph extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            children: this.props.children,\n        }\n    }\n\n    render() {\n        return (\n            <Paragraph\n                size = {200}\n                marginBottom = {30}\n            >\n                {this.state.children}\n            </Paragraph>\n        )\n    }\n}\n\nclass Icon_Container extends Component {\n    render() {\n        return (\n            <div\n                style={{\n                    margin:15\n                }}\n                onClick={this.props.onClick}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nclass Introduction extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: \"column\",\n                    justifyContent: 'center',\n                    alignItems: this.props.alignItems,\n                    height: this.props.height,\n                }}\n            >\n                <My_Paragraph>\n                    Born in 1998, University Student Maybe.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Interested in almost EVERYTHING about IT and AI.\n                </My_Paragraph>\n                <My_Paragraph>\n                    A So-called GEEK.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Want to make some friends sharing the SAME interests.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Superhero fan.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Favourite Character is Captain America ‚Üê\n                </My_Paragraph>\n                <My_Paragraph>\n                    Dream about building a great AI to make the world a better place.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Exciting!\n                </My_Paragraph>\n\n                <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: \"row\",\n                        justifyContent: 'center',\n                        alignItems: \"center\",\n                    }}\n                >\n                    <Icon_Container\n                        onClick={() => {\n                            window.open(\"https://twitter.com/yingshaoxo\", \"_blank\")\n                        }}\n                    >\n                        <TwitterIcon></TwitterIcon>\n                    </Icon_Container>\n                    <Icon_Container\n                        onClick={() => {\n                            toaster.success('yingshaoxo@gmail.com', {\n                                duration: 10 \n                            })\n                        }}\n                    >\n                        <EmailIcon></EmailIcon>\n                    </Icon_Container>\n                    <Icon_Container\n                        onClick={() => {\n                            window.open(\"https://t.me/EasyProgrammingLanguage\", \"_blank\")\n                        }}\n                    >\n                        <TelegramIcon></TelegramIcon>\n                    </Icon_Container>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Page_Center extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            show_sheet: false,\n        }\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    /*\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flexDirection: \"column\",\n                    height: '100vh'\n                    */\n                }}\n            >\n                {\n                    this.state.show_sheet && \n                    <div>\n                        <BrowserView>\n                            <SideSheet\n                                isShown={() => {\n                                    if (this.state.show_sheet) {\n                                        return true\n                                    } else {\n                                        return false\n                                    }\n                                }}\n                                onCloseComplete={() => {\n                                    this.setState({ \n                                        show_sheet: false\n                                    })\n                                }}\n                            >\n                                <Introduction \n                                    alignItems=\"center\"\n                                    height='100vh'\n                                ></Introduction>\n                            </SideSheet>\n                        </BrowserView>\n                        <MobileView>\n                            <Dialog\n                                isShown={() => {\n                                    if (this.state.show_sheet) {\n                                        return true\n                                    } else {\n                                        return false\n                                    }\n                                }}\n                                title=\"About yingshaoxo\"\n                                onCloseComplete={() => {\n                                    this.setState({ \n                                        show_sheet: false\n                                    })\n                                }}\n                                confirmLabel=\"You are genius\"\n                                hasCancel={false}\n                            >\n                                <Introduction \n                                    alignItems=\"left\"\n                                    height=''\n                                ></Introduction>\n                            </Dialog>\n                        </MobileView>\n                    </div>\n                }\n\n                <Pane\n                    /*\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    flexDirection=\"column\"\n                    */\n                >\n                    <Avatar\n                        src=\"https://avatars0.githubusercontent.com/u/17190829?s=460&v=4\"\n                        name=\"yingshaoxo\"\n                        size={200}\n                    />\n\n                    <Paragraph\n                        fontFamily='ui'\n                        size={800}\n                        marginTop={20}\n                    >\n                        yingshaoxo thought he was the greatest man in this world.\n                    </Paragraph>\n                    <Paragraph\n                        fontFamily='ui'\n                        size={800}\n                        marginTop={10}\n                    >\n                        How do you think?\n                    </Paragraph>\n                    <Button\n                        appearance=\"minimal\"\n                        intent=\"success\"\n                        onClick={() => {\n                            toaster.success('Thank you!', {\n                                duration: 2\n                            })\n                            setTimeout(() => {\n                                this.setState({\n                                    show_sheet: true\n                                })\n                            }, 2000)\n                        }}\n                    >\n                        Agree\n                    </Button>\n                </Pane>\n            </div>\n        )\n    }\n}\n\n\nconst styles = {\n    tabs: {\n        background: '#fff',\n    },\n    slide: {\n        padding: 15,\n        minHeight: 100,\n        color: '#fff',\n    },\n    slide1: {\n        backgroundColor: '#B3DC4A',\n    },\n    slide2: {\n        backgroundColor: '#6AC0FF',\n    },\n    slide3: {\n        backgroundColor: '#FEA900',\n    },\n};\n\nclass Top_Tabs extends React.Component {\n    state = {\n        index: 1,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({\n            index: value,\n        });\n    };\n\n    handleChangeIndex = index => {\n        this.setState({\n            index,\n        });\n    };\n\n    render() {\n        const { index } = this.state;\n\n        return (\n            <div>\n                <Tabs value={index} fullWidth onChange={this.handleChange} style={styles.tabs}>\n                    <Tab label=\"My Books\" />\n                    <Tab label=\"My Introduction\" />\n                    <Tab label=\"My Projects\" />\n                </Tabs>\n\n                <SwipeableViews index={index} onChangeIndex={this.handleChangeIndex}>\n                    <div style={Object.assign({}, styles.slide, styles.slide1)}>\n                        Coming soon...\n                    </div>\n\n                    <div style={Object.assign({}, styles.slide, styles.slide2)}>\n                        <div\n                            className=\"App\"\n                            style={{\n                                display: 'flex',\n                                flexDirection: \"column\",\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                height: '100vh',\n                            }}\n                        >\n                            {\n                                /* \n                                <Hello_Component>\n                                </Hello_Component>\n\n                                <Search_Bar></Search_Bar>\n                                */\n                            }\n\n                            <Page_Center></Page_Center>\n                        </div>\n                    </div>\n\n                    <div style={Object.assign({}, styles.slide, styles.slide3)}>\n                        Coming soon...\n                    </div>\n                </SwipeableViews>\n            </div>\n        );\n    }\n}\n\n\nclass App extends Component {\n    render() {\n        return (\n            <Top_Tabs></Top_Tabs>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}