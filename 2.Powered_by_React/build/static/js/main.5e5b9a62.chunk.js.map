{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["window","location","host","ReactGA","initialize","pageview","pathname","search","require","Component","My_Paragraph","constructor","props","super","this","state","children","render","Paragraph","size","marginBottom","Icon_Container","style","margin","onClick","Introduction","display","flexDirection","justifyContent","alignItems","height","open","TwitterIcon","toaster","success","duration","EmailIcon","TelegramIcon","Page_Center","show_sheet","SideSheet","isShown","onCloseComplete","setState","Dialog","title","confirmLabel","hasCancel","Pane","Avatar","src","name","fontFamily","marginTop","Button","appearance","intent","setTimeout","danger","My_Card","Card","width","CardActionArea","item","url","CardContent","Typography","gutterBottom","variant","component","description","CardActions","My_List","data","List","overflow","overflowY","map","index","ListItem","button","key","styles","tabs","background","slide","padding","minHeight","color","slide1","backgroundColor","slide2","slide3","Top_Tabs","React","handleChange","event","value","handleChangeIndex","Tabs","centered","onChange","Tab","label","onChangeIndex","Object","assign","className","App","show_down_icon","show_blog","music_status","Sound","status","STOPPED","componentDidMount","chrome","webstore","runtime","addEventListener","scrollY","Helmet","content","playStatus","autoLoad","volume","ref","tabs_element","id","position","Icon","icon","visual_height_of_our_page","innerHeight","scrollTo","PLAYING","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e5b9a62.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\nimport React, { Component } from 'react';\nimport './App.scss';\n\nimport Sound from 'react-sound';\n\nimport { Icon, Dialog, Text, Avatar, Paragraph, Pane } from 'evergreen-ui'\nimport { Button, toaster } from 'evergreen-ui'\nimport { TextInput, Autocomplete } from 'evergreen-ui'\nimport { SideSheet } from 'evergreen-ui'\nimport { Table } from 'evergreen-ui'\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport Iframe from 'react-iframe'\n\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\n\nimport {\n    TwitterIcon,\n    TelegramIcon,\n    EmailIcon,\n} from 'react-share';\n\nimport { Helmet } from 'react-helmet'\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\n\nif (window.location.host == \"yingshaoxo.xyz\") {\n    ReactGA.initialize('UA-157005302-3');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nvar request = require('request');\n\n\nclass Hello_Component extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isShown: true,\n        }\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '10vh'\n                }}\n            >\n                <Dialog\n                    isShown={this.state.isShown}\n                    title=\"A msg from yingshaoxo\"\n                    onCloseComplete={() => this.setState({ isShown: false })}\n                    confirmLabel=\"Nice to see you\"\n                    hasCancel={false}\n                >\n                    <Text size={900}>Hello, welcome to my world!</Text>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nclass Search_Bar extends Component {\n    render() {\n        return (\n            <div>\n                <Autocomplete\n                    title=\"Fruits\"\n                    onChange={(changedItem) => console.log(changedItem)}\n                    items={['Diary', 'Posts', 'QQ Number']}\n                >\n                    {(props) => {\n                        const { getInputProps, getRef, inputValue } = props\n                        return (\n                            <TextInput\n                                height={32}\n                                width=\"30vw\"\n                                placeholder=\"Tweets\"\n                                value={inputValue}\n                                innerRef={getRef}\n                                {...getInputProps()}\n                            />\n                        )\n                    }}\n                </Autocomplete>\n            </div>\n        )\n    }\n}\n\n\nclass My_Paragraph extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            children: this.props.children,\n        }\n    }\n\n    render() {\n        return (\n            <Paragraph\n                size={500}\n                marginBottom={30}\n            >\n                {this.state.children}\n            </Paragraph>\n        )\n    }\n}\n\nclass Icon_Container extends Component {\n    render() {\n        return (\n            <div\n                style={{\n                    margin: 15\n                }}\n                onClick={this.props.onClick}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nclass Introduction extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: \"column\",\n                    justifyContent: 'center',\n                    alignItems: this.props.alignItems,\n                    height: this.props.height,\n                }}\n            >\n                <My_Paragraph>\n                    Born in 1998, University Student Maybe.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Interested in almost EVERYTHING about IT and AI.\n                </My_Paragraph>\n                <My_Paragraph>\n                    A So-called GEEK.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Want to make some friends sharing the SAME interests.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Superhero fan.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Favourite Character is Captain America ←\n                </My_Paragraph>\n                <My_Paragraph>\n                    Dream about building a great AI to make the world a better place.\n                </My_Paragraph>\n                <My_Paragraph>\n                    Exciting!\n                </My_Paragraph>\n\n                <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: \"row\",\n                        justifyContent: 'center',\n                        alignItems: \"center\",\n                    }}\n                >\n                    <Icon_Container\n                        onClick={() => {\n                            window.open(\"https://twitter.com/yingshaoxo\", \"_blank\")\n                        }}\n                    >\n                        <TwitterIcon></TwitterIcon>\n                    </Icon_Container>\n                    <Icon_Container\n                        onClick={() => {\n                            toaster.success('yingshaoxo@gmail.com', {\n                                duration: 10\n                            })\n                        }}\n                    >\n                        <EmailIcon></EmailIcon>\n                    </Icon_Container>\n                    <Icon_Container\n                        onClick={() => {\n                            window.open(\"https://t.me/EasyProgrammingLanguage\", \"_blank\")\n                        }}\n                    >\n                        <TelegramIcon></TelegramIcon>\n                    </Icon_Container>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Page_Center extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            show_sheet: false,\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.show_sheet &&\n                    <div>\n                        <BrowserView>\n                            <SideSheet\n                                isShown={\n                                    this.state.show_sheet\n                                }\n                                onCloseComplete={() => {\n                                    this.setState({\n                                        show_sheet: false\n                                    })\n                                }}\n                            >\n                                <Introduction\n                                    alignItems=\"center\"\n                                    height='100vh'\n                                ></Introduction>\n                            </SideSheet>\n                        </BrowserView>\n                        <MobileView>\n                            <Dialog\n                                isShown={() => {\n                                    if (this.state.show_sheet) {\n                                        return true\n                                    } else {\n                                        return false\n                                    }\n                                }}\n                                title=\"About yingshaoxo\"\n                                onCloseComplete={() => {\n                                    this.setState({\n                                        show_sheet: false\n                                    })\n                                }}\n                                confirmLabel=\"You are genius\"\n                                hasCancel={false}\n                            >\n                                <Introduction\n                                    alignItems=\"left\"\n                                    height=''\n                                ></Introduction>\n                            </Dialog>\n                        </MobileView>\n                    </div>\n                }\n\n                <Pane>\n                    <Avatar\n                        src=\"me.jpg\"\n                        name=\"yingshaoxo\"\n                        size={200}\n                    />\n\n                    <Paragraph\n                        fontFamily='ui'\n                        size={500}\n                        marginTop={20}\n                    >\n                        School is not a place for smart people.\n                    </Paragraph>\n                    <Paragraph\n                        fontFamily='ui'\n                        size={500}\n                        marginTop={10}\n                    >\n                        --- Rick and Morty\n                    </Paragraph>\n                    <Button\n                        appearance=\"minimal\"\n                        intent=\"success\"\n                        onClick={() => {\n                            toaster.success('Thank you!', {\n                                duration: 2\n                            })\n                            setTimeout(() => {\n                                this.setState({\n                                    show_sheet: true\n                                })\n                            }, 2000)\n                        }}\n                    >\n                        Agree\n                    </Button>\n                    <Button\n                        appearance=\"minimal\"\n                        intent=\"danger\"\n                        onClick={() => {\n                            toaster.danger(\"That's OK.\", {\n                                duration: 2\n                            })\n                            setTimeout(() => {\n                                window.open(\"https://yingshaoxo.xyz/legacy_index.html\", '_self');\n                            }, 2000)\n                        }}\n                    >\n                        Disagree\n                    </Button>\n                </Pane>\n            </div>\n        )\n    }\n}\n\n\nclass My_Card extends Component {\n    render() {\n        return (\n            <Card\n                style={{\n                    width: \"75vw\",\n                }}\n            >\n                <CardActionArea\n                    onClick={() => {\n                        //toaster.success(\"hi\")\n                        window.open(this.props.item.url, \"_blank\")\n                    }}\n                >\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {this.props.item.title}\n                        </Typography>\n                        <Typography component=\"p\">\n                            {this.props.item.description}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n\n                <CardActions>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nclass My_List extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: this.props.data,\n        }\n    }\n\n    render() {\n        return (\n            <List\n                style={{\n                    height: \"250px\",\n                    overflow: 'hidden',\n                    overflowY: 'scroll'\n                }}\n            >\n                {\n                    this.state.data.map((item, index) => {\n                        return (\n                            <ListItem button\n                                key={index}\n                            >\n                                <My_Card\n                                    item={item}\n                                >\n                                </My_Card>\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        )\n    }\n}\n\n\nclass WorkingTable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedIndex: 0,\n            tabs: ['1', '2', '3'],\n            data: null,\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"http://127.0.0.1:5000/WorkingTable\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        data: JSON.parse(result)\n                    })\n                },\n            )\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    width: '100%',\n                    height: '100vh',\n                }}\n            >\n                <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: \"column\",\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        height: '100vh',\n                    }}\n                >\n                    {\n                        (!this.state.data) ? null :\n                            <Table>\n                                <Table.Head>\n                                    <Table.TextHeaderCell flexBasis={\"44vw\"} flexShrink={0} flexGrow={0}>\n                                        day\n                            </Table.TextHeaderCell>\n                                    <Table.TextHeaderCell>\n                                        state\n                            </Table.TextHeaderCell>\n                                </Table.Head>\n                                <Table.Body height={\"80vh\"} width={\"50vw\"}>\n                                    {\n                                        this.state.data.map((item, index) => (\n                                            (item['state'] == 'idle') ?\n                                                <Table.Row>\n                                                    <Table.TextCell flexBasis={\"44vw\"} flexShrink={0} flexGrow={0}>\n                                                        <h4 style={{ color: 'red' }}>{item['day']}</h4>\n                                                    </Table.TextCell>\n                                                    <Table.TextCell>{item['state']}</Table.TextCell>\n                                                </Table.Row>\n                                                :\n                                                <Table.Row>\n                                                    <Table.TextCell flexBasis={\"44vw\"} flexShrink={0} flexGrow={0}>\n                                                        <h4 style={{ color: 'black' }}>{item['day']}</h4>\n                                                    </Table.TextCell>\n                                                    <Table.TextCell>{item['state']}</Table.TextCell>\n                                                </Table.Row>\n                                        ))\n                                    }\n                                </Table.Body>\n                            </Table>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst styles = {\n    tabs: {\n        background: '#fff',\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    slide: {\n        padding: 15,\n        minHeight: 100,\n        color: '#fff',\n    },\n    slide1: {\n        backgroundColor: '#B3DC4A',\n    },\n    slide2: {\n        backgroundColor: '#6AC0FF',\n    },\n    slide3: {\n        backgroundColor: '#FEA900',\n    },\n};\n\nclass Top_Tabs extends React.Component {\n    state = {\n        index: 1,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({\n            index: value,\n        });\n    };\n\n    handleChangeIndex = index => {\n        this.setState({\n            index,\n        });\n    };\n\n    render() {\n        const { index } = this.state;\n\n        return (\n            <div>\n                <Tabs value={index} centered onChange={this.handleChange} style={styles.tabs}>\n                    <Tab label=\"My Books\" />\n                    <Tab label=\"My Introduction\" />\n                    <Tab label=\"My Projects\" />\n                </Tabs>\n\n                <SwipeableViews index={index} onChangeIndex={this.handleChangeIndex}>\n                    <div style={Object.assign({}, styles.slide, styles.slide1)}>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: \"column\",\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                height: '100vh',\n                                width: '100vw',\n                            }}\n                        >\n                            <My_List\n                                data={[\n                                    {\n                                        \"title\": \"use-python-to-build-a-modern-communication-system\",\n                                        \"description\": \"This the first Ebook and first thesis I published.\",\n                                        \"url\": \"https://leanpub.com/usepythontobuildamoderncommunicationsystem\",\n                                    },\n                                    {\n                                        \"title\": \"AI for Idiots\",\n                                        \"description\": \"I'm a idiot, but I want to learn AI even before I getting start programming\",\n                                        \"url\": \"https://yingshaoxo.xyz/books/artificial-intelligence-for-idiots\",\n                                    },\n                                    {\n                                        \"title\": \"University Notes\",\n                                        \"description\": \"Some notes made by myself\",\n                                        \"url\": \"https://yingshaoxo.xyz/books/University_Notes\",\n                                    },\n                                    {\n                                        \"title\": \"Go tutorial for Pythoner\",\n                                        \"description\": \"Help Python programmer to learn Go.\",\n                                        \"url\": \"https://yingshaoxo.xyz/books/Go_tutorial_for_Pythoner\",\n                                    },\n                                    {\n                                        \"title\": \"C/C++ tutorial for Pythoner\",\n                                        \"description\": \"Make C/C++ simpler for learning.\",\n                                        \"url\": \"https://yingshaoxo.gitbook.io/c-c-tutorial-for-pythoner/\",\n                                    },\n                                    {\n                                        \"title\": \"物质与思想\",\n                                        \"description\": \"初中积淀，高中完成，包含我所有价值观、世界观\",\n                                        \"url\": \"https://medium.com/@yingshaoxo/material-and-thoughts-8b22c6cc12ab\",\n                                    },\n                                ]}\n                            ></My_List>\n                        </div>\n                    </div>\n\n                    <div style={Object.assign({}, styles.slide, styles.slide2)}>\n                        <div\n                            className=\"App\"\n                            style={{\n                                display: 'flex',\n                                flexDirection: \"column\",\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                height: '100vh',\n                                width: '100vw',\n                            }}\n                        >\n                            {\n                                /* \n                                <Hello_Component>\n                                </Hello_Component>\n\n                                <Search_Bar></Search_Bar>\n                                */\n                            }\n\n                            <Page_Center></Page_Center>\n                        </div>\n                    </div>\n\n                    <div style={Object.assign({}, styles.slide, styles.slide3)}>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: \"column\",\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                height: '100vh',\n                                width: '100vw',\n                            }}\n                        >\n                            <My_List\n                                data={[\n                                    {\n                                        \"title\": \"Github\",\n                                        \"description\": \"You know, I'm a open-minded person\",\n                                        \"url\": \"https://github.com/yingshaoxo\",\n                                    },\n                                    {\n                                        \"title\": \"Youtube\",\n                                        \"description\": \"If I could show you something magic, I will\",\n                                        \"url\": \"https://www.youtube.com/channel/UCbT9GDmkqf555ATReJor6ag\",\n                                    },\n                                    {\n                                        \"title\": \"Blogger\",\n                                        \"description\": \"I wrote tech posts here\",\n                                        \"url\": \"https://yingshaoxo.blogspot.com/\",\n                                    },\n                                ]}\n                            ></My_List>\n                        </div>\n                    </div>\n                </SwipeableViews>\n            </div>\n        );\n    }\n}\n\n\nclass App extends Component {\n    state = {\n        show_down_icon: true,\n        show_blog: false,\n        music_status: Sound.status.STOPPED\n    };\n\n    componentDidMount() {\n        let isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\n        if (isChrome) {\n            this.setState({show_blog: true})\n        } \n\n\n        window.addEventListener('scroll', () => {\n            if (this.state.show_down_icon == true) {\n                //let visual_height_of_our_page = window.innerHeight\n                let current_y = window.scrollY \n                if (current_y > 0) {\n                    this.setState({\n                        show_down_icon: false,\n                    })\n                }\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Helmet>\n                    <title>yingshaoxo | 技术宅</title>\n                    <meta name=\"author\" content=\"yingshaoxo\" />\n                    <meta name=\"description\" content=\"yingshaoxo, born in 1998, love IT and AI. Want to be a great ML engineer. So I just keep learning and practice everyday.\" />\n                    <meta name=\"keywords\" content=\"yingshaoxo, YS, 胡英杰, Python, AI, Keras, Tensorflow, React, Javascript, Kotlin, C++\" />\n                </Helmet>\n\n                <Sound \n                    url=\"chosen.mp3\"\n                    playStatus = {this.state.music_status}\n                    autoLoad = {true}\n                    volume = {10}\n                >\n                </Sound>\n\n                <Top_Tabs\n                    className=\"section\"\n                    ref={ (tabs) => { this.tabs_element = tabs } }\n                ></Top_Tabs>\n\n                {\n                (!this.state.show_blog) ? null :\n                <Iframe \n                    className=\"section\"\n                    url=\"https://blog.ai-tools-online.xyz\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    id=\"my_blog\"\n                    display=\"initial\"\n                    position=\"realtive\" />\n                }\n\n                {\n                (!this.state.show_down_icon) ? null :\n                <div style={{\n                    width:\"100vw\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                }}>\n                    <Icon icon=\"chevron-down\" color=\"selected\" size={36}\n                        onClick= {() => {\n                            let visual_height_of_our_page = window.innerHeight\n                            let current_y = window.scrollY \n                            //this.setState({show_down_icon: false})\n                            window.scrollTo(0, visual_height_of_our_page*4)\n\n                            this.setState({\n                                music_status: Sound.status.PLAYING\n                            })\n                        }}\n                        className=\"floating-icon\"\n                    />\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}